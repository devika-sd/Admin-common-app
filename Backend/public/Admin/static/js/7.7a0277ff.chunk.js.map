{"version":3,"sources":["../node_modules/react-chartjs-2/node_modules/lodash/_root.js","../node_modules/react-chartjs-2/node_modules/lodash/isObject.js","../node_modules/react-chartjs-2/node_modules/lodash/isArray.js","../node_modules/react-chartjs-2/node_modules/lodash/_getNative.js","../node_modules/react-chartjs-2/node_modules/lodash/isObjectLike.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseGetTag.js","../node_modules/react-chartjs-2/node_modules/lodash/isArrayLike.js","../node_modules/react-nvd3/dist/react-nvd3.min.js","../node_modules/react-chartjs-2/node_modules/lodash/eq.js","../node_modules/react-chartjs-2/node_modules/lodash/_ListCache.js","../node_modules/react-chartjs-2/node_modules/lodash/_assocIndexOf.js","../node_modules/react-chartjs-2/node_modules/lodash/_Symbol.js","../node_modules/react-chartjs-2/node_modules/lodash/_nativeCreate.js","../node_modules/react-chartjs-2/node_modules/lodash/_getMapData.js","../node_modules/react-chartjs-2/node_modules/lodash/_isPrototype.js","../node_modules/react-chartjs-2/node_modules/lodash/keys.js","../node_modules/react-chartjs-2/node_modules/lodash/isSymbol.js","../node_modules/react-chartjs-2/node_modules/lodash/_toKey.js","../node_modules/react-chartjs-2/node_modules/lodash/_Stack.js","../node_modules/react-chartjs-2/node_modules/lodash/_Map.js","../node_modules/react-chartjs-2/node_modules/lodash/isFunction.js","../node_modules/react-chartjs-2/node_modules/lodash/_MapCache.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseAssignValue.js","../node_modules/webpack/buildin/module.js","../node_modules/react-chartjs-2/node_modules/lodash/isArguments.js","../node_modules/react-chartjs-2/node_modules/lodash/isLength.js","../node_modules/react-chartjs-2/node_modules/lodash/isBuffer.js","../node_modules/react-chartjs-2/node_modules/lodash/isTypedArray.js","../node_modules/react-chartjs-2/node_modules/lodash/_isIndex.js","../node_modules/react-chartjs-2/node_modules/lodash/identity.js","../node_modules/react-chartjs-2/node_modules/lodash/_isKey.js","../node_modules/d3/d3.js","../node_modules/react-chartjs-2/node_modules/lodash/_freeGlobal.js","../node_modules/react-chartjs-2/node_modules/lodash/_toSource.js","../node_modules/react-chartjs-2/node_modules/lodash/_assignMergeValue.js","../node_modules/react-chartjs-2/node_modules/lodash/_defineProperty.js","../node_modules/react-chartjs-2/node_modules/lodash/_Uint8Array.js","../node_modules/react-chartjs-2/node_modules/lodash/_getPrototype.js","../node_modules/react-chartjs-2/node_modules/lodash/_overArg.js","../node_modules/react-chartjs-2/node_modules/lodash/_safeGet.js","../node_modules/react-chartjs-2/node_modules/lodash/_copyObject.js","../node_modules/react-chartjs-2/node_modules/lodash/_assignValue.js","../node_modules/react-chartjs-2/node_modules/lodash/keysIn.js","../node_modules/react-chartjs-2/node_modules/lodash/_arrayLikeKeys.js","../node_modules/react-chartjs-2/node_modules/lodash/_createAssigner.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseIteratee.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseIsEqual.js","../node_modules/react-chartjs-2/node_modules/lodash/_equalArrays.js","../node_modules/react-chartjs-2/node_modules/lodash/_isStrictComparable.js","../node_modules/react-chartjs-2/node_modules/lodash/_matchesStrictComparable.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseGet.js","../node_modules/react-chartjs-2/node_modules/lodash/_castPath.js","../node_modules/nvd3/build/nv.d3.js","../node_modules/react-bootstrap/es/Row.js","../node_modules/react-chartjs-2/node_modules/lodash/merge.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseMerge.js","../node_modules/react-chartjs-2/node_modules/lodash/_listCacheClear.js","../node_modules/react-chartjs-2/node_modules/lodash/_listCacheDelete.js","../node_modules/react-chartjs-2/node_modules/lodash/_listCacheGet.js","../node_modules/react-chartjs-2/node_modules/lodash/_listCacheHas.js","../node_modules/react-chartjs-2/node_modules/lodash/_listCacheSet.js","../node_modules/react-chartjs-2/node_modules/lodash/_stackClear.js","../node_modules/react-chartjs-2/node_modules/lodash/_stackDelete.js","../node_modules/react-chartjs-2/node_modules/lodash/_stackGet.js","../node_modules/react-chartjs-2/node_modules/lodash/_stackHas.js","../node_modules/react-chartjs-2/node_modules/lodash/_stackSet.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseIsNative.js","../node_modules/react-chartjs-2/node_modules/lodash/_getRawTag.js","../node_modules/react-chartjs-2/node_modules/lodash/_objectToString.js","../node_modules/react-chartjs-2/node_modules/lodash/_isMasked.js","../node_modules/react-chartjs-2/node_modules/lodash/_coreJsData.js","../node_modules/react-chartjs-2/node_modules/lodash/_getValue.js","../node_modules/react-chartjs-2/node_modules/lodash/_mapCacheClear.js","../node_modules/react-chartjs-2/node_modules/lodash/_Hash.js","../node_modules/react-chartjs-2/node_modules/lodash/_hashClear.js","../node_modules/react-chartjs-2/node_modules/lodash/_hashDelete.js","../node_modules/react-chartjs-2/node_modules/lodash/_hashGet.js","../node_modules/react-chartjs-2/node_modules/lodash/_hashHas.js","../node_modules/react-chartjs-2/node_modules/lodash/_hashSet.js","../node_modules/react-chartjs-2/node_modules/lodash/_mapCacheDelete.js","../node_modules/react-chartjs-2/node_modules/lodash/_isKeyable.js","../node_modules/react-chartjs-2/node_modules/lodash/_mapCacheGet.js","../node_modules/react-chartjs-2/node_modules/lodash/_mapCacheHas.js","../node_modules/react-chartjs-2/node_modules/lodash/_mapCacheSet.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseFor.js","../node_modules/react-chartjs-2/node_modules/lodash/_createBaseFor.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseMergeDeep.js","../node_modules/react-chartjs-2/node_modules/lodash/_cloneBuffer.js","../node_modules/react-chartjs-2/node_modules/lodash/_cloneTypedArray.js","../node_modules/react-chartjs-2/node_modules/lodash/_cloneArrayBuffer.js","../node_modules/react-chartjs-2/node_modules/lodash/_copyArray.js","../node_modules/react-chartjs-2/node_modules/lodash/_initCloneObject.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseCreate.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseIsArguments.js","../node_modules/react-chartjs-2/node_modules/lodash/isArrayLikeObject.js","../node_modules/react-chartjs-2/node_modules/lodash/stubFalse.js","../node_modules/react-chartjs-2/node_modules/lodash/isPlainObject.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseIsTypedArray.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseUnary.js","../node_modules/react-chartjs-2/node_modules/lodash/_nodeUtil.js","../node_modules/react-chartjs-2/node_modules/lodash/toPlainObject.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseTimes.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseKeysIn.js","../node_modules/react-chartjs-2/node_modules/lodash/_nativeKeysIn.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseRest.js","../node_modules/react-chartjs-2/node_modules/lodash/_overRest.js","../node_modules/react-chartjs-2/node_modules/lodash/_apply.js","../node_modules/react-chartjs-2/node_modules/lodash/_setToString.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseSetToString.js","../node_modules/react-chartjs-2/node_modules/lodash/constant.js","../node_modules/react-chartjs-2/node_modules/lodash/_shortOut.js","../node_modules/react-chartjs-2/node_modules/lodash/_isIterateeCall.js","../node_modules/react-chartjs-2/node_modules/lodash/assign.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseKeys.js","../node_modules/react-chartjs-2/node_modules/lodash/_nativeKeys.js","../node_modules/react-chartjs-2/node_modules/lodash/find.js","../node_modules/react-chartjs-2/node_modules/lodash/_createFind.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseMatches.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseIsMatch.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseIsEqualDeep.js","../node_modules/react-chartjs-2/node_modules/lodash/_SetCache.js","../node_modules/react-chartjs-2/node_modules/lodash/_setCacheAdd.js","../node_modules/react-chartjs-2/node_modules/lodash/_setCacheHas.js","../node_modules/react-chartjs-2/node_modules/lodash/_arraySome.js","../node_modules/react-chartjs-2/node_modules/lodash/_cacheHas.js","../node_modules/react-chartjs-2/node_modules/lodash/_equalByTag.js","../node_modules/react-chartjs-2/node_modules/lodash/_mapToArray.js","../node_modules/react-chartjs-2/node_modules/lodash/_setToArray.js","../node_modules/react-chartjs-2/node_modules/lodash/_equalObjects.js","../node_modules/react-chartjs-2/node_modules/lodash/_getAllKeys.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseGetAllKeys.js","../node_modules/react-chartjs-2/node_modules/lodash/_arrayPush.js","../node_modules/react-chartjs-2/node_modules/lodash/_getSymbols.js","../node_modules/react-chartjs-2/node_modules/lodash/_arrayFilter.js","../node_modules/react-chartjs-2/node_modules/lodash/stubArray.js","../node_modules/react-chartjs-2/node_modules/lodash/_getTag.js","../node_modules/react-chartjs-2/node_modules/lodash/_DataView.js","../node_modules/react-chartjs-2/node_modules/lodash/_Promise.js","../node_modules/react-chartjs-2/node_modules/lodash/_Set.js","../node_modules/react-chartjs-2/node_modules/lodash/_WeakMap.js","../node_modules/react-chartjs-2/node_modules/lodash/_getMatchData.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseMatchesProperty.js","../node_modules/react-chartjs-2/node_modules/lodash/get.js","../node_modules/react-chartjs-2/node_modules/lodash/_stringToPath.js","../node_modules/react-chartjs-2/node_modules/lodash/_memoizeCapped.js","../node_modules/react-chartjs-2/node_modules/lodash/memoize.js","../node_modules/react-chartjs-2/node_modules/lodash/toString.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseToString.js","../node_modules/react-chartjs-2/node_modules/lodash/_arrayMap.js","../node_modules/react-chartjs-2/node_modules/lodash/hasIn.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseHasIn.js","../node_modules/react-chartjs-2/node_modules/lodash/_hasPath.js","../node_modules/react-chartjs-2/node_modules/lodash/property.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseProperty.js","../node_modules/react-chartjs-2/node_modules/lodash/_basePropertyDeep.js","../node_modules/react-chartjs-2/node_modules/lodash/findIndex.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseFindIndex.js","../node_modules/react-chartjs-2/node_modules/lodash/toInteger.js","../node_modules/react-chartjs-2/node_modules/lodash/toFinite.js","../node_modules/react-chartjs-2/node_modules/lodash/toNumber.js","../node_modules/react-chartjs-2/node_modules/lodash/_baseTrim.js","../node_modules/react-chartjs-2/node_modules/lodash/_trimmedEndIndex.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/chart.js/dist/chunks/helpers.segment.js","../node_modules/chart.js/dist/chart.esm.js","../node_modules/chart.js/auto/auto.esm.js","../node_modules/react-chartjs-2/dist/index.modern.js"],"names":["freeGlobal","__webpack_require__","freeSelf","self","Object","root","Function","module","exports","value","type","isArray","Array","baseIsNative","getValue","object","key","undefined","Symbol","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","toStringTag","isFunction","isLength","length","t","e","n","r","o","id","loaded","call","m","c","p","__esModule","default","defineProperty","i","u","s","a","f","l","d","h","y","v","b","g","_","x","O","j","w","S","P","F","this","apply","arguments","addGraph","renderChart","bind","isCallable","props","ready","resizeHandler","clear","chart","rendering","models","renderStart","parsedProps","bindFunctions","context","getValueFunction","margin","options","pick","propsByPrefix","configureComponents","concat","without","configure","selection","select","refs","svg","datum","utils","windowResize","update","pie","dispatch","lines","renderEnd","on","isPlainObject","chartOptions","containerStyle","createElement","ref","className","style","Component","prototype","hasOwnProperty","assign","G","B","W","_e","window","Math","__g","version","__e","TypeError","split","forEach","keys","join","getKeys","getSymbols","isEnum","create","getProto","getPrototypeOf","propertyIsEnumerable","getDesc","getOwnPropertyDescriptor","setDesc","setDescs","defineProperties","getNames","getOwnPropertyNames","getOwnPropertySymbols","each","toString","slice","enumerable","configurable","writable","ReferenceError","constructor","get","JSON","E","stringify","M","k","C","D","N","T","q","z","_k","set","A","V","H","I","push","J","R","U","for","keyFor","useSetter","useSimple","_e2","random","__proto__","setPrototypeOf","check","indexOf","includes","negate","filterObject","name","console","warn","reduce","substr","replace","other","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","entries","index","entry","has","eq","array","nativeCreate","getNative","isKeyable","map","data","__data__","objectProto","Ctor","arrayLikeKeys","baseKeys","isArrayLike","baseGetTag","isObjectLike","symbolTag","isSymbol","INFINITY","result","stackClear","stackDelete","stackGet","stackHas","stackSet","Stack","size","Map","isObject","asyncTag","funcTag","genTag","proxyTag","tag","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","webpackPolyfill","deprecate","paths","children","baseIsArguments","isArguments","MAX_SAFE_INTEGER","stubFalse","freeExports","nodeType","freeModule","Buffer","isBuffer","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","isTypedArray","reIsUint","test","reIsDeepProp","reIsPlainProp","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3","d3_arraySlice","d3_array","list","d3_document","document","d3_documentElement","node","ownerDocument","documentElement","d3_window","defaultView","childNodes","Date","now","setProperty","error","d3_element_prototype","Element","d3_element_setAttribute","setAttribute","d3_element_setAttributeNS","setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","space","local","priority","d3_ascending","NaN","d3_number","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","mid","right","ascending","descending","min","max","extent","sum","mean","quantile","values","floor","median","numbers","sort","variance","deviation","sqrt","d3_bisect","d3_transposeLength","bisectLeft","bisect","bisectRight","bisector","shuffle","i0","i1","permute","indexes","permutes","pairs","p1","transpose","matrix","row","zip","merge","arrays","merged","abs","d3_class","ctor","properties","d3_Map","range","start","stop","step","Infinity","Error","d3_range_integerScale","d3_map_proto","d3_map_zero","d3_map_escape","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","source","method","d3_vendorSymbol","charAt","toUpperCase","d3_vendorPrefixes","prefixName","remove","empty","nest","sortValues","rollup","sortKeys","mapType","depth","keyValue","setter","valuesByKey","sortKey","keyMap","order","add","behavior","rebind","d3_noop","d3_dispatch","d3_dispatch_event","listeners","listenerByName","event","listener","d3_eventPreventDefault","preventDefault","d3_eventSource","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","requote","d3_requote_re","d3_subclass","property","d3_selection","groups","d3_selectionPrototype","d3_select","querySelector","d3_selectAll","querySelectorAll","_d3_selectMatches","d3_selectMatcher","matches","Sizzle","matchesSelector","d3_selection_selector","selector","d3_selection_selectorAll","subgroup","subnode","group","subgroups","parentNode","selectAll","d3_nsXhtml","d3_nsPrefix","xhtml","xlink","xml","xmlns","d3_selection_attr","ns","qualify","removeAttributeNS","removeAttribute","d3_collapse","trim","d3_selection_classedRe","RegExp","d3_selection_classes","d3_selection_classed","d3_selection_classedName","re","classList","getAttribute","lastIndex","d3_selection_style","removeProperty","d3_selection_property","d3_selection_creator","createElementNS","namespace","namespaceURI","d3_selectionRemove","parent","removeChild","d3_selection_dataNode","d3_selection_filter","d3_selection_each","callback","d3_selection_enter","d3_selection_enterPrototype","prefix","attr","getAttributeNS","classed","contains","getComputedStyle","getPropertyValue","text","textContent","html","innerHTML","append","appendChild","insert","before","insertBefore","groupData","nodeData","n0","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","enter","exit","filter","next","nextSibling","comparator","args","d3_selection_on","capture","wrap","d3_selection_onListener","d3_selection_onFilters","onRemove","removeEventListener","$","d3_selection_onFilter","addEventListener","match","upgroup","j0","d3_selection_enterInsertBefore","nodes","mouseenter","mouseleave","related","relatedTarget","compareDocumentPosition","d3_event_dragSelect","d3_event_dragId","d3_event_dragSuppress","click","suppressClick","off","setTimeout","mouse","container","d3_mousePoint","d3_mouse_bug44083","navigator","userAgent","changedTouches","ownerSVGElement","createSVGPoint","point","scrollX","scrollY","ctm","position","top","padding","border","getScreenCTM","pageX","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","touch","touches","drag","origin","mousedown","dragstart","touchstart","subject","move","end","dragOffset","correspondingElement","dragged","dragId","dragName","dragSubject","dx","dy","position1","position0","dragRestore","ε","ε2","π","PI","τ","τε","halfπ","d3_radians","d3_degrees","d3_sgn","d3_cross2d","d3_acos","acos","d3_asin","asin","d3_cosh","exp","d3_haversin","sin","ρ","SQRT2","interpolateZoom","p0","ux0","uy0","w0","ux1","uy1","w1","d2","log","d1","b0","b1","r0","r1","coshr0","d3_sinh","duration","zoom","translate0","center0","center","mousewheelTimer","touchtime","x0","x1","y0","y1","view","scaleExtent","d3_behavior_zoomInfinity","zooming","mousemove","mouseup","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","scaleTo","translateTo","zoomTo","that","__chart__","pow","transition","rescale","domain","invert","zoomstarted","zoomed","scale","translate","zoomended","location0","d3_selection_interrupt","scale0","locations0","distance0","zoomName","touchmove","touchend","targets","relocate","started","moved","ended","changed","LN2","l0","l1","distance1","scale1","clearTimeout","d3_behavior_zoomDelta","shiftKey","ceil","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","tween","cx","cy","copy","d3_color","d3_hsl","d3_rgb_parse","d3_rgb_hsl","color","rgb","hsl","d3_hslPrototype","d3_hsl_rgb","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab_hcl","d3_lab","d3_rgb_lab","brighter","darker","hcl","d3_hclPrototype","d3_hcl_lab","cos","d3_lab_K","lab","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_labPrototype","d3_lab_rgb","d3_xyz_rgb","d3_lab_xyz","atan2","d3_xyz_lab","d3_rgbNumber","d3_rgbString","d3_rgbPrototype","d3_rgb_hex","format","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","xhr","headers","request","XMLHttpRequest","responseType","respond","status","responseText","d3_xhrHasResponse","load","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","send","open","setRequestHeader","overrideMimeType","beforesend","abort","d3_xhr_fixCallback","functor","dsv","delimiter","reFormat","delimiterCode","charCodeAt","typedResponse","parse","formatRow","formatValue","parseRows","eol","EOL","EOF","rows","token","formatRows","fieldSet","fields","field","csv","tsv","d3_timer_queueHead","d3_timer_queueTail","d3_timer_interval","d3_timer_timeout","d3_timer_frame","d3_timer","delay","then","timer","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","time","d3_format_precision","LN10","flush","d3_formatPrefixes","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","substring","reverse","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","after","lastIndexOf","String","fromCharCode","_x","X","toPrecision","toExponential","toFixed","d3_time","d3_date","d3_date_utc","UTC","getDate","getUTCDate","getDay","getUTCDay","getFullYear","getUTCFullYear","getHours","getUTCHours","getMilliseconds","getUTCMilliseconds","getMinutes","getUTCMinutes","getMonth","getUTCMonth","getSeconds","getUTCSeconds","getTime","getTimezoneOffset","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setFullYear","setUTCFullYear","setHours","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","d3_time_interval","number","date","d0","offset","dt","times","utc","d3_time_interval_utc","d3_locale_timeFormat","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","d3_time_format","template","string","d3_time_formatPads","d3_time_formats","L","Z","d3_time_parse","localZ","d3_time_parsers","multi","d3_time_formatMulti","d3_time_periodLookup","d3_time_dayRe","d3_time_formatRe","d3_time_dayLookup","d3_time_formatLookup","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_monthRe","d3_time_monthLookup","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","_d","d3_time_formatPad","dayOfYear","sundayOfYear","mondayOfYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","year","day","years","interval","week","sunday","weeks","weekOfYear","-","0","d3_time_numberRe","d3_time_percentRe","names","zs","zh","zm","formats","numberFormat","timeFormat","d3_locale_enUS","d3_adder","geo","d3_adderSum","d3_adderTemp","reset","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","stream","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","sphere","Point","coordinates","MultiPoint","LineString","d3_geo_streamLine","MultiLineString","Polygon","d3_geo_streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","area","d3_geo_areaSum","d3_geo_area","d3_geo_centroidW0","d3_geo_centroidW1","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_areaRingSum","d3_geo_areaRingStart","λ00","φ00","λ0","cosφ0","sinφ0","nextPoint","λ","φ","dλ","sdλ","adλ","cosφ","sinφ","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","bounds","φ0","λ1","φ1","λ_","λ__","φ__","dλSum","ranges","bound","ringPoint","ringStart","ringEnd","linePoint","normal","inflection","λi","antimeridian","φi","angle","compareRanges","withinRange","best","centroid","d3_geo_centroid","d3_geo_centroidPoint","d3_geo_centroidLineStart","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","d3_geo_centroidPointXYZ","z0","cz","d3_geo_compose","compose","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","clip","segment","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","points","current","isSubject","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","line","rotatedClipStart","pointRing","polygon","meridian","parallel","meridianNormal","polarAngle","winding","ring","point0","arc","intersection","φarc","d3_geo_pointInPolygon","polygonStarted","d3_geo_clipSort","pointLine","buffer","d3_geo_clipBufferListener","ringListener","clean","ringSegments","pop","shift","d3_geo_clipSegmentLength1","rejoin","d3_geo_clipAntimeridian","_clean","sλ0","sλ1","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianIntersect","from","to","direction","d3_geom_clipLine","ax","ay","d3_geo_clipExtentMAX","d3_geo_clipExtent","x__","y__","v__","x_","y_","v_","first","listener_","bufferListener","wn","insidePolygon","inside","visible","a1","corner","comparePoints","ca","cb","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","ρ0","forward","ρ0_y","clipExtent","_stream","output","valid","conicEqualArea","raw","albers","albersUsa","_point","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathAreaPolygon","d3_geo_pathBoundsX0","d3_geo_pathBoundsY0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY1","d3_geo_pathArea","d3_geo_pathAreaRingStart","x00","y00","d3_geo_pathBounds","d3_geo_pathBuffer","pointCircle","d3_geo_pathBufferCircle","pointLineStart","lineEndPolygon","pointRadius","radius","d3_geo_lengthSum","d3_geo_pathCentroid","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","_pointRadius","moveTo","lineTo","closePath","d3_geo_resample","project","δ2","cosMinDistance","maxDepth","resample","a00","b00","c00","a0","c0","resampleLineTo","d3_geo_transformPoint","c1","φ2","λ2","x2","y2","dx2","dy2","dz","d3_geo_transform","d3_geo_projection","projectRotate","δx","δy","projectResample","δλ","δφ","δγ","preclip","postclip","clipAngle","projection","d3_geo_rotation","invalidate","d3_geo_projectionRadians","cr","smallRadius","notHemisphere","v0","v00","_clean2","point2","point1","code","intersect","d3_geo_circleInterpolate","two","n1","n2","n2n2","n1n2","determinant","c2","n1xn2","uu","t2","polar","q1","d3_geo_clipCircle","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","path","projectStream","contextStream","cacheStream","d3_geo_pathProjectStream","transform","methods","_stream2","projectionMutator","equirectangular","circle","distance","Δλ","sinΔλ","cosΔλ","sinφ1","graticule","X1","X0","Y1","Y0","DX","DY","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","d3_geo_interpolate","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","d3_geo_conicConformal","d3_geo_mercator","d3_geo_conicEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","d3_geo_mercatorProjection","clipAuto","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","stereographic","transverseMercator","geom","vertices","fx","fy","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","input","d3_geom_voronoiEdges","d3_geom_voronoiCells","d3_geom_voronoiBeaches","d3_geom_voronoiFirstCircle","d3_geom_voronoiCircles","d3_geom_voronoiBeachPool","d3_geom_voronoiCirclePool","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiRemoveBeach","vertex","previous","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","newArc","lSite","bx","by","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ha","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","d3_geom_voronoiEdge","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","splice","d3_geom_voronoiClipEdges","cell","iHalfEdge","halfEdges","nHalfEdges","cells","iCell","prepare","d3_geom_voronoiCloseCells","diagram","grandpa","uncle","sibling","voronoi","d3_geom_voronoiClipExtent","polygons","links","triangles","s0","s1","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","delaunay","quadtree","compat","xs","ys","x1_","y1_","x2_","y2_","leaf","nx","ny","insertChild","nPoint","xm","ym","below","visit","d3_geom_quadtreeVisit","sx","sy","find","closestPoint","minDistance2","distance2","d3_geom_quadtreeFind","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolators","d3_interpolateArray","na","nb","interpolateArray","d3_ease_default","d3_ease","linear","poly","quad","d3_ease_quad","cubic","d3_ease_cubic","d3_ease_sin","d3_ease_exp","d3_ease_circle","elastic","back","bounce","d3_ease_bounce","d3_ease_mode","in","out","d3_ease_reverse","in-out","d3_ease_reflect","out-in","d3_ease_cubicInOut","t3","d3_interpolateRound","d3_transform","kx","d3_transformNormalize","kz","d3_transformDot","ky","skew","ease","interpolateHcl","ah","ac","al","bh","bc","bl","interpolateHsl","as","interpolateLab","aa","ba","interpolateRound","baseVal","consolidate","d3_transformIdentity","d3_interpolateTransformPop","d3_interpolateTransform","ta","tb","d3_interpolateTranslate","ra","rb","d3_interpolateRotate","wa","wb","d3_interpolateSkew","ka","kb","d3_interpolateScale","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","aNodes","d3_layout_bundleAncestors","bNodes","aNode","bNode","sharedNode","d3_layout_bundleLeastCommonAncestor","ancestors","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","interpolateTransform","layout","bundle","chord","chords","sortGroups","sortSubgroups","sortChords","relayout","groupSums","groupIndex","subgroupIndex","di","dj","subindex","startAngle","endAngle","resort","force","alpha","distances","strengths","charges","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","charge","chargeDistance2","d3_layout_forceChargeDistance2","gravity","theta2","repulse","dw","dn","pointCharge","dragmove","resume","tick","weight","d3_layout_forceAccumulate","chargeDistance","theta","neighbors","dimension","candidates","d3_layout_hierarchyRebind","hierarchy","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","stack","childs","revalue","partition","Number","d3_layout_pieSortByValue","padAngle","da","pa","arcs","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","d3_layout_stackMaxIndex","sums","d3_layout_stackReduceSum","bottom","tops","bottoms","silhouette","wiggle","s2","s3","o0","expand","zero","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","d3_layout_packUnlink","db","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeAncestor","vim","ancestor","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","d3_scale_niceStep","d3_scale_niceIdentity","histogram","frequency","valuer","ranger","binner","bin","bins","thresholds","pack","d3_layout_packTransform","separation","nodeSize","root0","root1","node1","queue","wrapTree","firstWalk","secondWalk","sizeNode","tx","siblings","d3_layout_treeShift","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","cluster","previousNode","d3_layout_clusterX","d3_layout_clusterY","d3_layout_clusterLeft","d3_layout_clusterRight","treemap","stickies","pad","sticky","mode","ratio","squarify","score","remaining","worst","stickify","rmax","rmin","padConstant","µ","σ","logNormal","bates","irwinHall","d3_scale_polylinear","d3_scale_linearRebind","d3_scale_linearNice","d3_scale_linearTickRange","span","err","d3_scale_linearTicks","d3_scale_linearTickFormat","d3_scale_linearPrecision","d3_scale_linearFormatSignificant","d3_scale_linearFormatPrecision","d3_scale_linear","clamp","rangeRound","ticks","tickFormat","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_powPow","d3_scale_pow","powp","powb","ordinal","d3_scale_ordinal","rangeBand","steps","xi","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","d3_zero","d3_scale_quantile","quantiles","invertExtent","quantize","d3_scale_quantize","threshold","d3_scale_threshold","identity","d3_scale_identity","innerRadius","d3_svg_arcInnerRadius","outerRadius","d3_svg_arcOuterRadius","cornerRadius","padRadius","d3_svg_arcAuto","d3_svg_arcStartAngle","d3_svg_arcEndAngle","d3_svg_arcPadAngle","cw","rc","circleSegment","rp","ap","d3_svg_arcSweep","h1","h0","rc1","rc0","oc","kc","lc","t30","d3_svg_arcCornerTangents","t12","t03","t21","x01","y01","ox","oy","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","defined","d3_svg_lineLinear","interpolateKey","tension","d3_svg_lineInterpolators","linear-closed","d3_svg_lineLinearClosed","step-before","d3_svg_lineStepBefore","step-after","d3_svg_lineStepAfter","basis","d3_svg_lineBasis","basis-open","pi","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","basis-closed","cardinal","d3_svg_lineHermite","d3_svg_lineCardinalTangents","cardinal-open","cardinal-closed","monotone","tangents","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","lp","p2","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineRadial","d3_svg_area","interpolateReverse","points0","points1","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","radial","curve","diagonal","p3","projection_","d3_svg_diagonalRadialProjection","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionNamespace","d3_transitionInherit","d3_transitionNode","d3_transition","interrupt","d3_selection_interruptNS","lock","activeId","active","count","d3_transitionPrototype","d3_transition_tween","d3_transition_text","inherit","tweens","elapsed","cancelId","cancel","subnodes","nameNS","attrNull","attrNullNS","attrTween","styleNull","styleTween","inheritId","id0","id1","axis","tickFormat_","orient","d3_svg_axisDefaultOrient","innerTickSize","outerTickSize","tickPadding","tickArguments_","tickValues","tickTransform","tickEnter","tickExit","tickUpdate","tickSpacing","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","d3_svg_axisX","d3_svg_axisY","d3_svg_axisOrients","tickSize","tickSubdivide","brush","xExtentDomain","yExtentDomain","xExtent","yExtent","xClamp","yClamp","resizes","d3_svg_brushResizes","brushstart","background","resize","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","eventTarget","event_","resizing","resizingX","resizingY","dragging","keyCode","brushmove","brushend","ex","ey","altKey","move1","extent1","extent0","yi","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","d3_time_formatIsoNative","toISOString","d3_time_scale","tickMethod","d3_time_scaleSteps","d3_time_scaleMilliseconds","d3_time_scaleDate","skip","skipped","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","d3_json","d3_html","createRange","selectNode","body","createContextualFragment","json","responseXML","global","funcToString","func","baseAssignValue","Uint8Array","getPrototype","overArg","arg","assignValue","customizer","isNew","newValue","objValue","baseKeysIn","baseTimes","isIndex","inherited","isArr","isArg","isBuff","isType","skipIndexes","baseRest","isIterateeCall","assigner","sources","guard","baseMatches","baseMatchesProperty","baseIsEqualDeep","baseIsEqual","bitmask","SetCache","arraySome","cacheHas","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","equalFunc","isPartial","arrLength","othLength","arrStacked","othStacked","seen","arrValue","othValue","compared","othIndex","srcValue","castPath","toKey","isKey","stringToPath","nv","dev","tooltip","charts","logs","dom","oThis","aArgs","fToBind","fNOP","fBound","startTime","endTime","totalTime","deprecated","info","render","render_start","renderLoop","graph","generate","render_end","obj","write","fastdom","mutate","read","measure","interactiveGuideline","height","xScale","showGuideLine","svgContainer","isMSIE","ActiveXObject","layer","availableWidth","availableHeight","mouseHandler","mouseX","mouseY","subtractMargin","mouseOutAnyReason","offsetX","offsetY","tagName","nvPointerEventsClass","elementMouseout","renderGuideLine","hidden","pointXValue","elementIndex","elementMousemove","elementDblclick","elementClick","elementMouseDown","elementMouseUp","guideLine","NaNtoZero","hideDelay","interactiveBisect","searchVal","xAccessor","_xAccessor","currentValue","nextIndex","nextValue","nearestValueIndex","yDistMax","indexToHighlight","delta","snapDistance","classes","lastPosition","enabled","headerEnabled","valueFormatter","headerFormatter","keyFormatter","contentGenerator","elem","table","trowEnter","highlight","total","percent","opacityScale","outerHTML","footer","pos","client","dataSeriesExists","positionTooltip","gravityOffset","tmp","offsetHeight","offsetWidth","clientWidth","clientHeight","calcGravityOffset","old_translate","new_translate","translateInterpolator","is_hidden","nvtooltip","newContent","optionsFunc","_options","chartContainer","fixedTop","initOptions","windowSize","innerWidth","innerHeight","compatMode","isDate","isNumber","handler","getColor","defaultColor","color_scale","customTheme","dictionary","getKey","defaultColors","defIndex","pjax","content","href","fragment","replaceChild","history","pushState","state","calcApproxTextWidth","svgTextElem","fontSize","textLength","watchTransition","renderWatch","_duration","renderStack","model","__rendered","every","deepExtend","dst","srcObj","_setState","_getState","init","getter","fn","settings","calcTicksX","numTicks","numValues","stream_len","calcTicksY","initOption","_calls","_overrides","ops","calls","inheritOptionsD3","oplist","_d3options","item","arrayUnique","symbolMap","inheritOptions","_inherited","d3ops","initSVG","nvd3-svg","sanitizeHeight","sanitizeWidth","noData","opt","noDataText","wrapTicks","word","words","lineNumber","tspan","getComputedTextLength","arrayEquals","array1","array2","pointIsInArc","pt","ptData","d3Arc","r2","theta1","dist","tickFormatMaxMin","axisLabelText","showMaxMin","rotateLabels","rotateYLabel","staggerLabels","isOrdinal","axisLabelDistance","fmt","xLabelMargin","axisMaxMin","axisLabel","maxTextWidth","textHeight","xTicks","rotateLabelsRule","box","maxMinRange","boxPlot","xDomain","xRange","yDomain","yRange","xScale0","yScale0","yScale","getX","label","getQ1","Q1","getQ2","Q2","getQ3","Q3","getWl","whisker_low","getWh","whisker_high","getOlItems","outliers","getOlValue","getOlLabel","getOlColor","maxBoxWidth","yData","q3","wl","wh","olItems","boxplots","boxEnter","hover","box_width","box_left","box_right","endpoint","elementMouseover","q2","itemColor","outlierValue","outlierLabel","outlierColor","boxPlotChart","boxplot","xAxis","yAxis","showXAxis","showYAxis","rightAlignYAxis","beforeUpdate","gEnter","defsEnter","disabled","evt","tooltipContent","bullet","markers","markerLines","measures","rangeLabels","markerLabels","markerLineLabels","measureLabels","forceX","defaultRangeLabels","legacyRangeClassNames","sortLabels","labels","lz","iA","iB","rangez","markerz","markerLinez","measurez","rangeLabelz","markerLabelz","markerLineLabelz","measureLabelz","il","rangeClassNames","xp1","h3","markerData","marker","markerLinesData","bulletChart","title","subtitle","bulletWrap","candlestickBar","getY","getOpen","getClose","close","getHigh","high","getLow","low","forceY","padData","clipEdge","interactive","barWidth","wrapEnter","chartClick","tickGroups","highlightPoint","pointIndex","isHoverOver","clearHighlights","cumulativeLineChart","legend","controls","interactiveLayer","marginTop","showLegend","showControls","useInteractiveGuideline","rescaleY","defaultState","average","noErrorCheck","updateState","currentYDomain","stateGetter","stateSetter","indexDrag","updateZero","stateChange","idx","indexifyYGetter","indexValue","tempDisabled","display","indexify","getCurrentYDomain","interactivePointerEvents","controlsData","rightAlign","linesWrap","seriesIndex","avgLineData","avgLines","getAvgLineY","yVal","indexLine","oldDuration","_ticks","newState","singlePoint","pointXLocation","allData","yValue","xValue","seriesDomains","useVoronoi","discreteBar","showValues","valueFormat","rectClass","seriesData","bars","barsEnter","element","stopPropagation","elementDblClick","discreteBarChart","discretebar","wrapLabels","distribution","getData","naxis","distWrap","focus","brushExtent","syncBrushing","pointActive","contentWrap","onBrush","brushBG","brushBGenter","gBrush","shouldDispatch","leftWidth","rightWidth","xTickFormat","yTickFormat","forceDirectedGraph","linkDist","nodeExtras","linkExtras","nodeFieldSet","Set","nodeColor","furiousLegend","maxKeyLength","radioButtonMode","expanded","vers","setTextColor","disengaged","setBGColor","seriesShape","seriesEnter","versPadding","seriesText","legendMouseover","legendMouseout","legendClick","userDisabled","legendDblclick","seriesWidths","legendText","nodeTextLength","trimmedKey","seriesPerRow","legendWidth","columnWidths","prev","cur","xPositions","curX","xpos","ypos","newxpos","maxwidth","historicalBar","rval","historicalBarChart","bar_model","transitionDuration","tooltipHide","ohlcBarChart","ohlcBar","candlestickBarChart","enableDoubleClick","setBGOpacity","scatter","strokeWidth","isArea","pointSize","pointDomain","scatterWrap","fillOpacity","areaPaths","linePaths","lineChart","legendPosition","focusEnable","focusEnter","updateXAxis","updateYAxis","disableTooltip","currentValues","pointYValue","yPos","x2Axis","y2Axis","focusHeight","focusShowAxisX","focusShowAxisY","focusMargin","lineWithFocusChart","linePlusBarChart","y4","lines2","bars2","y1Axis","y3Axis","y4Axis","margin2","legendLeftAxisHint","legendRightAxisHint","switchYAxisOrder","allDisabled","availableHeight1","availableHeight2","dataBars","bar","dataLines","series1","series2","contextEnter","legendXPosition","originalKey","bars2Wrap","lines2Wrap","dataLine","focusBarsWrap","focusLinesWrap","barsOpacity","linesOpacity","y1Opacity","y2Opacity","main","getLinesAxis","getBarsAxis","multiBar","stacked","stackOffset","hideable","barColor","groupSpacing","last_datalength","nonStackableCount","parsed","nonStackable","nonStackableSeries","posBase","negBase","exitTransition","barSelection","multiBarChart","multibar","controlLabels","reduceXTicks","controlWidth","grouped","getTranslate","totalInBetweenTicks","multiBarHorizontal","getYerr","yErr","showBarLabels","valuePadding","xerr","yerr","multiBarHorizontalChart","controlsPosition","multiChart","yDomain1","yDomain2","yScale1","yScale2","lines1","scatters1","scatters2","bars1","stack1","stackedArea","stack2","yAxis1","yAxis2","dataLines1","dataLines2","dataScatters1","dataScatters2","dataBars1","dataBars2","dataStack1","dataStack2","color_array","lines1Wrap","scatters1Wrap","bars1Wrap","stack1Wrap","scatters2Wrap","stack2Wrap","extraValue1BarStacked","aVal","extraValue2BarStacked","mouseover_line","yaxis","mouseover_scatter","mouseover_stack","mouseover_bar","serieIndex","parallelCoordinates","foreground","dimensions","undefinedValuesLabel","dimensionData","enabledDimensions","dimensionNames","displayBrush","filters","axisWithUndefinedValues","lineTension","newData","val","dataValues","currentPosition","oldDomainMaxValue","displayMissingValuesline","currentTicks","onlyUndefinedValues","hasOnlyNaN","hasNaN","missingValuesline","missingValueslineText","axisDrag","__origin__","dimensionPosition","dimensionsOrder","lineData","dimensionsEnter","restoreBrush","actives","extents","formerActive","newscale","brushDomain","updateTicks","isActive","hasActiveBrush","brushEnd","activeChanged","dimensionFormats","parallelCoordinatesChart","nanValue","originalPosition","isSorted","str","tp","dim","dd","showLabels","labelsOutside","labelType","labelThreshold","hideOverlapLabels","donut","growOnHover","titleOffset","labelSunbeamLayout","donutRatio","arcsRadius","arcsOver","arcsRadiusOuter","arcsRadiusInner","outer","inner","g_pie","arcOver","slices","pieLabels","ae","_current","labelsArc","rotateAngle","labelLocationHash","createHashKey","getSlicePercentage","hashKey","getBBox","topLeft","topRight","bottomLeft","bottomRight","pieLabelsOutside","donutLabelsOutside","labelFormat","pieChart","showTooltipPercent","pieWrap","sankey","nodeWidth","nodePadding","sinksRight","iterations","sourceLinks","targetLinks","nextNodes","remainingNodes","moveSinksRight","computeNodeBreadths","nodesByBreadth","initializeNodeDepth","resolveCollisions","computeLinkDepths","relaxRightToLeft","relaxLeftToRight","weightedSource","breadth","weightedTarget","ty","ascendingDepth","computeNodeDepths","curvature","ascendingSourceDepth","ascendingTargetDepth","sankeyChart","units","formatNumber","linkTitle","nodeFillColor","nodeStrokeColor","nodeTitle","showError","message","testData","isDataValid","dataAvailable","nodeStyle","fillColor","strokeColor","xDom","yDom","width0","height0","timeoutID","pointBorderColor","getSize","getShape","shape","forceSize","notActive","padDataOuter","clipVoronoi","showVoronoi","clipRadius","sizeDomain","sizeRange","interactiveUpdateDelay","needsUpdate","_sizeRange_def","_cache","delCache","getDiffs","cache","getCache","diffs","logScale","scaleDiff","sizeDiff","domainDiff","updateInteractiveLayer","pX","pY","pointArray","pointPaths","vPointPaths","mouseEventCallback","el","mDispatch","scrollTop","pageYOffset","scrollLeft","pageXOffset","relativePos","titles","pointScale","pointRange","forcePoint","pointShape","scatterChart","distX","distY","showDistX","showDistY","regWrap","regLine","intercept","slope","sparkline","animate","showMinMaxPoints","showCurrentPoint","yValues","maxPoint","minPoint","currentPoint","sparklinePlus","paused","showLastValue","alignValue","rightAlignValue","sparklineWrap","updateValueLine","hoverValue","hoverEnter","closestIndex","getClosestIndex","dataRaw","aseries","dataFiltered","zeroArea","areaMouseover","areaMouseout","areaClick","d3_stackedOffset_stackPercent","stackData","stackedAreaChart","showTotalInTooltip","totalLabel","controlOptions","oldYTickFormat","oldValueFormatter","percentFormatter","xAxisHeight","legendTop","metaKey","stack_percent","requiredTop","stackedWrap","currentFormat","valueSum","allNullValues","atleastOnePoint","tooltipValue","stackedY0","stackedY","stackedAreaWithFocusChart","sunburst","modes","groupColorByParent","prevPositions","rotationToAvoidUpsideDown","computeCenterAngle","computeNodePercentage","labelThresholdMatched","arcTweenZoom","xd","yd","yr","arcTweenUpdate","ipo","storeRetrievePrevPositions","pP","updatePrevPosition","zoomClick","centerAngle","cG","sunburstChart","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__","classnames__WEBPACK_IMPORTED_MODULE_3__","classnames__WEBPACK_IMPORTED_MODULE_3___default","react__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_4___default","_ThemeProvider__WEBPACK_IMPORTED_MODULE_5__","Row","_React$Component","_this$props","bsPrefix","noGutters","defaultProps","__webpack_exports__","baseMerge","createAssigner","srcIndex","assignMergeValue","baseFor","baseMergeDeep","keysIn","safeGet","assocIndexOf","LARGE_ARRAY_SIZE","isMasked","toSource","reIsHostCtor","funcProto","reIsNative","nativeObjectToString","isOwn","unmasked","coreJsData","maskSrcKey","uid","IE_PROTO","Hash","hash","hashClear","hashDelete","hashGet","hashHas","hashSet","HASH_UNDEFINED","getMapData","createBaseFor","fromRight","iteratee","keysFunc","iterable","cloneBuffer","cloneTypedArray","copyArray","initCloneObject","isArrayLikeObject","toPlainObject","mergeFunc","isCommon","isTyped","allocUnsafe","isDeep","cloneArrayBuffer","typedArray","byteOffset","arrayBuffer","byteLength","baseCreate","isPrototype","objectCreate","proto","argsTag","objectTag","objectCtorString","typedArrayTags","freeProcess","process","types","require","binding","copyObject","nativeKeysIn","isProto","overRest","setToString","nativeMax","otherArgs","thisArg","baseSetToString","shortOut","constant","HOT_COUNT","HOT_SPAN","nativeNow","lastCalled","stamp","nativeKeys","createFind","baseIteratee","findIndexFunc","collection","predicate","fromIndex","baseIsMatch","getMatchData","matchesStrictComparable","matchData","noCustomizer","equalArrays","equalByTag","equalObjects","getTag","arrayTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","setCacheAdd","setCacheHas","mapToArray","setToArray","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","arrayBufferTag","dataViewTag","symbolProto","symbolValueOf","convert","getAllKeys","objProps","objLength","objStacked","skipCtor","objCtor","othCtor","baseGetAllKeys","arrayPush","symbolsFunc","arrayFilter","stubArray","nativeGetSymbols","resIndex","DataView","Promise","WeakMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","resolve","ctorString","isStrictComparable","hasIn","baseGet","defaultValue","memoizeCapped","rePropName","reEscapeChar","quote","subString","memoize","MAX_MEMOIZE_SIZE","FUNC_ERROR_TEXT","resolver","memoized","Cache","baseToString","arrayMap","symbolToString","baseHasIn","hasPath","hasFunc","baseProperty","basePropertyDeep","baseFindIndex","toInteger","toFinite","remainder","toNumber","MAX_INTEGER","baseTrim","NAN","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","isBinary","trimmedEndIndex","reTrimStart","reWhitespace","get_get","receiver","Reflect","_superPropBase","desc","requestAnimFrame","requestAnimationFrame","throttled","updateFn","updateArgs","ticking","_len","rest","_key","_toLeftRightCenter","_alignStartEnd","noop","isNullOrUndef","isNumberFinite","finiteOrDefault","valueOrDefault","toDimension","endsWith","loopable","len","_elementsEqual","ilen","v1","datasetIndex","clone$1","klen","isValidKey","_merger","tval","sval","merger","mergeIf","_mergerIf","emptyString","dot","indexOfDotOrLength","resolveObjectKey","_capitalize","TAU","PITAU","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","niceNum","niceRange","fraction","almostEquals","epsilon","_setMinAndMaxByKey","toRadians","degrees","toDegrees","radians","_decimalPlaces","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","atEdge","elasticIn","elasticOut","effects","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","1","2","3","4","5","6","7","8","9","hex","h2","_hexString","isShort","helpers_segment_round","lim","p2b","n2b","b2n","n2p","RGB_RE","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","rgb2hsl","calln","hsl2rgb","hue","hueParse","hwb2rgb","hsv2rgb","names$1","map$1","Q","K","helpers_segment_names","OiceXe","antiquewEte","aquamarRe","azuY","blanKedOmond","Xe","XeviTet","bPwn","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","pRk","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","skyXe","UXe","UWay","UgYy","sprRggYF","stAlXe","teO","tEstN","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","nameParse","ok","nk","unpacked","tkeys","unpack","transparent","modHSL","clone","fromObject","functionParse","rgbParse","helpers_segment_Color","Color","classCallCheck","ret","hexParse","_rgb","_valid","createClass","_hslString","w2","deg","_rotate","index_esm","isPatternOrGradient","CanvasGradient","CanvasPattern","helpers_segment_color","getHoverColor","saturate","darken","hexString","overrides","helpers_segment_descriptors","getScope$1","_set","scope","defaults","Defaults","_descriptors","animation","backgroundColor","borderColor","datasets","devicePixelRatio","platform","getDevicePixelRatio","elements","events","font","family","lineHeight","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scales","showLine","describe","targetScope","targetName","_Object$definePropert","scopeObject","targetScopeObject","privateName","_scriptable","startsWith","_indexable","_fallback","_measureText","gc","longest","textWidth","measureText","_longestText","arrayOfThings","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","drawPoint","xOffset","yOffset","pointStyle","rad","drawImage","beginPath","SQRT1_2","borderWidth","stroke","_isPointInArea","clipArea","unclipArea","_steppedLineTo","flip","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","opts","translation","fillStyle","textAlign","textBaseline","strokeStyle","lineWidth","strokeText","maxWidth","fillText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","LINE_HEIGHT","FONT_STYLE","toLineHeight","numberOrZero","_readValueToProps","prop","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","iterator","done","return","toTRBL","toTRBLCorners","toPadding","toFont","fallback","toFontString","inputs","cacheable","_lookup","cmp","_lookupByKey","_rlookupByKey","arrayEvents","unlistenArrayEvents","stub","_chartjs","_arrayUnique","items","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","toConsumableArray","Proxy","deleteProperty","_keys","_cached","proxy","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","_scopes","getKeysFromAllScopes","ownKeys","_storage","_attachContext","subProxy","descriptorDefaults","_cacheable","_proxy","_context","_subProxy","_stack","chunks_helpers_segment_descriptors","setContext","override","descriptors","isScriptable","delete","_resolveScriptable","isIndexable","arr","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_resolveArray","_resolveWithContext","allKeys","scriptable","indexable","_proxy$_scriptable","_proxy$_indexable","_proxy$_allKeys","_allKeys","resolveFallback","getScope","addScopes","parentScopes","parentFallback","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_rootScopes","allScopes","addScopesFromKey","_getTarget","subGetTarget","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","resolveKeysFromAllScopes","EPSILON","getPoint","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","splineCurveMonotone","pointBefore","pointCurrent","valueAxis","pointsLen","deltaK","mK","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","capBezierPoints","inArea","inAreaPrev","inAreaNext","_getParentNode","domNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","positions","getPositionedStyle","styles","useOffsetPos","shadowRoot","getRelativePosition","borderBox","boxSizing","paddings","borders","_getCanvasPosition","native","getCanvasPosition","round1","helpers_segment_getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","containerBorder","containerPadding","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","readUsedSize","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","num","cacheKey","formatter","Intl","NumberFormat","getNumberFormat","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_x2","_itemWidth","getRtlAdapter","rtl","overrideTextDirection","original","getPropertyPriority","prevTextDirection","restoreTextDirection","propertyFn","between","normalize","normalizeSegment","_ref","_boundSegment","prevValue","startBound","endBound","_propertyFn2","_getSegment","_propertyFn","getSegment","subStart","shouldStart","shouldStop","_boundSegments","sub","splitByStyles","segmentOptions","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","prevStyle","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","doSplitByStyles","animator","Animator","_request","_charts","_running","_lastDate","anims","callbacks","numSteps","initial","currentStep","me","_update","_refresh","running","draw","_active","_total","_notify","complete","_getAnims","_this$_getAnims$items","acc","boolean","factor","mix","chart_esm_Animation","Animation","cfg","_fn","_easing","easing","_start","_loop","_target","_prop","_from","_to","_promises","remain","promises","res","rej","resolved","chart_esm_animationOptions","colors","show","animations","hide","chart_esm_Animations","Animations","config","_chart","_properties","animatedProps","_i","_animationOptions","option","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","wait","all","awaitAll","_animateOptions","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","_applyStack","dsIndex","otherValue","singleMode","isStacked","meta","getOrCreateStack","stacks","stackKey","subStack","getLastIndexInStack","vScale","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iScale","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","chart_esm_DatasetController","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","_stacked","addElements","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","adata","convertObjectDataToArray","isExtensible","_len2","_key2","_dataCheck","datasetElementType","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","_sorted","parseArrayData","parseObjectData","parsePrimitiveData","getLabels","singleScale","_parsed$i","_this$_parsing","_this$_parsing$xAxisK","xAxisKey","_this$_parsing$yAxisK","yAxisKey","parsedValue","canStack","otherScale","_getOtherScale","NEGATIVE_INFINITY","_getUserBounds","_scale$getUserBounds","getUserBounds","minDefined","maxDefined","chart_esm_getUserBounds","otherMin","otherMax","_skip","updateRangeFromParsed","getParsed","getLabelForValue","_clip","toClip","defaultClip","getMaxOverflow","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","datasetAnimationScopeKeys","sharedOptions","_animationsDisabled","_resolveAnimations","getSharedOptions","_setStyle","_step3$value","slicedToArray","arg1","arg2","numMeta","numData","_insertElements","_removeElements","updateElements","removed","computeMinSampleSize","curr","$bar","metas","getAllParsedValues","getAllScaleValues","_length","updateMinAndPrev","getPixelForValue","getPixelForTick","parseValue","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","chart_esm_BarController","_DatasetController","BarController","possibleConstructorReturn","inherits","_this$_parsing2","_this$_parsing2$xAxis","_this$_parsing2$yAxis","iAxisKey","vAxisKey","getBasePixel","horizontal","isHorizontal","ruler","_getRuler","firstOpts","includeOptions","updateSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","enableBorderRadius","updateElement","last","_getStacks","pixels","barThickness","_startPixel","_endPixel","stackCount","_getStackCount","categoryPercentage","barPercentage","_me$_cachedMeta","_me$options","baseValue","minBarLength","floating","applyStack","getDataVisibility","actualBase","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","_getStackIndex","rects","_index_","grid","_value_","beginAtZero","chart_esm_BubbleController","_DatasetController2","BubbleController","_this$_parsing3","_this$_parsing3$xAxis","_this$_parsing3$yAxis","_this$_cachedMeta","_me$_cachedMeta2","getPixelForDecimal","chart_esm_DoughnutController","_DatasetController3","DoughnutController","_this","circumference","isDatasetVisible","_getRotation","_getCircumference","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","_me$_getRotationExten","_getRotationExtents","_getRatioAndOffset","ratioX","ratioY","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","generateLabels","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","chart_esm_LineController","_DatasetController4","LineController","_meta$data","_dataset","animationsDisabled","_getStartAndCountOfVi","pointCount","_iScale$getUserBounds","getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","scaleRangesChanged","_decimated","animated","_me$_cachedMeta3","maxGapLength","directUpdate","prevParsed","nullData","lastPoint","updateControlPoints","chart_esm_PolarAreaController","_DatasetController5","PolarAreaController","_this2","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","_this3","angleLines","circular","pointLabels","chart_esm_PieController","_DoughnutController","PieController","chart_esm_RadarController","_DatasetController6","RadarController","_fullLoop","pointPosition","getPointPositionForValue","chart_esm_ScatterController","_LineController","ScatterController","controllers","chart_esm_abstract","chart_esm_DateAdapter","DateAdapter","timestamp","_format","amount","weekday","members","adapters","_date","chart_esm_getRelativePosition","binarySearch","metaset","lookupMethod","_reversePixels","getRange","optimizedEvaluateItems","getSortedVisibleDatasetMetas","_metasets$i2","_binarySearch","getIntersectItems","useFinalPosition","_minPadding","inRange","getNearestItems","distanceMetric","useX","useY","deltaX","getDistanceMetricForAxis","minDistance","getCenterPoint","getAxisItems","rangeMethod","intersectsItem","_metasets$i","evaluateAllVisibleItems","Interaction","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","params","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","getMargins","marginForPositions","fitBoxes","boxes","refit","refitBoxes","_updateDims","fullSize","placeBoxes","userPadding","layouts","addBox","_layers","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","vBoxMaxWidth","hBoxMaxHeight","setLayoutDims","updatePos","handleMaxPadding","chart_esm_BasePlatform","BasePlatform","chart_esm_BasicPlatform","_BasePlatform","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","createAttachObserver","observer","MutationObserver","addedNodes","added","observe","childList","subtree","createDetachObserver","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","_getRelativePosition$","fromNativeEvent","addListener","chart_esm_DomPlatform","_BasePlatform2","DomPlatform","renderHeight","renderWidth","displayWidth","displayHeight","initCanvas","proxies","$proxies","attach","detach","chart_esm_Element","_this$getProps","getProps","final","defaultRoutes","formatters","numeric","tickValue","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","getMajorIndices","numMajorIndices","newTicks","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","chart_esm_skip","majorStart","majorEnd","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","chart_esm_Scale","_Element","Scale","_this4","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","_me$getUserBounds","getMinMax","xLabels","yLabels","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_me$options2","titleOpts","gridOpts","titleHeight","_me$_getLabelSizes","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","_me$options3","_me$options3$ticks","isRotated","labelsBelowTicks","offsetLeft","offsetRight","_this$options","generateTickLabels","_computeLabelSizes","tickFont","fontString","nestedLabel","caches","widths","heights","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","getBaseValue","createTickContext","optionTicks","rot","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","positionAxisID","_positionAxisID","_value","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","lineCount","textOffset","tickAndPadding","hTickAndPadding","_getXAxisLabelAlignment","_getYAxisLabelAlignment","_ret","_positionAxisID2","_value2","halfCount","backdrop","labelPadding","_me$options4","_me$options5","_me$options5$ticks","fillRect","findIndex","_computeGridLineItems","drawLine","setLineDash","lineDashOffset","lastLineWidth","_computeLabelArea","_computeLabelItems","_this$options2","_titleArgs","titleX","titleY","titleArgs","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","axisID","chart_esm_TypedRegistry","TypedRegistry","isPrototypeOf","parentScope","isIChartComponent","register","itemDefaults","routes","propertyParts","sourceName","sourceScope","parts","routeDefaults","registerDefaults","chart_esm_registry","Registry","_typedRegistries","_each","_len3","_key3","_len4","_key4","_len5","_key5","_len6","_key6","_get","_len7","_key7","_len8","_key8","_len9","_key9","_len10","_key10","typedRegistry","reg","_getRegistryForType","isForType","_exec","itemReg","registry","component","camelMethod","chart_esm_PluginService","PluginService","_init","hook","_createDescriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","getPlugin","_i2","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","chart_esm_addIfFound","chart_esm_Config","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","_getResolver","getResolver","subPrefixes","_descriptors2","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l2","onAnimationsComplete","animationOptions","onComplete","onAnimationProgress","onProgress","isDomSupported","getCanvas","getElementById","instances","getChart","chart_esm_Chart","Chart","_this5","initialCanvas","existingChart","chartOptionScopes","_initializePlatform","acquireContext","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","debounce","resizeDelay","listen","_initialize","bindEvents","OffscreenCanvas","_resizeBeforeDraw","_resize","newSize","getMaximumSize","newRatio","onResize","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","getScale","hasUpdated","_destroyDatasetMeta","newControllers","_removeUnreferencedMetasets","updateIndex","ControllerClass","getController","_defaults$datasets$ty","getElement","_updateMetasets","_resetElements","animsDisabled","ensureScalesHaveIDs","buildOrUpdateScales","setsEqual","unbindEvents","buildOrUpdateControllers","buildOrUpdateElements","_updateLayout","_updateDatasets","_eventHandler","noArea","_me$_layers","_idx","_updateDataset","_me$_resizeBeforeDraw","layers","_drawDatasets","_drawDataset","setDatasetVisibility","_updateDatasetVisibility","_destroy","releaseContext","_this$canvas","toDataURL","bindUserEvents","bindResponsiveEvents","_add","detached","_remove","isAttached","activeElements","lastActive","_updateHoverStyles","notify","replay","hoverOptions","deactivated","activated","updateHoverStyle","_this6","eventFilter","_handleEvent","_me$_active","lastEvent","getElementsAtEventForMode","_this$options3","chart_esm_invalidatePlugins","clipArc","pixelMargin","angleMargin","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","pathArc","innerR","angleOffset","_parseBorderRadius$","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","_pCenter","_pCenter2","p8","_pCenter3","chart_esm_drawBorder","lineJoin","fullCircles","drawFullCircleBorders","unregister","chart_esm_ArcElement","_Element2","ArcElement","_this7","assertThisInitialized","chartX","chartY","_getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","getAngleFromPoint","_this$getProps2","_this$getProps3","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","_params$start","paramsStart","_params$end","paramsEnd","segmentStart","segmentEnd","outside","chart_esm_pathSegment","_pathVars","lineMethod","stepped","getLineMethod","_ref2","_ref2$move","fastPathSegment","prevX","lastY","_pathVars2","_ref3","_ref3$move","avgX","countX","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","chart_esm_draw","_path","strokePathWithCache","segmentMethod","strokePathDirect","chart_esm_LineElement","_Element3","LineElement","_this8","_points","_segments","_pointsUpdated","_interpolate","_getInterpolationMethod","_segments$i","interpolated","_findStartAndEnd","findStartAndEnd","solidSegments","_computeSegments","inRange$1","hitRadius","chart_esm_PointElement","_Element4","PointElement","_this9","_this$getProps4","_this$getProps5","hoverRadius","getBarBounds","half","_bar$getProps","parseBorderSkipped","borderSkipped","parseEdge","orig","v2","startEnd","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","_inRange","skipX","skipY","addNormalRectPath","chart_esm_BarElement","_Element5","BarElement","_this10","_boundingRects","addRectPath","_this$getProps6","chart_esm_elements","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","_getStartAndCountOfVi2","_iScale$getUserBounds2","getStartAndCountOfVisiblePointsSimplified","decimated","samples","maxAreaPoint","maxArea","nextA","bucketWidth","sampledIndex","endIndex","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","_data$a","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","intermediateIndex1","intermediateIndex2","objectSpread","minMaxDecimation","destroy","decodeFill","fillOption","parseFillOption","chart_esm_simpleArc","simpleArc","computeBoundary","computeCircularBoundary","_source$scale","computeLinearBoundary","buildStackLine","sourcePoints","linesBelow","isLineAndNotInHideAnimation","getLinesBelow","createBoundaryLine","addPointsBelow","sourcePoint","postponed","_findPoint","findPoint","pointValue","linePoints","firstValue","lastValue","boundary","_ref4","_ref4$x","_ref4$y","pointsFromSegments","resolveTarget","propagate","visited","clipY","getBounds","_getEdge","clipBounds","_scale$chart$chartAre","_ref5","interpolatedLineTo","interpolatedPoint","_fill","tpoints","targetSegments","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","tgt","subBounds","fillSources","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","fillSource","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","_step12$value","src","_src$style","_src$style$background","lineLoop","pathSegment","targetLoop","drawfill","getLineByIndex","chart_esm_getTarget","lineOpts","_ref6","_ref6$above","above","_ref6$below","doFill","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","_labelOpts$boxHeight","boxHeight","_labelOpts$boxWidth","boxWidth","usePointStyle","itemHeight","chart_esm_Legend","_Element6","Legend","_this11","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_getBoxSize","_fitRows","_fitCols","hitboxes","totalHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","_me$options6","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","hitbox","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_hitbox","_draw","cursor","rtlHelper","fontColor","halfFontSize","_getBoxSize2","textDirection","lineDash","drawOptions","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","onLeave","isListened","hoveredItem","_getLegendItemAt","sameItem","plugin_legend","_element","adjustHitBoxes","afterEvent","handleEvent","ci","_chart$legend$options","chart_esm_Title","_Element7","Title","_this12","_padding","textSize","fontOpts","_me$_drawArgs","_drawArgs","plugin_title","titleBlock","createTitle","positioners","hasValue","tooltipPosition","eventPosition","nearestElement","pushOrConcat","toPush","splitNewlines","createTooltipItem","_controller$getLabelA","getLabelAndValue","getTooltipSize","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","_chart$chartArea","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","radiusAndPadding","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","chart_esm_Tooltip","_Element8","Tooltip","_this13","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","ptX","ptY","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","textColor","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","_ref7","positionChanged","_positionChanged","plugin_tooltip","afterInit","afterDraw","labelCount","chart_esm_plugins","Decimation","Filler","addIfString","chart_esm_CategoryScale","_Scale","CategoryScale","_this14","_startValue","_valueRange","chart_esm_validIndex","findOrAddLabel","_me$getUserBounds2","_me$getMinMax","getDecimalForPixel","generateTicks$1","generationOptions","dataRange","niceMin","niceMax","numSpaces","maxTicks","maxDigits","includeBounds","maxSpaces","countDefined","minSpacing","rounded","almostWhole","decimalPlaces","relativeLabelSize","_ref8","chart_esm_LinearScaleBase","_Scale2","LinearScaleBase","_this15","_endValue","_me$getUserBounds3","setMin","setMax","minSign","maxSign","stepSize","computeTickLimit","getTickLimit","_maxDigits","chart_esm_LinearScale","_LinearScaleBase","LinearScale","_me$getMinMax2","handleTickRangeOptions","isMajor","tickVal","chart_esm_LogarithmicScale","_Scale3","LogarithmicScale","_this16","_zero","_me$getMinMax3","_me$getUserBounds4","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","pathRadiusLine","getPointPosition","chart_esm_numberOrZero","param","chart_esm_RadialLinearScale","_LinearScaleBase2","RadialLinearScale","_this17","drawingArea","_pointLabels","_pointLabelItems","_me$getMinMax4","furthestLimits","furthestAngles","valueCount","_opts","plFont","hLimits","vLimits","_setReductions","tickBackdropHeight","outerDistance","extra","pointLabelPosition","_angle","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","scalingFactor","scaledDistance","distanceFromCenter","_this$_pointLabelItem","_me$options7","_scale$_pointLabelIte","drawPointLabels","gridLineOpts","drawRadiusLine","angleLines.color","pointLabels.color","ticks.color","INTERVALS","millisecond","common","quarter","UNITS","sorter","_parse","adapter","_adapter","_scale$_parseOpts","_parseOpts","parser","isoWeekday","startOf","determineUnitForAutoTicks","minUnit","capacity","addTick","timestamps","_lookup2","ticksFromTimestamps","majorUnit","setMajorTicks","chart_esm_TimeScale","_Scale4","TimeScale","_this18","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_me$getUserBounds5","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","getDecimalForValue","limit","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","_tickFormatFunction","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","chart_esm_interpolate","prevSource","nextSource","prevTarget","nextTarget","chart_esm_TimeSeriesScale","_TimeScale","TimeSeriesScale","_this19","_table","_maxIndex","_getTimestampsForTable","buildLookupTable","registerables","auto_esm","_extends","_objectWithoutPropertiesLoose","excluded","sourceKeys","Bar","ChartComponent","react","_props$height","_props$width","_props$redraw","_props$options","_props$plugins","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","fallbackContent","computedData","merge_default","_useState","setChart","destroyChart","_computedData$dataset","newDataSets","newChartData","_chart$config$data$da","currentDataSets","assign_default","newDataSet","currentDataSet","find_default","updateChart","react_default","data-testid","role"],"mappings":"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","file":"static/js/7.7a0277ff.chunk.js","sourcesContent":["var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;","!function (t, e) {\n  \"object\" == typeof exports && \"object\" == typeof module ? module.exports = e(require(\"react\"), require(\"d3\"), require(\"nvd3\")) : \"function\" == typeof define && define.amd ? define([\"react\", \"d3\", \"nvd3\"], e) : \"object\" == typeof exports ? exports.NVD3Chart = e(require(\"react\"), require(\"d3\"), require(\"nvd3\")) : t.NVD3Chart = e(t.React, t.d3, t.nv);\n}(this, function (t, e, n) {\n  return function (t) {\n    function e(r) {\n      if (n[r]) return n[r].exports;\n      var o = n[r] = {\n        exports: {},\n        id: r,\n        loaded: !1\n      };\n      return t[r].call(o.exports, o, o.exports, e), o.loaded = !0, o.exports;\n    }\n\n    var n = {};\n    return e.m = t, e.c = n, e.p = \"\", e(0);\n  }([function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      return t && t.__esModule ? t : {\n        \"default\": t\n      };\n    }\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n\n    var o = n(1),\n        i = r(o),\n        u = n(2),\n        c = r(u),\n        s = n(17),\n        a = r(s),\n        f = n(21),\n        p = r(f),\n        l = n(22),\n        d = r(l),\n        h = n(25),\n        y = r(h),\n        v = n(48),\n        b = r(v),\n        g = n(55),\n        m = r(g),\n        _ = n(56),\n        x = r(_),\n        O = n(57),\n        j = r(O),\n        w = n(58),\n        S = [\"x\", \"y\", \"type\", \"datum\", \"configure\"],\n        P = [\"width\", \"height\"],\n        E = \"margin\",\n        M = \"containerStyle\",\n        k = \"renderStart\",\n        C = \"renderEnd\",\n        D = \"ready\",\n        F = function (t) {\n      function e() {\n        return (0, p[\"default\"])(this, e), (0, y[\"default\"])(this, (0, a[\"default\"])(e).apply(this, arguments));\n      }\n\n      return (0, b[\"default\"])(e, t), (0, d[\"default\"])(e, [{\n        key: \"componentDidMount\",\n        value: function value() {\n          var t = this;\n          j[\"default\"].addGraph(this.renderChart.bind(this), function (e) {\n            (0, w.isCallable)(t.props.ready) && t.props.ready(e, D);\n          });\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function value() {\n          this.renderChart();\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function value() {\n          this.resizeHandler && this.resizeHandler.clear();\n        }\n      }, {\n        key: \"renderChart\",\n        value: function value() {\n          var t = void 0;\n\n          switch (this.chart = this.chart && !this.rendering ? this.chart : j[\"default\"].models[this.props.type](), (0, w.isCallable)(this.props.renderStart) && this.props.renderStart(this.chart, k), this.parsedProps = (0, w.bindFunctions)(this.props, this.props.context), this.chart.x && this.chart.x((0, w.getValueFunction)(this.parsedProps.x, \"x\")), this.chart.y && this.chart.y((0, w.getValueFunction)(this.parsedProps.y, \"y\")), this.props.margin && this.chart.margin(this.options(E, w.pick).margin || (0, w.propsByPrefix)(\"margin\", this.props) || {}), this.configureComponents(this.chart, this.options(S.concat(M), w.without)), !this.props.configure || this.props.configure(this.chart), this.selection = x[\"default\"].select(this.refs.svg).datum(this.props.datum).call(this.chart), this.resizeHandler || (this.resizeHandler = j[\"default\"].utils.windowResize(this.chart.update)), this.props.type) {\n            case \"pieChart\":\n              t = this.chart.pie.dispatch;\n              break;\n\n            case \"lineChart\":\n              t = this.chart.lines.dispatch;\n              break;\n\n            default:\n              t = this.chart.dispatch;\n          }\n\n          return t.renderEnd && t.on(\"renderEnd\", this.renderEnd.bind(this)), this.rendering = !0, this.chart;\n        }\n      }, {\n        key: \"renderEnd\",\n        value: function value(t) {\n          (0, w.isCallable)(this.props.renderEnd) && this.props.renderEnd(this.chart, C), this.rendering = !1;\n        }\n      }, {\n        key: \"configureComponents\",\n        value: function value(t, e) {\n          for (var n in e) {\n            var r = e[n];\n            t && ((0, w.isPlainObject)(r) ? this.configureComponents(t[n], r) : \"function\" == typeof t[n] && t[n](r));\n          }\n        }\n      }, {\n        key: \"options\",\n        value: function value(t, e) {\n          var n = this.parsedProps.options || this.parsedProps || this.props.chartOptions;\n          return (e = e || w.pick)(n, t);\n        }\n      }, {\n        key: \"render\",\n        value: function value() {\n          var t = (0, w.pick)(this.props, P),\n              e = (0, c[\"default\"])({}, t, this.props.containerStyle);\n          return m[\"default\"].createElement(\"div\", {\n            ref: \"root\",\n            className: \"nv-chart\",\n            style: e\n          }, m[\"default\"].createElement(\"svg\", (0, i[\"default\"])({\n            ref: \"svg\"\n          }, t)));\n        }\n      }]), e;\n    }(m[\"default\"].Component);\n\n    e[\"default\"] = F, t.exports = F;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    var r = n(2)[\"default\"];\n    e[\"default\"] = r || function (t) {\n      for (var e = 1; e < arguments.length; e++) {\n        var n = arguments[e];\n\n        for (var r in n) {\n          Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);\n        }\n      }\n\n      return t;\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(3),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(4), t.exports = n(7).Object.assign;\n  }, function (t, e, n) {\n    var r = n(5);\n    r(r.S + r.F, \"Object\", {\n      assign: n(10)\n    });\n  }, function (t, e, n) {\n    var r = n(6),\n        o = n(7),\n        i = n(8),\n        u = \"prototype\",\n        c = function c(t, e, n) {\n      var s,\n          a,\n          f,\n          p = t & c.F,\n          l = t & c.G,\n          d = t & c.S,\n          h = t & c.P,\n          y = t & c.B,\n          v = t & c.W,\n          b = l ? o : o[e] || (o[e] = {}),\n          g = l ? r : d ? r[e] : (r[e] || {})[u];\n      l && (n = e);\n\n      for (s in n) {\n        a = !p && g && s in g, a && s in b || (f = a ? g[s] : n[s], b[s] = l && \"function\" != typeof g[s] ? n[s] : y && a ? i(f, r) : v && g[s] == f ? function (t) {\n          var e = function e(_e) {\n            return this instanceof t ? new t(_e) : t(_e);\n          };\n\n          return e[u] = t[u], e;\n        }(f) : h && \"function\" == typeof f ? i(Function.call, f) : f, h && ((b[u] || (b[u] = {}))[s] = f));\n      }\n    };\n\n    c.F = 1, c.G = 2, c.S = 4, c.P = 8, c.B = 16, c.W = 32, t.exports = c;\n  }, function (t, e) {\n    var n = t.exports = \"undefined\" != typeof window && window.Math == Math ? window : \"undefined\" != typeof self && self.Math == Math ? self : Function(\"return this\")();\n    \"number\" == typeof __g && (__g = n);\n  }, function (t, e) {\n    var n = t.exports = {\n      version: \"1.2.6\"\n    };\n    \"number\" == typeof __e && (__e = n);\n  }, function (t, e, n) {\n    var r = n(9);\n\n    t.exports = function (t, e, n) {\n      if (r(t), void 0 === e) return t;\n\n      switch (n) {\n        case 1:\n          return function (n) {\n            return t.call(e, n);\n          };\n\n        case 2:\n          return function (n, r) {\n            return t.call(e, n, r);\n          };\n\n        case 3:\n          return function (n, r, o) {\n            return t.call(e, n, r, o);\n          };\n      }\n\n      return function () {\n        return t.apply(e, arguments);\n      };\n    };\n  }, function (t, e) {\n    t.exports = function (t) {\n      if (\"function\" != typeof t) throw TypeError(t + \" is not a function!\");\n      return t;\n    };\n  }, function (t, e, n) {\n    var r = n(11),\n        o = n(12),\n        i = n(14);\n    t.exports = n(16)(function () {\n      var t = Object.assign,\n          e = {},\n          n = {},\n          r = Symbol(),\n          o = \"abcdefghijklmnopqrst\";\n      return e[r] = 7, o.split(\"\").forEach(function (t) {\n        n[t] = t;\n      }), 7 != t({}, e)[r] || Object.keys(t({}, n)).join(\"\") != o;\n    }) ? function (t, e) {\n      for (var n = o(t), u = arguments, c = u.length, s = 1, a = r.getKeys, f = r.getSymbols, p = r.isEnum; c > s;) {\n        for (var l, d = i(u[s++]), h = f ? a(d).concat(f(d)) : a(d), y = h.length, v = 0; y > v;) {\n          p.call(d, l = h[v++]) && (n[l] = d[l]);\n        }\n      }\n\n      return n;\n    } : Object.assign;\n  }, function (t, e) {\n    var n = Object;\n    t.exports = {\n      create: n.create,\n      getProto: n.getPrototypeOf,\n      isEnum: {}.propertyIsEnumerable,\n      getDesc: n.getOwnPropertyDescriptor,\n      setDesc: n.defineProperty,\n      setDescs: n.defineProperties,\n      getKeys: n.keys,\n      getNames: n.getOwnPropertyNames,\n      getSymbols: n.getOwnPropertySymbols,\n      each: [].forEach\n    };\n  }, function (t, e, n) {\n    var r = n(13);\n\n    t.exports = function (t) {\n      return Object(r(t));\n    };\n  }, function (t, e) {\n    t.exports = function (t) {\n      if (void 0 == t) throw TypeError(\"Can't call method on  \" + t);\n      return t;\n    };\n  }, function (t, e, n) {\n    var r = n(15);\n    t.exports = Object(\"z\").propertyIsEnumerable(0) ? Object : function (t) {\n      return \"String\" == r(t) ? t.split(\"\") : Object(t);\n    };\n  }, function (t, e) {\n    var n = {}.toString;\n\n    t.exports = function (t) {\n      return n.call(t).slice(8, -1);\n    };\n  }, function (t, e) {\n    t.exports = function (t) {\n      try {\n        return !!t();\n      } catch (e) {\n        return !0;\n      }\n    };\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(18),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(19), t.exports = n(7).Object.getPrototypeOf;\n  }, function (t, e, n) {\n    var r = n(12);\n    n(20)(\"getPrototypeOf\", function (t) {\n      return function (e) {\n        return t(r(e));\n      };\n    });\n  }, function (t, e, n) {\n    var r = n(5),\n        o = n(7),\n        i = n(16);\n\n    t.exports = function (t, e) {\n      var n = (o.Object || {})[t] || Object[t],\n          u = {};\n      u[t] = e(n), r(r.S + r.F * i(function () {\n        n(1);\n      }), \"Object\", u);\n    };\n  }, function (t, e) {\n    \"use strict\";\n\n    e[\"default\"] = function (t, e) {\n      if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      return t && t.__esModule ? t : {\n        \"default\": t\n      };\n    }\n\n    var o = n(23),\n        i = r(o);\n    e[\"default\"] = function () {\n      function t(t, e) {\n        for (var n = 0; n < e.length; n++) {\n          var r = e[n];\n          r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), (0, i[\"default\"])(t, r.key, r);\n        }\n      }\n\n      return function (e, n, r) {\n        return n && t(e.prototype, n), r && t(e, r), e;\n      };\n    }(), e.__esModule = !0;\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(24),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    var r = n(11);\n\n    t.exports = function (t, e, n) {\n      return r.setDesc(t, e, n);\n    };\n  }, function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      return t && t.__esModule ? t : {\n        \"default\": t\n      };\n    }\n\n    var o = n(26),\n        i = r(o);\n    e[\"default\"] = function (t, e) {\n      if (!t) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      return !e || \"object\" !== (\"undefined\" == typeof e ? \"undefined\" : (0, i[\"default\"])(e)) && \"function\" != typeof e ? t : e;\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    var r = n(27)[\"default\"];\n    e[\"default\"] = function (t) {\n      return t && t.constructor === r ? \"symbol\" : typeof t;\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(28),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(29), n(47), t.exports = n(7).Symbol;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    var r = n(11),\n        o = n(6),\n        i = n(30),\n        u = n(31),\n        c = n(5),\n        s = n(32),\n        a = n(16),\n        f = n(35),\n        p = n(36),\n        l = n(38),\n        d = n(37),\n        h = n(39),\n        y = n(41),\n        v = n(42),\n        b = n(43),\n        g = n(44),\n        m = n(40),\n        _ = n(34),\n        x = r.getDesc,\n        O = r.setDesc,\n        j = r.create,\n        w = y.get,\n        S = o.Symbol,\n        P = o.JSON,\n        E = P && P.stringify,\n        M = !1,\n        k = d(\"_hidden\"),\n        C = r.isEnum,\n        D = f(\"symbol-registry\"),\n        F = f(\"symbols\"),\n        N = \"function\" == typeof S,\n        T = Object.prototype,\n        q = u && a(function () {\n      return 7 != j(O({}, \"a\", {\n        get: function get() {\n          return O(this, \"a\", {\n            value: 7\n          }).a;\n        }\n      })).a;\n    }) ? function (t, e, n) {\n      var r = x(T, e);\n      r && delete T[e], O(t, e, n), r && t !== T && O(T, e, r);\n    } : O,\n        z = function z(t) {\n      var e = F[t] = j(S.prototype);\n      return e._k = t, u && M && q(T, t, {\n        configurable: !0,\n        set: function set(e) {\n          i(this, k) && i(this[k], t) && (this[k][t] = !1), q(this, t, _(1, e));\n        }\n      }), e;\n    },\n        A = function A(t) {\n      return \"symbol\" == typeof t;\n    },\n        V = function V(t, e, n) {\n      return n && i(F, e) ? (n.enumerable ? (i(t, k) && t[k][e] && (t[k][e] = !1), n = j(n, {\n        enumerable: _(0, !1)\n      })) : (i(t, k) || O(t, k, _(1, {})), t[k][e] = !0), q(t, e, n)) : O(t, e, n);\n    },\n        W = function W(t, e) {\n      g(t);\n\n      for (var n, r = v(e = m(e)), o = 0, i = r.length; i > o;) {\n        V(t, n = r[o++], e[n]);\n      }\n\n      return t;\n    },\n        B = function B(t, e) {\n      return void 0 === e ? j(t) : W(j(t), e);\n    },\n        G = function G(t) {\n      var e = C.call(this, t);\n      return e || !i(this, t) || !i(F, t) || i(this, k) && this[k][t] ? e : !0;\n    },\n        H = function H(t, e) {\n      var n = x(t = m(t), e);\n      return !n || !i(F, e) || i(t, k) && t[k][e] || (n.enumerable = !0), n;\n    },\n        I = function I(t) {\n      for (var e, n = w(m(t)), r = [], o = 0; n.length > o;) {\n        i(F, e = n[o++]) || e == k || r.push(e);\n      }\n\n      return r;\n    },\n        J = function J(t) {\n      for (var e, n = w(m(t)), r = [], o = 0; n.length > o;) {\n        i(F, e = n[o++]) && r.push(F[e]);\n      }\n\n      return r;\n    },\n        K = function K(t) {\n      if (void 0 !== t && !A(t)) {\n        for (var e, n, r = [t], o = 1, i = arguments; i.length > o;) {\n          r.push(i[o++]);\n        }\n\n        return e = r[1], \"function\" == typeof e && (n = e), (n || !b(e)) && (e = function e(t, _e2) {\n          return n && (_e2 = n.call(this, t, _e2)), A(_e2) ? void 0 : _e2;\n        }), r[1] = e, E.apply(P, r);\n      }\n    },\n        R = a(function () {\n      var t = S();\n      return \"[null]\" != E([t]) || \"{}\" != E({\n        a: t\n      }) || \"{}\" != E(Object(t));\n    });\n\n    N || (S = function S() {\n      if (A(this)) throw TypeError(\"Symbol is not a constructor\");\n      return z(l(arguments.length > 0 ? arguments[0] : void 0));\n    }, s(S.prototype, \"toString\", function () {\n      return this._k;\n    }), A = function A(t) {\n      return t instanceof S;\n    }, r.create = B, r.isEnum = G, r.getDesc = H, r.setDesc = V, r.setDescs = W, r.getNames = y.get = I, r.getSymbols = J, u && !n(46) && s(T, \"propertyIsEnumerable\", G, !0));\n    var U = {\n      \"for\": function _for(t) {\n        return i(D, t += \"\") ? D[t] : D[t] = S(t);\n      },\n      keyFor: function keyFor(t) {\n        return h(D, t);\n      },\n      useSetter: function useSetter() {\n        M = !0;\n      },\n      useSimple: function useSimple() {\n        M = !1;\n      }\n    };\n    r.each.call(\"hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables\".split(\",\"), function (t) {\n      var e = d(t);\n      U[t] = N ? e : z(e);\n    }), M = !0, c(c.G + c.W, {\n      Symbol: S\n    }), c(c.S, \"Symbol\", U), c(c.S + c.F * !N, \"Object\", {\n      create: B,\n      defineProperty: V,\n      defineProperties: W,\n      getOwnPropertyDescriptor: H,\n      getOwnPropertyNames: I,\n      getOwnPropertySymbols: J\n    }), P && c(c.S + c.F * (!N || R), \"JSON\", {\n      stringify: K\n    }), p(S, \"Symbol\"), p(Math, \"Math\", !0), p(o.JSON, \"JSON\", !0);\n  }, function (t, e) {\n    var n = {}.hasOwnProperty;\n\n    t.exports = function (t, e) {\n      return n.call(t, e);\n    };\n  }, function (t, e, n) {\n    t.exports = !n(16)(function () {\n      return 7 != Object.defineProperty({}, \"a\", {\n        get: function get() {\n          return 7;\n        }\n      }).a;\n    });\n  }, function (t, e, n) {\n    t.exports = n(33);\n  }, function (t, e, n) {\n    var r = n(11),\n        o = n(34);\n    t.exports = n(31) ? function (t, e, n) {\n      return r.setDesc(t, e, o(1, n));\n    } : function (t, e, n) {\n      return t[e] = n, t;\n    };\n  }, function (t, e) {\n    t.exports = function (t, e) {\n      return {\n        enumerable: !(1 & t),\n        configurable: !(2 & t),\n        writable: !(4 & t),\n        value: e\n      };\n    };\n  }, function (t, e, n) {\n    var r = n(6),\n        o = \"__core-js_shared__\",\n        i = r[o] || (r[o] = {});\n\n    t.exports = function (t) {\n      return i[t] || (i[t] = {});\n    };\n  }, function (t, e, n) {\n    var r = n(11).setDesc,\n        o = n(30),\n        i = n(37)(\"toStringTag\");\n\n    t.exports = function (t, e, n) {\n      t && !o(t = n ? t : t.prototype, i) && r(t, i, {\n        configurable: !0,\n        value: e\n      });\n    };\n  }, function (t, e, n) {\n    var r = n(35)(\"wks\"),\n        o = n(38),\n        i = n(6).Symbol;\n\n    t.exports = function (t) {\n      return r[t] || (r[t] = i && i[t] || (i || o)(\"Symbol.\" + t));\n    };\n  }, function (t, e) {\n    var n = 0,\n        r = Math.random();\n\n    t.exports = function (t) {\n      return \"Symbol(\".concat(void 0 === t ? \"\" : t, \")_\", (++n + r).toString(36));\n    };\n  }, function (t, e, n) {\n    var r = n(11),\n        o = n(40);\n\n    t.exports = function (t, e) {\n      for (var n, i = o(t), u = r.getKeys(i), c = u.length, s = 0; c > s;) {\n        if (i[n = u[s++]] === e) return n;\n      }\n    };\n  }, function (t, e, n) {\n    var r = n(14),\n        o = n(13);\n\n    t.exports = function (t) {\n      return r(o(t));\n    };\n  }, function (t, e, n) {\n    var r = n(40),\n        o = n(11).getNames,\n        i = {}.toString,\n        u = \"object\" == typeof window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [],\n        c = function c(t) {\n      try {\n        return o(t);\n      } catch (e) {\n        return u.slice();\n      }\n    };\n\n    t.exports.get = function (t) {\n      return u && \"[object Window]\" == i.call(t) ? c(t) : o(r(t));\n    };\n  }, function (t, e, n) {\n    var r = n(11);\n\n    t.exports = function (t) {\n      var e = r.getKeys(t),\n          n = r.getSymbols;\n      if (n) for (var o, i = n(t), u = r.isEnum, c = 0; i.length > c;) {\n        u.call(t, o = i[c++]) && e.push(o);\n      }\n      return e;\n    };\n  }, function (t, e, n) {\n    var r = n(15);\n\n    t.exports = Array.isArray || function (t) {\n      return \"Array\" == r(t);\n    };\n  }, function (t, e, n) {\n    var r = n(45);\n\n    t.exports = function (t) {\n      if (!r(t)) throw TypeError(t + \" is not an object!\");\n      return t;\n    };\n  }, function (t, e) {\n    t.exports = function (t) {\n      return \"object\" == typeof t ? null !== t : \"function\" == typeof t;\n    };\n  }, function (t, e) {\n    t.exports = !0;\n  }, function (t, e) {}, function (t, e, n) {\n    \"use strict\";\n\n    var r = n(49)[\"default\"],\n        o = n(51)[\"default\"];\n    e[\"default\"] = function (t, e) {\n      if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof e);\n      t.prototype = r(e && e.prototype, {\n        constructor: {\n          value: t,\n          enumerable: !1,\n          writable: !0,\n          configurable: !0\n        }\n      }), e && (o ? o(t, e) : t.__proto__ = e);\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(50),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    var r = n(11);\n\n    t.exports = function (t, e) {\n      return r.create(t, e);\n    };\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(52),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(53), t.exports = n(7).Object.setPrototypeOf;\n  }, function (t, e, n) {\n    var r = n(5);\n    r(r.S, \"Object\", {\n      setPrototypeOf: n(54).set\n    });\n  }, function (t, e, n) {\n    var r = n(11).getDesc,\n        o = n(45),\n        i = n(44),\n        u = function u(t, e) {\n      if (i(t), !o(e) && null !== e) throw TypeError(e + \": can't set as prototype!\");\n    };\n\n    t.exports = {\n      set: Object.setPrototypeOf || (\"__proto__\" in {} ? function (t, e, o) {\n        try {\n          o = n(8)(Function.call, r(Object.prototype, \"__proto__\").set, 2), o(t, []), e = !(t instanceof Array);\n        } catch (i) {\n          e = !0;\n        }\n\n        return function (t, n) {\n          return u(t, n), e ? t.__proto__ = n : o(t, n), t;\n        };\n      }({}, !1) : void 0),\n      check: u\n    };\n  }, function (e, n) {\n    e.exports = t;\n  }, function (t, n) {\n    t.exports = e;\n  }, function (t, e) {\n    t.exports = n;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      return t && t.__esModule ? t : {\n        \"default\": t\n      };\n    }\n\n    function o(t, e) {\n      return t.indexOf(e) >= 0;\n    }\n\n    function i(t) {\n      return function () {\n        return !t.apply(this, arguments);\n      };\n    }\n\n    function u(t, e, n) {\n      for (var r = {}, o = (0, m[\"default\"])(t), i = 0, u = o.length; u > i; i++) {\n        var c = o[i],\n            s = t[c];\n        n(e, c) && (r[c] = s);\n      }\n\n      return r;\n    }\n\n    function c(t, e) {\n      return u(t, e, o);\n    }\n\n    function s(t, e) {\n      return u(t, e, i(o));\n    }\n\n    function a(t) {\n      if (\"object\" == (\"undefined\" == typeof t ? \"undefined\" : (0, b[\"default\"])(t)) && null !== t) {\n        if (\"function\" == typeof y[\"default\"]) {\n          var e = (0, y[\"default\"])(t);\n          return e === Object.prototype || null === e;\n        }\n\n        return \"[object Object]\" == Object.prototype.toString.call(t);\n      }\n\n      return !1;\n    }\n\n    function f(t, e) {\n      var n, r, o;\n      n = Array.isArray(t) ? [] : {};\n\n      for (o in t) {\n        r = t[o], null != r && (\"object\" === (\"undefined\" == typeof r ? \"undefined\" : (0, b[\"default\"])(r)) && null !== r && \"function\" !== r.type ? n[o] = f(r, e) : \"function\" === r.type ? n[o] = e[r.name] : n[o] = r);\n      }\n\n      return n;\n    }\n\n    function p(t, e) {\n      return \"function\" == typeof t ? t : function (n) {\n        return \"undefined\" != typeof n[t] ? n[t] : n[e];\n      };\n    }\n\n    function l(t, e) {\n      return console.warn(\"Set margin with prefixes is deprecated use an object instead\"), t += \"-\", (0, m[\"default\"])(e).reduce(function (n, r) {\n        return r.substr(0, t.length) === t && (n[r.replace(t, \"\")] = e[r]), n;\n      }, {});\n    }\n\n    function d(t) {\n      return t && \"function\" == typeof t;\n    }\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    }), e.includes = o, e.negate = i, e.filterObject = u, e.pick = c, e.without = s, e.isPlainObject = a, e.bindFunctions = f, e.getValueFunction = p, e.propsByPrefix = l, e.isCallable = d;\n    var h = n(17),\n        y = r(h),\n        v = n(26),\n        b = r(v),\n        g = n(59),\n        m = r(g);\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(60),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(61), t.exports = n(7).Object.keys;\n  }, function (t, e, n) {\n    var r = n(12);\n    n(20)(\"keys\", function (t) {\n      return function (e) {\n        return t(r(e));\n      };\n    });\n  }]);\n});","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nmodule.exports = eq;","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;","var eq = require('./eq');\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = assocIndexOf;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;","var getNative = require('./_getNative');\n/* Built-in method references that are verified to be native. */\n\n\nvar nativeCreate = getNative(Object, 'create');\nmodule.exports = nativeCreate;","var isKeyable = require('./_isKeyable');\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nmodule.exports = getMapData;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nmodule.exports = isPrototype;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","var isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = toKey;","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nmodule.exports = Stack;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Map = getNative(root, 'Map');\nmodule.exports = Map;","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n/** `Object#toString` result references. */\n\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nmodule.exports = MapCache;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nmodule.exports = isArguments;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nmodule.exports = isBuffer;","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nmodule.exports = isTypedArray;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;","!function () {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n\n  var d3_arraySlice = [].slice,\n      d3_array = function d3_array(list) {\n    return d3_arraySlice.call(list);\n  };\n\n  var d3_document = this.document;\n\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function d3_array(list) {\n        var i = list.length,\n            array = new Array(i);\n\n        while (i--) {\n          array[i] = list[i];\n        }\n\n        return array;\n      };\n    }\n  }\n\n  if (!Date.now) Date.now = function () {\n    return +new Date();\n  };\n\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype,\n          d3_element_setAttribute = d3_element_prototype.setAttribute,\n          d3_element_setAttributeNS = d3_element_prototype.setAttributeNS,\n          d3_style_prototype = this.CSSStyleDeclaration.prototype,\n          d3_style_setProperty = d3_style_prototype.setProperty;\n\n      d3_element_prototype.setAttribute = function (name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n\n      d3_element_prototype.setAttributeNS = function (space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n\n      d3_style_prototype.setProperty = function (name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n\n  d3.ascending = d3_ascending;\n\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  d3.descending = function (a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n\n  d3.min = function (array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if ((b = array[i]) != null && b >= b) {\n          a = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = array[i]) != null && a > b) a = b;\n      }\n    } else {\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && b >= b) {\n          a = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n      }\n    }\n\n    return a;\n  };\n\n  d3.max = function (array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if ((b = array[i]) != null && b >= b) {\n          a = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = array[i]) != null && b > a) a = b;\n      }\n    } else {\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && b >= b) {\n          a = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n      }\n    }\n\n    return a;\n  };\n\n  d3.extent = function (array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b,\n        c;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if ((b = array[i]) != null && b >= b) {\n          a = c = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = array[i]) != null) {\n          if (a > b) a = b;\n          if (c < b) c = b;\n        }\n      }\n    } else {\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && b >= b) {\n          a = c = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null) {\n          if (a > b) a = b;\n          if (c < b) c = b;\n        }\n      }\n    }\n\n    return [a, c];\n  };\n\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n\n  d3.sum = function (array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = +array[i])) s += a;\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n      }\n    }\n\n    return s;\n  };\n\n  d3.mean = function (array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1,\n        j = n;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) s += a;else --j;\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a;else --j;\n      }\n    }\n\n    if (j) return s / j;\n  };\n\n  d3.quantile = function (values, p) {\n    var H = (values.length - 1) * p + 1,\n        h = Math.floor(H),\n        v = +values[h - 1],\n        e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n\n  d3.median = function (array, f) {\n    var numbers = [],\n        n = array.length,\n        a,\n        i = -1;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n      }\n    }\n\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n\n  d3.variance = function (array, f) {\n    var n = array.length,\n        m = 0,\n        a,\n        d,\n        s = 0,\n        i = -1,\n        j = 0;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    if (j > 1) return s / (j - 1);\n  };\n\n  d3.deviation = function () {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n\n  function d3_bisector(compare) {\n    return {\n      left: function left(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n        }\n\n        return lo;\n      },\n      right: function right(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n        }\n\n        return lo;\n      }\n    };\n  }\n\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n\n  d3.bisector = function (f) {\n    return d3_bisector(f.length === 1 ? function (d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n\n  d3.shuffle = function (array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n\n    var m = i1 - i0,\n        t,\n        i;\n\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n\n    return array;\n  };\n\n  d3.permute = function (array, indexes) {\n    var i = indexes.length,\n        permutes = new Array(i);\n\n    while (i--) {\n      permutes[i] = array[indexes[i]];\n    }\n\n    return permutes;\n  };\n\n  d3.pairs = function (array) {\n    var i = 0,\n        n = array.length - 1,\n        p0,\n        p1 = array[0],\n        pairs = new Array(n < 0 ? 0 : n);\n\n    while (i < n) {\n      pairs[i] = [p0 = p1, p1 = array[++i]];\n    }\n\n    return pairs;\n  };\n\n  d3.transpose = function (matrix) {\n    if (!(n = matrix.length)) return [];\n\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m;) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n        row[j] = matrix[j][i];\n      }\n    }\n\n    return transpose;\n  };\n\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n\n  d3.zip = function () {\n    return d3.transpose(arguments);\n  };\n\n  d3.keys = function (map) {\n    var keys = [];\n\n    for (var key in map) {\n      keys.push(key);\n    }\n\n    return keys;\n  };\n\n  d3.values = function (map) {\n    var values = [];\n\n    for (var key in map) {\n      values.push(map[key]);\n    }\n\n    return values;\n  };\n\n  d3.entries = function (map) {\n    var entries = [];\n\n    for (var key in map) {\n      entries.push({\n        key: key,\n        value: map[key]\n      });\n    }\n\n    return entries;\n  };\n\n  d3.merge = function (arrays) {\n    var n = arrays.length,\n        m,\n        i = -1,\n        j = 0,\n        merged,\n        array;\n\n    while (++i < n) {\n      j += arrays[i].length;\n    }\n\n    merged = new Array(j);\n\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n\n    return merged;\n  };\n\n  var abs = Math.abs;\n\n  d3.range = function (start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [],\n        k = d3_range_integerScale(abs(step)),\n        i = -1,\n        j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) {\n      range.push(j / k);\n    } else while ((j = start + step * ++i) < stop) {\n      range.push(j / k);\n    }\n    return range;\n  };\n\n  function d3_range_integerScale(x) {\n    var k = 1;\n\n    while (x * k % 1) {\n      k *= 10;\n    }\n\n    return k;\n  }\n\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n\n  d3.map = function (object, f) {\n    var map = new d3_Map();\n\n    if (object instanceof d3_Map) {\n      object.forEach(function (key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1,\n          n = object.length,\n          o;\n      if (arguments.length === 1) while (++i < n) {\n        map.set(i, object[i]);\n      } else while (++i < n) {\n        map.set(f.call(object, o = object[i], i), o);\n      }\n    } else {\n      for (var key in object) {\n        map.set(key, object[key]);\n      }\n    }\n\n    return map;\n  };\n\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n\n  var d3_map_proto = \"__proto__\",\n      d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function get(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function set(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function values() {\n      var values = [];\n\n      for (var key in this._) {\n        values.push(this._[key]);\n      }\n\n      return values;\n    },\n    entries: function entries() {\n      var entries = [];\n\n      for (var key in this._) {\n        entries.push({\n          key: d3_map_unescape(key),\n          value: this._[key]\n        });\n      }\n\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function forEach(f) {\n      for (var key in this._) {\n        f.call(this, d3_map_unescape(key), this._[key]);\n      }\n    }\n  });\n\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n\n  function d3_map_keys() {\n    var keys = [];\n\n    for (var key in this._) {\n      keys.push(d3_map_unescape(key));\n    }\n\n    return keys;\n  }\n\n  function d3_map_size() {\n    var size = 0;\n\n    for (var key in this._) {\n      ++size;\n    }\n\n    return size;\n  }\n\n  function d3_map_empty() {\n    for (var key in this._) {\n      return false;\n    }\n\n    return true;\n  }\n\n  d3.nest = function () {\n    var nest = {},\n        keys = [],\n        sortKeys = [],\n        sortValues,\n        rollup;\n\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1,\n          n = array.length,\n          key = keys[depth++],\n          keyValue,\n          object,\n          setter,\n          valuesByKey = new d3_Map(),\n          values;\n\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [object]);\n        }\n      }\n\n      if (mapType) {\n        object = mapType();\n\n        setter = function setter(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n\n        setter = function setter(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n\n      valuesByKey.forEach(setter);\n      return object;\n    }\n\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [],\n          sortKey = sortKeys[depth++];\n      map.forEach(function (key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function (a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n\n    nest.map = function (array, mapType) {\n      return map(mapType, array, 0);\n    };\n\n    nest.entries = function (array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n\n    nest.key = function (d) {\n      keys.push(d);\n      return nest;\n    };\n\n    nest.sortKeys = function (order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n\n    nest.sortValues = function (order) {\n      sortValues = order;\n      return nest;\n    };\n\n    nest.rollup = function (f) {\n      rollup = f;\n      return nest;\n    };\n\n    return nest;\n  };\n\n  d3.set = function (array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) {\n      set.add(array[i]);\n    }\n    return set;\n  };\n\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function add(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function forEach(f) {\n      for (var key in this._) {\n        f.call(this, d3_map_unescape(key));\n      }\n    }\n  });\n  d3.behavior = {};\n\n  function d3_identity(d) {\n    return d;\n  }\n\n  d3.rebind = function (target, source) {\n    var i = 1,\n        n = arguments.length,\n        method;\n\n    while (++i < n) {\n      target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    }\n\n    return target;\n  };\n\n  function d3_rebind(target, source, method) {\n    return function () {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n\n  var d3_vendorPrefixes = [\"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\"];\n\n  function d3_noop() {}\n\n  d3.dispatch = function () {\n    var dispatch = new d3_dispatch(),\n        i = -1,\n        n = arguments.length;\n\n    while (++i < n) {\n      dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    }\n\n    return dispatch;\n  };\n\n  function d3_dispatch() {}\n\n  d3_dispatch.prototype.on = function (type, listener) {\n    var i = type.indexOf(\".\"),\n        name = \"\";\n\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n\n  function d3_dispatch_event(dispatch) {\n    var listeners = [],\n        listenerByName = new d3_Map();\n\n    function event() {\n      var z = listeners,\n          i = -1,\n          n = z.length,\n          l;\n\n      while (++i < n) {\n        if (l = z[i].on) l.apply(this, arguments);\n      }\n\n      return dispatch;\n    }\n\n    event.on = function (name, listener) {\n      var l = listenerByName.get(name),\n          i;\n      if (arguments.length < 2) return l && l.on;\n\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n\n    return event;\n  }\n\n  d3.event = null;\n\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n\n  function d3_eventSource() {\n    var e = d3.event,\n        s;\n\n    while (s = e.sourceEvent) {\n      e = s;\n    }\n\n    return e;\n  }\n\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(),\n        i = 0,\n        n = arguments.length;\n\n    while (++i < n) {\n      dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    }\n\n    dispatch.of = function (thiz, argumentz) {\n      return function (e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n\n    return dispatch;\n  }\n\n  d3.requote = function (s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function (object, prototype) {\n    object.__proto__ = prototype;\n  } : function (object, prototype) {\n    for (var property in prototype) {\n      object[property] = prototype[property];\n    }\n  };\n\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n\n  var d3_select = function d3_select(s, n) {\n    return n.querySelector(s);\n  },\n      d3_selectAll = function d3_selectAll(s, n) {\n    return n.querySelectorAll(s);\n  },\n      _d3_selectMatches = function d3_selectMatches(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\n    _d3_selectMatches = function d3_selectMatches(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n\n    return _d3_selectMatches(n, s);\n  };\n\n  if (typeof Sizzle === \"function\") {\n    d3_select = function d3_select(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n\n    d3_selectAll = Sizzle;\n    _d3_selectMatches = Sizzle.matchesSelector;\n  }\n\n  d3.selection = function () {\n    return d3.select(d3_document.documentElement);\n  };\n\n  var d3_selectionPrototype = d3.selection.prototype = [];\n\n  d3_selectionPrototype.select = function (selector) {\n    var subgroups = [],\n        subgroup,\n        subnode,\n        group,\n        node;\n    selector = d3_selection_selector(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n\n      for (var i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function () {\n      return d3_select(selector, this);\n    };\n  }\n\n  d3_selectionPrototype.selectAll = function (selector) {\n    var subgroups = [],\n        subgroup,\n        node;\n    selector = d3_selection_selectorAll(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function () {\n      return d3_selectAll(selector, this);\n    };\n  }\n\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function qualify(name) {\n      var i = name.indexOf(\":\"),\n          prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n\n  d3_selectionPrototype.attr = function (name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n\n      for (value in name) {\n        this.each(d3_selection_attr(value, name[value]));\n      }\n\n      return this;\n    }\n\n    return this.each(d3_selection_attr(name, value));\n  };\n\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name);else this.setAttribute(name, x);\n    }\n\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local);else this.setAttributeNS(name.space, name.local, x);\n    }\n\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n\n  d3_selectionPrototype.classed = function (name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(),\n            n = (name = d3_selection_classes(name)).length,\n            i = -1;\n\n        if (value = node.classList) {\n          while (++i < n) {\n            if (!value.contains(name[i])) return false;\n          }\n        } else {\n          value = node.getAttribute(\"class\");\n\n          while (++i < n) {\n            if (!d3_selection_classedRe(name[i]).test(value)) return false;\n          }\n        }\n\n        return true;\n      }\n\n      for (value in name) {\n        this.each(d3_selection_classed(value, name[value]));\n      }\n\n      return this;\n    }\n\n    return this.each(d3_selection_classed(name, value));\n  };\n\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n\n    function classedConstant() {\n      var i = -1;\n\n      while (++i < n) {\n        name[i](this, value);\n      }\n    }\n\n    function classedFunction() {\n      var i = -1,\n          x = value.apply(this, arguments);\n\n      while (++i < n) {\n        name[i](this, x);\n      }\n    }\n\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function (node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n\n  d3_selectionPrototype.style = function (name, value, priority) {\n    var n = arguments.length;\n\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n\n        for (priority in name) {\n          this.each(d3_selection_style(priority, name[priority], value));\n        }\n\n        return this;\n      }\n\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n\n      priority = \"\";\n    }\n\n    return this.each(d3_selection_style(name, value, priority));\n  };\n\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name);else this.style.setProperty(name, x, priority);\n    }\n\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n\n  d3_selectionPrototype.property = function (name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n\n      for (value in name) {\n        this.each(d3_selection_property(value, name[value]));\n      }\n\n      return this;\n    }\n\n    return this.each(d3_selection_property(name, value));\n  };\n\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n\n    function propertyConstant() {\n      this[name] = value;\n    }\n\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name];else this[name] = x;\n    }\n\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n\n  d3_selectionPrototype.text = function (value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function () {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function () {\n      this.textContent = \"\";\n    } : function () {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n\n  d3_selectionPrototype.html = function (value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function () {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function () {\n      this.innerHTML = \"\";\n    } : function () {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n\n  d3_selectionPrototype.append = function (name) {\n    name = d3_selection_creator(name);\n    return this.select(function () {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument,\n          namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n\n  d3_selectionPrototype.insert = function (name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function () {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n\n  d3_selectionPrototype.remove = function () {\n    return this.each(d3_selectionRemove);\n  };\n\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n\n  d3_selectionPrototype.data = function (value, key) {\n    var i = -1,\n        n = this.length,\n        group,\n        node;\n\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n\n      return value;\n    }\n\n    function bind(group, groupData) {\n      var i,\n          n = group.length,\n          m = groupData.length,\n          n0 = Math.min(n, m),\n          updateNodes = new Array(m),\n          enterNodes = new Array(m),\n          exitNodes = new Array(n),\n          node,\n          nodeData;\n\n      if (key) {\n        var nodeByKeyValue = new d3_Map(),\n            keyValues = new Array(n),\n            keyValue;\n\n        for (i = -1; ++i < n;) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n\n            keyValues[i] = keyValue;\n          }\n        }\n\n        for (i = -1; ++i < m;) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n\n          nodeByKeyValue.set(keyValue, true);\n        }\n\n        for (i = -1; ++i < n;) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0;) {\n          node = group[i];\n          nodeData = groupData[i];\n\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n\n        for (; i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n\n        for (; i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n\n    var enter = d3_selection_enter([]),\n        update = d3_selection([]),\n        exit = d3_selection([]);\n\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n\n    update.enter = function () {\n      return enter;\n    };\n\n    update.exit = function () {\n      return exit;\n    };\n\n    return update;\n  };\n\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n\n  d3_selectionPrototype.datum = function (value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n\n  d3_selectionPrototype.filter = function (filter) {\n    var subgroups = [],\n        subgroup,\n        group,\n        node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  function d3_selection_filter(selector) {\n    return function () {\n      return _d3_selectMatches(this, selector);\n    };\n  }\n\n  d3_selectionPrototype.order = function () {\n    for (var j = -1, m = this.length; ++j < m;) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n\n    return this;\n  };\n\n  d3_selectionPrototype.sort = function (comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      this[j].sort(comparator);\n    }\n\n    return this.order();\n  };\n\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function (a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n\n  d3_selectionPrototype.each = function (callback) {\n    return d3_selection_each(this, function (node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n\n    return groups;\n  }\n\n  d3_selectionPrototype.call = function (callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n\n  d3_selectionPrototype.empty = function () {\n    return !this.node();\n  };\n\n  d3_selectionPrototype.node = function () {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n\n    return null;\n  };\n\n  d3_selectionPrototype.size = function () {\n    var n = 0;\n    d3_selection_each(this, function () {\n      ++n;\n    });\n    return n;\n  };\n\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\n  d3_selection_enterPrototype.select = function (selector) {\n    var subgroups = [],\n        subgroup,\n        subnode,\n        upgroup,\n        group,\n        node;\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n\n      for (var i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  d3_selection_enterPrototype.insert = function (name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function (d, i, j) {\n      var group = enter[j].update,\n          n = group.length,\n          node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n\n      while (!(node = group[i0]) && ++i0 < n) {\n        ;\n      }\n\n      return node;\n    };\n  }\n\n  d3.select = function (node) {\n    var group;\n\n    if (typeof node === \"string\") {\n      group = [d3_select(node, d3_document)];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [node];\n      group.parentNode = d3_documentElement(node);\n    }\n\n    return d3_selection([group]);\n  };\n\n  d3.selectAll = function (nodes) {\n    var group;\n\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n\n    return d3_selection([group]);\n  };\n\n  d3_selectionPrototype.on = function (type, listener, capture) {\n    var n = arguments.length;\n\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n\n        for (capture in type) {\n          this.each(d3_selection_on(capture, type[capture], listener));\n        }\n\n        return this;\n      }\n\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type,\n        i = type.indexOf(\".\"),\n        wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n\n    function onRemove() {\n      var l = this[name];\n\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"),\n          match;\n\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function (k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n\n  function d3_selection_onListener(listener, argumentz) {\n    return function (e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function (e) {\n      var target = this,\n          related = e.relatedTarget;\n\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n\n  var d3_event_dragSelect,\n      d3_event_dragId = 0;\n\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId,\n        click = \"click\" + name,\n        w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style,\n          select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n\n    return function (suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\n      if (suppressClick) {\n        var off = function off() {\n          w.on(click, null);\n        };\n\n        w.on(click, function () {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n\n  d3.mouse = function (container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY;else point.x = e.clientX, point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [point.x, point.y];\n    }\n\n    var rect = container.getBoundingClientRect();\n    return [e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop];\n  }\n\n  d3.touch = function (container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n\n  d3.behavior.drag = function () {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"),\n        origin = null,\n        mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"),\n        touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n\n    function dragstart(id, position, subject, move, end) {\n      return function () {\n        var that = this,\n            target = d3.event.target.correspondingElement || d3.event.target,\n            parent = that.parentNode,\n            dispatch = event.of(that, arguments),\n            dragged = 0,\n            dragId = id(),\n            dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId),\n            dragOffset,\n            dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended),\n            dragRestore = d3_event_dragSuppress(target),\n            position0 = position(parent, dragId);\n\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [dragOffset.x - position0[0], dragOffset.y - position0[1]];\n        } else {\n          dragOffset = [0, 0];\n        }\n\n        dispatch({\n          type: \"dragstart\"\n        });\n\n        function moved() {\n          var position1 = position(parent, dragId),\n              dx,\n              dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n\n    drag.origin = function (x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n\n    return d3.rebind(drag, event, \"on\");\n  };\n\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n\n  d3.touches = function (container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function (touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n\n  var ε = 1e-6,\n      ε2 = ε * ε,\n      π = Math.PI,\n      τ = 2 * π,\n      τε = τ - ε,\n      halfπ = π / 2,\n      d3_radians = π / 180,\n      d3_degrees = 180 / π;\n\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n\n  var ρ = Math.SQRT2,\n      ρ2 = 2,\n      ρ4 = 4;\n\n  d3.interpolateZoom = function (p0, p1) {\n    var ux0 = p0[0],\n        uy0 = p0[1],\n        w0 = p0[2],\n        ux1 = p1[0],\n        uy1 = p1[1],\n        w1 = p1[2],\n        dx = ux1 - ux0,\n        dy = uy1 - uy0,\n        d2 = dx * dx + dy * dy,\n        i,\n        S;\n\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n\n      i = function i(t) {\n        return [ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S)];\n      };\n    } else {\n      var d1 = Math.sqrt(d2),\n          b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1),\n          b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1),\n          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n\n      i = function i(t) {\n        var s = t * S,\n            coshr0 = d3_cosh(r0),\n            u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0)];\n      };\n    }\n\n    i.duration = S * 1e3;\n    return i;\n  };\n\n  d3.behavior.zoom = function () {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    },\n        translate0,\n        center0,\n        center,\n        size = [960, 500],\n        scaleExtent = d3_behavior_zoomInfinity,\n        duration = 250,\n        zooming = 0,\n        mousedown = \"mousedown.zoom\",\n        mousemove = \"mousemove.zoom\",\n        mouseup = \"mouseup.zoom\",\n        mousewheelTimer,\n        touchstart = \"touchstart.zoom\",\n        touchtime,\n        event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"),\n        x0,\n        x1,\n        y0,\n        y1;\n\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function d3_behavior_zoomDelta() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function d3_behavior_zoomDelta() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function d3_behavior_zoomDelta() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n\n    zoom.event = function (g) {\n      g.each(function () {\n        var dispatch = event.of(this, arguments),\n            view1 = view;\n\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function () {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function () {\n            var dx = size[0],\n                dy = size[1],\n                cx = center0 ? center0[0] : dx / 2,\n                cy = center0 ? center0[1] : dy / 2,\n                i = d3.interpolateZoom([(cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k], [(cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k]);\n            return function (t) {\n              var l = i(t),\n                  k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function () {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function () {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n\n    zoom.translate = function (_) {\n      if (!arguments.length) return [view.x, view.y];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n\n    zoom.scale = function (_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n\n    zoom.scaleExtent = function (_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [+_[0], +_[1]];\n      return zoom;\n    };\n\n    zoom.center = function (_) {\n      if (!arguments.length) return center;\n      center = _ && [+_[0], +_[1]];\n      return zoom;\n    };\n\n    zoom.size = function (_) {\n      if (!arguments.length) return size;\n      size = _ && [+_[0], +_[1]];\n      return zoom;\n    };\n\n    zoom.duration = function (_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n\n    zoom.x = function (z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n\n    zoom.y = function (z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n\n    function location(p) {\n      return [(p[0] - view.x) / view.k, (p[1] - view.y) / view.k];\n    }\n\n    function point(l) {\n      return [l[0] * view.k + view.x, l[1] * view.k + view.y];\n    }\n\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function (x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function (y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [view.x, view.y]\n      });\n    }\n\n    function zoomended(dispatch) {\n      if (! --zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n\n    function mousedowned() {\n      var that = this,\n          dispatch = event.of(that, arguments),\n          dragged = 0,\n          subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended),\n          location0 = location(d3.mouse(that)),\n          dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n\n    function touchstarted() {\n      var that = this,\n          dispatch = event.of(that, arguments),\n          locations0 = {},\n          distance0 = 0,\n          scale0,\n          zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier,\n          touchmove = \"touchmove\" + zoomName,\n          touchend = \"touchend\" + zoomName,\n          targets = [],\n          subject = d3.select(that),\n          dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function (t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n\n        var touches = relocate(),\n            now = Date.now();\n\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0],\n              q = touches[1],\n              dx = p[0] - q[0],\n              dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n\n      function moved() {\n        var touches = d3.touches(that),\n            p0,\n            l0,\n            p1,\n            l1;\n        d3_selection_interrupt.call(that);\n\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1,\n              scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n          l0 = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n          scaleTo(scale1 * scale0);\n        }\n\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer);else d3_selection_interrupt.call(this), translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function () {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n\n    function dblclicked() {\n      var p = d3.mouse(this),\n          k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n\n    return d3.rebind(zoom, event, \"on\");\n  };\n\n  var d3_behavior_zoomInfinity = [0, Infinity],\n      d3_behavior_zoomDelta,\n      d3_behavior_zoomWheel;\n  d3.color = d3_color;\n\n  function d3_color() {}\n\n  d3_color.prototype.toString = function () {\n    return this.rgb() + \"\";\n  };\n\n  d3.hsl = d3_hsl;\n\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\n  d3_hslPrototype.brighter = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n\n  d3_hslPrototype.darker = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n\n  d3_hslPrototype.rgb = function () {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n\n    function v(h) {\n      if (h > 360) h -= 360;else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n\n  d3.hcl = d3_hcl;\n\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\n  d3_hclPrototype.brighter = function (k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n\n  d3_hclPrototype.darker = function (k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n\n  d3_hclPrototype.rgb = function () {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n\n  d3.lab = d3_lab;\n\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047,\n      d3_lab_Y = 1,\n      d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\n  d3_labPrototype.brighter = function (k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n\n  d3_labPrototype.darker = function (k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n\n  d3_labPrototype.rgb = function () {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116,\n        x = y + a / 500,\n        z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n\n  d3.rgb = d3_rgb;\n\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\n  d3_rgbPrototype.brighter = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r,\n        g = this.g,\n        b = this.b,\n        i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n\n  d3_rgbPrototype.darker = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n\n  d3_rgbPrototype.hsl = function () {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n\n  d3_rgbPrototype.toString = function () {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0,\n        g = 0,\n        b = 0,\n        m1,\n        m2,\n        color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n\n    if (m1) {\n      m2 = m1[2].split(\",\");\n\n      switch (m1[1]) {\n        case \"hsl\":\n          {\n            return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n          }\n\n        case \"rgb\":\n          {\n            return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n          }\n      }\n    }\n\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n\n    return rgb(r, g, b);\n  }\n\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255),\n        max = Math.max(r, g, b),\n        d = max - min,\n        h,\n        s,\n        l = (max + min) / 2;\n\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0);else if (g == max) h = (b - r) / d + 2;else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n\n    return new d3_hsl(h, s, l);\n  }\n\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X),\n        y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y),\n        z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function (key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function () {\n      return v;\n    };\n  }\n\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n\n  function d3_xhrType(response) {\n    return function (url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {},\n        dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n        headers = {},\n        request = new XMLHttpRequest(),\n        responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function () {\n      request.readyState > 3 && respond();\n    };\n\n    function respond() {\n      var status = request.status,\n          result;\n\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n\n    request.onprogress = function (event) {\n      var o = d3.event;\n      d3.event = event;\n\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n\n    xhr.header = function (name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name];else headers[name] = value + \"\";\n      return xhr;\n    };\n\n    xhr.mimeType = function (value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n\n    xhr.responseType = function (value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n\n    xhr.response = function (value) {\n      response = value;\n      return xhr;\n    };\n\n    [\"get\", \"post\"].forEach(function (method) {\n      xhr[method] = function () {\n        return xhr.send.apply(xhr, [method].concat(d3_array(arguments)));\n      };\n    });\n\n    xhr.send = function (method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) {\n        request.setRequestHeader(name, headers[name]);\n      }\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function (request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n\n    xhr.abort = function () {\n      request.abort();\n      return xhr;\n    };\n\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function (error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n\n  d3.dsv = function (delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"),\n        delimiterCode = delimiter.charCodeAt(0);\n\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\n      xhr.row = function (_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n\n      return xhr;\n    }\n\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n\n    function typedResponse(f) {\n      return function (request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n\n    dsv.parse = function (text, f) {\n      var o;\n      return dsv.parseRows(text, function (row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function (name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function (row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n\n    dsv.parseRows = function (text, f) {\n      var EOL = {},\n          EOF = {},\n          rows = [],\n          N = text.length,\n          I = 0,\n          n = 0,\n          t,\n          eol;\n\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n\n        while (I < N) {\n          var c = text.charCodeAt(I++),\n              k = 1;\n          if (c === 10) eol = true;else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n\n        return text.slice(j);\n      }\n\n      while ((t = token()) !== EOF) {\n        var a = [];\n\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n\n      return rows;\n    };\n\n    dsv.format = function (rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(),\n          fields = [];\n      rows.forEach(function (row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [fields.map(formatValue).join(delimiter)].concat(rows.map(function (row) {\n        return fields.map(function (field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n\n    dsv.formatRows = function (rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n\n    return dsv;\n  };\n\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\n  var d3_timer_queueHead,\n      d3_timer_queueTail,\n      d3_timer_interval,\n      d3_timer_timeout,\n      d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function (callback) {\n    setTimeout(callback, 17);\n  };\n\n  d3.timer = function () {\n    d3_timer.apply(this, arguments);\n  };\n\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay,\n        timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer;else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n\n    return timer;\n  }\n\n  function d3_timer_step() {\n    var now = d3_timer_mark(),\n        delay = d3_timer_sweep() - now;\n\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n\n  d3.timer.flush = function () {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n\n  function d3_timer_mark() {\n    var now = Date.now(),\n        timer = d3_timer_queueHead;\n\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n\n    return now;\n  }\n\n  function d3_timer_sweep() {\n    var t0,\n        t1 = d3_timer_queueHead,\n        time = Infinity;\n\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n\n    d3_timer_queueTail = t0;\n    return time;\n  }\n\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n\n  d3.round = function (x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n\n  var d3_formatPrefixes = [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\"].map(d3_formatPrefix);\n\n  d3.formatPrefix = function (value, precision) {\n    var i = 0;\n\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n\n    return d3_formatPrefixes[8 + i / 3];\n  };\n\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function (d) {\n        return d / k;\n      } : function (d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal,\n        locale_thousands = locale.thousands,\n        locale_grouping = locale.grouping,\n        locale_currency = locale.currency,\n        formatGroup = locale_grouping && locale_thousands ? function (value, width) {\n      var i = value.length,\n          t = [],\n          j = 0,\n          g = locale_grouping[0],\n          length = 0;\n\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function (specifier) {\n      var match = d3_format_re.exec(specifier),\n          fill = match[1] || \" \",\n          align = match[2] || \">\",\n          sign = match[3] || \"-\",\n          symbol = match[4] || \"\",\n          zfill = match[5],\n          width = +match[6],\n          comma = match[7],\n          precision = match[8],\n          type = match[9],\n          scale = 1,\n          prefix = \"\",\n          suffix = \"\",\n          integer = false,\n          exponent = true;\n      if (precision) precision = +precision.substring(1);\n\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n\n      switch (type) {\n        case \"n\":\n          comma = true;\n          type = \"g\";\n          break;\n\n        case \"%\":\n          scale = 100;\n          suffix = \"%\";\n          type = \"f\";\n          break;\n\n        case \"p\":\n          scale = 100;\n          suffix = \"%\";\n          type = \"r\";\n          break;\n\n        case \"b\":\n        case \"o\":\n        case \"x\":\n        case \"X\":\n          if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n        case \"c\":\n          exponent = false;\n\n        case \"d\":\n          integer = true;\n          precision = 0;\n          break;\n\n        case \"s\":\n          scale = -1;\n          type = \"r\";\n          break;\n      }\n\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision));else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function (value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"),\n            before,\n            after;\n\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\";else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length),\n            padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function b(x) {\n      return x.toString(2);\n    },\n    c: function c(x) {\n      return String.fromCharCode(x);\n    },\n    o: function o(x) {\n      return x.toString(8);\n    },\n    x: function x(_x) {\n      return _x.toString(16);\n    },\n    X: function X(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function g(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function e(x, p) {\n      return x.toExponential(p);\n    },\n    f: function f(x, p) {\n      return x.toFixed(p);\n    },\n    r: function r(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n\n  var d3_time = d3.time = {},\n      d3_date = Date;\n\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n\n  d3_date_utc.prototype = {\n    getDate: function getDate() {\n      return this._.getUTCDate();\n    },\n    getDay: function getDay() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function getFullYear() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function getHours() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function getMilliseconds() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function getMinutes() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function getMonth() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function getSeconds() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function getTime() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function getTimezoneOffset() {\n      return 0;\n    },\n    valueOf: function valueOf() {\n      return this._.valueOf();\n    },\n    setDate: function setDate() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function setDay() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function setFullYear() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function setHours() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function setMilliseconds() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function setMinutes() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function setMonth() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function setSeconds() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function setTime() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date),\n          d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n\n    function range(t0, t1, dt) {\n      var time = ceil(t0),\n          times = [];\n\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) {\n          times.push(new Date(+time)), step(time, 1);\n        }\n      }\n\n      return times;\n    }\n\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n\n  function d3_time_interval_utc(method) {\n    return function (date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n\n  d3_time.year = d3_time_interval(function (date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function (date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function (date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function (date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function (date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function (date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n\n  d3_time.dayOfYear = function (date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n\n  [\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"].forEach(function (day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function (date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function (date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function (date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n\n    d3_time[day + \"OfYear\"] = function (date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime,\n        locale_date = locale.date,\n        locale_time = locale.time,\n        locale_periods = locale.periods,\n        locale_days = locale.days,\n        locale_shortDays = locale.shortDays,\n        locale_months = locale.months,\n        locale_shortMonths = locale.shortMonths;\n\n    function d3_time_format(template) {\n      var n = template.length;\n\n      function format(date) {\n        var string = [],\n            i = -1,\n            j = 0,\n            c,\n            p,\n            f;\n\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n\n      format.parse = function (string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        },\n            i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc,\n            date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j);else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n\n      format.toString = function () {\n        return template;\n      };\n\n      return format;\n    }\n\n    function d3_time_parse(date, template, string, j) {\n      var c,\n          p,\n          t,\n          i = 0,\n          n = template.length,\n          m = string.length;\n\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n\n      return j;\n    }\n\n    d3_time_format.utc = function (template) {\n      var local = d3_time_format(template);\n\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n\n      format.parse = function (string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n\n      format.toString = local.toString;\n      return format;\n    };\n\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(),\n        d3_time_dayRe = d3_time_formatRe(locale_days),\n        d3_time_dayLookup = d3_time_formatLookup(locale_days),\n        d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays),\n        d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays),\n        d3_time_monthRe = d3_time_formatRe(locale_months),\n        d3_time_monthLookup = d3_time_formatLookup(locale_months),\n        d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths),\n        d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function (p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function a(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function A(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function b(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function B(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function d(_d, p) {\n        return d3_time_formatPad(_d.getDate(), p, 2);\n      },\n      e: function e(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function H(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function I(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function j(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function L(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function m(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function M(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function p(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function S(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function U(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function w(d) {\n        return d.getDay();\n      },\n      W: function W(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function y(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function Y(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function _() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n\n    return d3_time_format;\n  }\n\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  },\n      d3_time_numberRe = /^\\s*\\d+/,\n      d3_time_percentRe = /^%/;\n\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\",\n        string = (sign ? -value : value) + \"\",\n        length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(),\n        i = -1,\n        n = names.length;\n\n    while (++i < n) {\n      map.set(names[i].toLowerCase(), i);\n    }\n\n    return map;\n  }\n\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, i + 5) : -1;\n  }\n\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(),\n        zs = z > 0 ? \"-\" : \"+\",\n        zh = abs(z) / 60 | 0,\n        zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n\n  function d3_time_formatMulti(formats) {\n    var n = formats.length,\n        i = -1;\n\n    while (++i < n) {\n      formats[i][0] = this(formats[i][0]);\n    }\n\n    return function (date) {\n      var i = 0,\n          f = formats[i];\n\n      while (!f[1](date)) {\n        f = formats[++i];\n      }\n\n      return f[0](date);\n    };\n  }\n\n  d3.locale = function (locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n\n  function d3_adder() {}\n\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function add(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t;else this.s = d3_adderTemp.t;\n    },\n    reset: function reset() {\n      this.s = this.t = 0;\n    },\n    valueOf: function valueOf() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b,\n        bv = x - a,\n        av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n\n  d3.geo.stream = function (object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n\n  var d3_geo_streamObjectType = {\n    Feature: function Feature(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function FeatureCollection(object, listener) {\n      var features = object.features,\n          i = -1,\n          n = features.length;\n\n      while (++i < n) {\n        d3_geo_streamGeometry(features[i].geometry, listener);\n      }\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function Sphere(object, listener) {\n      listener.sphere();\n    },\n    Point: function Point(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function MultiPoint(object, listener) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) {\n        object = coordinates[i], listener.point(object[0], object[1], object[2]);\n      }\n    },\n    LineString: function LineString(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function MultiLineString(object, listener) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) {\n        d3_geo_streamLine(coordinates[i], listener, 0);\n      }\n    },\n    Polygon: function Polygon(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function MultiPolygon(object, listener) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) {\n        d3_geo_streamPolygon(coordinates[i], listener);\n      }\n    },\n    GeometryCollection: function GeometryCollection(object, listener) {\n      var geometries = object.geometries,\n          i = -1,\n          n = geometries.length;\n\n      while (++i < n) {\n        d3_geo_streamGeometry(geometries[i], listener);\n      }\n    }\n  };\n\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1,\n        n = coordinates.length - closed,\n        coordinate;\n    listener.lineStart();\n\n    while (++i < n) {\n      coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    }\n\n    listener.lineEnd();\n  }\n\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1,\n        n = coordinates.length;\n    listener.polygonStart();\n\n    while (++i < n) {\n      d3_geo_streamLine(coordinates[i], listener, 1);\n    }\n\n    listener.polygonEnd();\n  }\n\n  d3.geo.area = function (object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n\n  var d3_geo_areaSum,\n      d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function sphere() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function polygonStart() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n\n    d3_geo_area.point = function (λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), sinφ0 = Math.sin(φ);\n    };\n\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0,\n          sdλ = dλ >= 0 ? 1 : -1,\n          adλ = sdλ * dλ,\n          cosφ = Math.cos(φ),\n          sinφ = Math.sin(φ),\n          k = sinφ0 * sinφ,\n          u = cosφ0 * cosφ + k * Math.cos(adλ),\n          v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n\n    d3_geo_area.lineEnd = function () {\n      nextPoint(λ00, φ00);\n    };\n  }\n\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0],\n        φ = spherical[1],\n        cosφ = Math.cos(φ);\n    return [cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ)];\n  }\n\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n\n  function d3_geo_cartesianCross(a, b) {\n    return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n  }\n\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n\n  function d3_geo_cartesianScale(vector, k) {\n    return [vector[0] * k, vector[1] * k, vector[2] * k];\n  }\n\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n\n  function d3_geo_spherical(cartesian) {\n    return [Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2])];\n  }\n\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n\n  d3.geo.bounds = function () {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function polygonEnd() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90);else if (dλSum > ε) φ1 = 90;else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n\n    function point(λ, φ) {\n      ranges.push(range = [λ0 = λ, λ1 = λ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([λ * d3_radians, φ * d3_radians]);\n\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p),\n            equatorial = [normal[1], -normal[0], 0],\n            inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_,\n            s = dλ > 0 ? 1 : -1,\n            λi = inflection[0] * d3_degrees * s,\n            antimeridian = abs(dλ) > 180;\n\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n\n      p0 = p, λ_ = λ;\n    }\n\n    function lineStart() {\n      bound.point = linePoint;\n    }\n\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n\n    return function (feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n\n      if (n) {\n        ranges.sort(compareRanges);\n\n        for (var i = 1, a = ranges[0], b, merged = [a]; i < n; ++i) {\n          b = ranges[i];\n\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n\n        var best = -Infinity,\n            dλ;\n\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[λ0, φ0], [λ1, φ1]];\n    };\n  }();\n\n  d3.geo.centroid = function (object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2,\n        y = d3_geo_centroidY2,\n        z = d3_geo_centroidZ2,\n        m = x * x + y * y + z * z;\n\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [NaN, NaN];\n    }\n\n    return [Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees];\n  };\n\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function polygonStart() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n\n    d3_geo_centroid.point = function (λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians),\n          x = cosφ * Math.cos(λ),\n          y = cosφ * Math.sin(λ),\n          z = Math.sin(φ),\n          w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n\n    d3_geo_centroid.point = function (λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n\n    d3_geo_centroid.lineEnd = function () {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians),\n          x = cosφ * Math.cos(λ),\n          y = cosφ * Math.sin(λ),\n          z = Math.sin(φ),\n          cx = y0 * z - z0 * y,\n          cy = z0 * x - x0 * z,\n          cz = x0 * y - y0 * x,\n          m = Math.sqrt(cx * cx + cy * cy + cz * cz),\n          u = x0 * x + y0 * y + z0 * z,\n          v = m && -d3_acos(u) / m,\n          w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n\n    if (a.invert && b.invert) compose.invert = function (x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n\n  function d3_true() {\n    return true;\n  }\n\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [],\n        clip = [];\n    segments.forEach(function (segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n,\n          p0 = segment[0],\n          p1 = segment[n];\n\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n\n        for (var i = 0; i < n; ++i) {\n          listener.point((p0 = segment[i])[0], p0[1]);\n        }\n\n        listener.lineEnd();\n        return;\n      }\n\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true),\n          b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n\n    var start = subject[0],\n        points,\n        point;\n\n    while (1) {\n      var current = start,\n          isSubject = true;\n\n      while (current.v) {\n        if ((current = current.n) === start) return;\n      }\n\n      points = current.z;\n      listener.lineStart();\n\n      do {\n        current.v = current.o.v = true;\n\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) {\n              listener.point((point = points[i])[0], point[1]);\n            }\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n\n            for (var i = points.length - 1; i >= 0; --i) {\n              listener.point((point = points[i])[0], point[1]);\n            }\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n\n          current = current.p;\n        }\n\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n\n      listener.lineEnd();\n    }\n  }\n\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n,\n        i = 0,\n        a = array[0],\n        b;\n\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n\n    a.n = b = array[0];\n    b.p = a;\n  }\n\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function (rotate, listener) {\n      var line = clipLine(listener),\n          rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function polygonStart() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function polygonEnd() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function sphere() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n\n      var segments;\n      var buffer = d3_geo_clipBufferListener(),\n          ringListener = clipLine(buffer),\n          polygonStarted = false,\n          polygon,\n          ring;\n\n      function pointRing(λ, φ) {\n        ring.push([λ, φ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(),\n            ringSegments = buffer.buffer(),\n            segment,\n            n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1,\n              i = -1,\n              point;\n\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n\n            while (++i < n) {\n              listener.point((point = segment[i])[0], point[1]);\n            }\n\n            listener.lineEnd();\n          }\n\n          return;\n        }\n\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n\n      return clip;\n    };\n  }\n\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n\n  function d3_geo_clipBufferListener() {\n    var lines = [],\n        line;\n    return {\n      lineStart: function lineStart() {\n        lines.push(line = []);\n      },\n      point: function point(λ, φ) {\n        line.push([λ, φ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function buffer() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function rejoin() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [-π, -π / 2]);\n\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN,\n        φ0 = NaN,\n        sλ0 = NaN,\n        _clean;\n\n    return {\n      lineStart: function lineStart() {\n        listener.lineStart();\n        _clean = 1;\n      },\n      point: function point(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π,\n            dλ = abs(λ1 - λ0);\n\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          _clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          _clean = 0;\n        }\n\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function lineEnd() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function clean() {\n        return 2 - _clean;\n      }\n    };\n  }\n\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0,\n        cosφ1,\n        sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0],\n        parallel = point[1],\n        meridianNormal = [Math.sin(meridian), -Math.cos(meridian), 0],\n        polarAngle = 0,\n        winding = 0;\n    d3_geo_areaRingSum.reset();\n\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i],\n          m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0],\n          λ0 = point0[0],\n          φ0 = point0[1] / 2 + π / 4,\n          sinφ0 = Math.sin(φ0),\n          cosφ0 = Math.cos(φ0),\n          j = 1;\n\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0],\n            φ = point[1] / 2 + π / 4,\n            sinφ = Math.sin(φ),\n            cosφ = Math.cos(φ),\n            dλ = λ - λ0,\n            sdλ = dλ >= 0 ? 1 : -1,\n            adλ = sdλ * dλ,\n            antimeridian = adλ > π,\n            k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius),\n        smallRadius = cr > 0,\n        notHemisphere = abs(cr) > ε,\n        interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-π, radius - π]);\n\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n\n    function clipLine(listener) {\n      var point0, c0, v0, v00, _clean2;\n\n      return {\n        lineStart: function lineStart() {\n          v00 = v0 = false;\n          _clean2 = 1;\n        },\n        point: function point(λ, φ) {\n          var point1 = [λ, φ],\n              point2,\n              v = visible(λ, φ),\n              c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n\n          if (v !== v0) {\n            _clean2 = 0;\n\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              _clean2 = 0;\n\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function lineEnd() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function clean() {\n          return _clean2 | (v00 && v0) << 1;\n        }\n      };\n    }\n\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a),\n          pb = d3_geo_cartesian(b);\n      var n1 = [1, 0, 0],\n          n2 = d3_geo_cartesianCross(pa, pb),\n          n2n2 = d3_geo_cartesianDot(n2, n2),\n          n1n2 = n2[0],\n          determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant,\n          c2 = -cr * n1n2 / determinant,\n          n1xn2 = d3_geo_cartesianCross(n1, n2),\n          A = d3_geo_cartesianScale(n1, c1),\n          B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2,\n          w = d3_geo_cartesianDot(A, u),\n          uu = d3_geo_cartesianDot(u, u),\n          t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2),\n          q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0],\n          λ1 = b[0],\n          φ0 = a[1],\n          φ1 = b[1],\n          z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0,\n          polar = abs(δλ - π) < ε,\n          meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [q, d3_geo_spherical(q1)];\n      }\n    }\n\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius,\n          code = 0;\n      if (λ < -r) code |= 1;else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4;else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function (line) {\n      var a = line.a,\n          b = line.b,\n          ax = a.x,\n          ay = a.y,\n          bx = b.x,\n          by = b.y,\n          t0 = 0,\n          t1 = 1,\n          dx = bx - ax,\n          dy = by - ay,\n          r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n\n  var d3_geo_clipExtentMAX = 1e9;\n\n  d3.geo.clipExtent = function () {\n    var x0,\n        y0,\n        x1,\n        y1,\n        _stream,\n        clip,\n        clipExtent = {\n      stream: function stream(output) {\n        if (_stream) _stream.valid = false;\n        _stream = clip(output);\n        _stream.valid = true;\n        return _stream;\n      },\n      extent: function extent(_) {\n        if (!arguments.length) return [[x0, y0], [x1, y1]];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (_stream) _stream.valid = false, _stream = null;\n        return clipExtent;\n      }\n    };\n\n    return clipExtent.extent([[0, 0], [960, 500]]);\n  };\n\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function (listener) {\n      var listener_ = listener,\n          bufferListener = d3_geo_clipBufferListener(),\n          clipLine = d3_geom_clipLine(x0, y0, x1, y1),\n          segments,\n          polygon,\n          ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function polygonStart() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function polygonEnd() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([x0, y1]),\n              inside = clean && clipStartInside,\n              visible = segments.length;\n\n          if (inside || visible) {\n            listener.polygonStart();\n\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n\n            listener.polygonEnd();\n          }\n\n          segments = polygon = ring = null;\n        }\n      };\n\n      function insidePolygon(p) {\n        var wn = 0,\n            n = polygon.length,\n            y = p[1];\n\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n\n            a = b;\n          }\n        }\n\n        return wn !== 0;\n      }\n\n      function interpolate(from, to, direction, listener) {\n        var a = 0,\n            a1 = 0;\n\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n\n      var x__, y__, v__, x_, y_, v_, first, clean;\n\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([x, y]);\n\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y);else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n\n        x_ = x, y_ = y, v_ = v;\n      }\n\n      return clip;\n    };\n\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n\n    function comparePoints(a, b) {\n      var ca = corner(a, 1),\n          cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0,\n        φ1 = π / 3,\n        m = d3_geo_projectionMutator(projectAt),\n        p = m(φ0, φ1);\n\n    p.parallels = function (_) {\n      if (!arguments.length) return [φ0 / π * 180, φ1 / π * 180];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n\n    return p;\n  }\n\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0),\n        n = (sinφ0 + Math.sin(φ1)) / 2,\n        C = 1 + sinφ0 * (2 * n - sinφ0),\n        ρ0 = Math.sqrt(C) / n;\n\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ)];\n    }\n\n    forward.invert = function (x, y) {\n      var ρ0_y = ρ0 - y;\n      return [Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n))];\n    };\n\n    return forward;\n  }\n\n  (d3.geo.conicEqualArea = function () {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n\n  d3.geo.albers = function () {\n    return d3.geo.conicEqualArea().rotate([96, 0]).center([-.6, 38.7]).parallels([29.5, 45.5]).scale(1070);\n  };\n\n  d3.geo.albersUsa = function () {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]);\n    var hawaii = d3.geo.conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]);\n\n    var _point,\n        pointStream = {\n      point: function point(x, y) {\n        _point = [x, y];\n      }\n    },\n        lower48Point,\n        alaskaPoint,\n        hawaiiPoint;\n\n    function albersUsa(coordinates) {\n      var x = coordinates[0],\n          y = coordinates[1];\n      _point = null;\n      (lower48Point(x, y), _point) || (alaskaPoint(x, y), _point) || hawaiiPoint(x, y);\n      return _point;\n    }\n\n    albersUsa.invert = function (coordinates) {\n      var k = lower48.scale(),\n          t = lower48.translate(),\n          x = (coordinates[0] - t[0]) / k,\n          y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n\n    albersUsa.stream = function (stream) {\n      var lower48Stream = lower48.stream(stream),\n          alaskaStream = alaska.stream(stream),\n          hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function point(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function sphere() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function lineStart() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function lineEnd() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function polygonStart() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function polygonEnd() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n\n    albersUsa.precision = function (_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n\n    albersUsa.scale = function (_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n\n    albersUsa.translate = function (_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(),\n          x = +_[0],\n          y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([[x - .455 * k, y - .238 * k], [x + .455 * k, y + .238 * k]]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([x - .307 * k, y + .201 * k]).clipExtent([[x - .425 * k + ε, y + .12 * k + ε], [x - .214 * k - ε, y + .234 * k - ε]]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([x - .205 * k, y + .212 * k]).clipExtent([[x - .214 * k + ε, y + .166 * k + ε], [x - .115 * k - ε, y + .234 * k - ε]]).stream(pointStream).point;\n      return albersUsa;\n    };\n\n    return albersUsa.scale(1070);\n  };\n\n  var d3_geo_pathAreaSum,\n      d3_geo_pathAreaPolygon,\n      d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function polygonStart() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n\n    d3_geo_pathArea.point = function (x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n\n    d3_geo_pathArea.lineEnd = function () {\n      nextPoint(x00, y00);\n    };\n  }\n\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5),\n        buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function lineStart() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function pointRadius(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function result() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n\n    function lineEnd() {\n      stream.point = point;\n    }\n\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n\n    return stream;\n  }\n\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function polygonStart() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n\n    d3_geo_pathCentroid.point = function (x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n\n    function nextPoint(x, y) {\n      var dx = x - x0,\n          dy = y - y0,\n          z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n\n    d3_geo_pathCentroid.point = function (x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n\n    function nextPoint(x, y) {\n      var dx = x - x0,\n          dy = y - y0,\n          z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n\n    d3_geo_pathCentroid.lineEnd = function () {\n      nextPoint(x00, y00);\n    };\n  }\n\n  function d3_geo_pathContext(context) {\n    var _pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function lineStart() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function pointRadius(_) {\n        _pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n\n    function point(x, y) {\n      context.moveTo(x + _pointRadius, y);\n      context.arc(x, y, _pointRadius, 0, τ);\n    }\n\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n\n    function lineEnd() {\n      stream.point = point;\n    }\n\n    function lineEndPolygon() {\n      context.closePath();\n    }\n\n    return stream;\n  }\n\n  function d3_geo_resample(project) {\n    var δ2 = .5,\n        cosMinDistance = Math.cos(30 * d3_radians),\n        maxDepth = 16;\n\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function (x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function polygonStart() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function polygonEnd() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([λ, φ]),\n            p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n\n      return resample;\n    }\n\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0,\n          dy = y1 - y0,\n          d2 = dx * dx + dy * dy;\n\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1,\n            b = b0 + b1,\n            c = c0 + c1,\n            m = Math.sqrt(a * a + b * b + c * c),\n            φ2 = Math.asin(c /= m),\n            λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a),\n            p = project(λ2, φ2),\n            x2 = p[0],\n            y2 = p[1],\n            dx2 = x2 - x0,\n            dy2 = y2 - y0,\n            dz = dy * dx2 - dx * dy2;\n\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n\n    resample.precision = function (_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n\n    return resample;\n  }\n\n  d3.geo.path = function () {\n    var pointRadius = 4.5,\n        projection,\n        context,\n        projectStream,\n        contextStream,\n        cacheStream;\n\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n\n      return contextStream.result();\n    }\n\n    path.area = function (object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n\n    path.centroid = function (object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2] : d3_geo_centroidZ1 ? [d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1] : d3_geo_centroidZ0 ? [d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0] : [NaN, NaN];\n    };\n\n    path.bounds = function (object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [[d3_geo_pathBoundsX0, d3_geo_pathBoundsY0], [d3_geo_pathBoundsX1, d3_geo_pathBoundsY1]];\n    };\n\n    path.projection = function (_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n\n    path.context = function (_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n\n    path.pointRadius = function (_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function (x, y) {\n      return project([x * d3_degrees, y * d3_degrees]);\n    });\n    return function (stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n\n  d3.geo.transform = function (methods) {\n    return {\n      stream: function stream(_stream2) {\n        var transform = new d3_geo_transform(_stream2);\n\n        for (var k in methods) {\n          transform[k] = methods[k];\n        }\n\n        return transform;\n      }\n    };\n  };\n\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n\n  d3_geo_transform.prototype = {\n    point: function point(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function sphere() {\n      this.stream.sphere();\n    },\n    lineStart: function lineStart() {\n      this.stream.lineStart();\n    },\n    lineEnd: function lineEnd() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function polygonStart() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function polygonEnd() {\n      this.stream.polygonEnd();\n    }\n  };\n\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function sphere() {\n        stream.sphere();\n      },\n      lineStart: function lineStart() {\n        stream.lineStart();\n      },\n      lineEnd: function lineEnd() {\n        stream.lineEnd();\n      },\n      polygonStart: function polygonStart() {\n        stream.polygonStart();\n      },\n      polygonEnd: function polygonEnd() {\n        stream.polygonEnd();\n      }\n    };\n  }\n\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function () {\n      return project;\n    })();\n  }\n\n  function d3_geo_projectionMutator(projectAt) {\n    var project,\n        rotate,\n        projectRotate,\n        projectResample = d3_geo_resample(function (x, y) {\n      x = project(x, y);\n      return [x[0] * k + δx, δy - x[1] * k];\n    }),\n        k = 150,\n        x = 480,\n        y = 250,\n        λ = 0,\n        φ = 0,\n        δλ = 0,\n        δφ = 0,\n        δγ = 0,\n        δx,\n        δy,\n        preclip = d3_geo_clipAntimeridian,\n        postclip = d3_identity,\n        clipAngle = null,\n        clipExtent = null,\n        stream;\n\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [point[0] * k + δx, δy - point[1] * k];\n    }\n\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [point[0] * d3_degrees, point[1] * d3_degrees];\n    }\n\n    projection.stream = function (output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n\n    projection.clipAngle = function (_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n\n    projection.clipExtent = function (_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n\n    projection.scale = function (_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n\n    projection.translate = function (_) {\n      if (!arguments.length) return [x, y];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n\n    projection.center = function (_) {\n      if (!arguments.length) return [λ * d3_degrees, φ * d3_degrees];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n\n    projection.rotate = function (_) {\n      if (!arguments.length) return [δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n\n    d3.rebind(projection, projectResample, \"precision\");\n\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n\n    return function () {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function (x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n\n  function d3_geo_equirectangular(λ, φ) {\n    return [λ, φ];\n  }\n\n  (d3.geo.equirectangular = function () {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\n  d3.geo.rotation = function (rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n\n    forward.invert = function (coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n\n    return forward;\n  };\n\n  function d3_geo_identityRotation(λ, φ) {\n    return [λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ];\n  }\n\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n\n  function d3_geo_forwardRotationλ(δλ) {\n    return function (λ, φ) {\n      return λ += δλ, [λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ];\n    };\n  }\n\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ),\n        sinδφ = Math.sin(δφ),\n        cosδγ = Math.cos(δγ),\n        sinδγ = Math.sin(δγ);\n\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ),\n          x = Math.cos(λ) * cosφ,\n          y = Math.sin(λ) * cosφ,\n          z = Math.sin(φ),\n          k = z * cosδφ + x * sinδφ;\n      return [Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ)];\n    }\n\n    rotation.invert = function (λ, φ) {\n      var cosφ = Math.cos(φ),\n          x = Math.cos(λ) * cosφ,\n          y = Math.sin(λ) * cosφ,\n          z = Math.sin(φ),\n          k = z * cosδγ - y * sinδγ;\n      return [Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ)];\n    };\n\n    return rotation;\n  }\n\n  d3.geo.circle = function () {\n    var origin = [0, 0],\n        angle,\n        precision = 6,\n        interpolate;\n\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin,\n          rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert,\n          ring = [];\n      interpolate(null, null, 1, {\n        point: function point(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ring]\n      };\n    }\n\n    circle.origin = function (x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n\n    circle.angle = function (x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n\n    circle.precision = function (_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n\n    return circle.angle(90);\n  };\n\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius),\n        sr = Math.sin(radius);\n    return function (from, to, direction, listener) {\n      var step = direction * precision;\n\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([cr, -sr * Math.cos(t), -sr * Math.sin(t)]))[0], point[1]);\n      }\n    };\n  }\n\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n\n  d3.geo.distance = function (a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians,\n        φ0 = a[1] * d3_radians,\n        φ1 = b[1] * d3_radians,\n        sinΔλ = Math.sin(Δλ),\n        cosΔλ = Math.cos(Δλ),\n        sinφ0 = Math.sin(φ0),\n        cosφ0 = Math.cos(φ0),\n        sinφ1 = Math.sin(φ1),\n        cosφ1 = Math.cos(φ1),\n        t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n\n  d3.geo.graticule = function () {\n    var x1,\n        x0,\n        X1,\n        X0,\n        y1,\n        y0,\n        Y1,\n        Y0,\n        dx = 10,\n        dy = dx,\n        DX = 90,\n        DY = 360,\n        x,\n        y,\n        X,\n        Y,\n        precision = 2.5;\n\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function (x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function (y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n\n    graticule.lines = function () {\n      return lines().map(function (coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n\n    graticule.outline = function () {\n      return {\n        type: \"Polygon\",\n        coordinates: [X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]\n      };\n    };\n\n    graticule.extent = function (_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n\n    graticule.majorExtent = function (_) {\n      if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n\n    graticule.minorExtent = function (_) {\n      if (!arguments.length) return [[x0, y0], [x1, y1]];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n\n    graticule.step = function (_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n\n    graticule.majorStep = function (_) {\n      if (!arguments.length) return [DX, DY];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n\n    graticule.minorStep = function (_) {\n      if (!arguments.length) return [dx, dy];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n\n    graticule.precision = function (_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n\n    return graticule.majorExtent([[-180, -90 + ε], [180, 90 - ε]]).minorExtent([[-180, -80 - ε], [180, 80 + ε]]);\n  };\n\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function (x) {\n      return y.map(function (y) {\n        return [x, y];\n      });\n    };\n  }\n\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function (y) {\n      return x.map(function (x) {\n        return [x, y];\n      });\n    };\n  }\n\n  function d3_source(d) {\n    return d.source;\n  }\n\n  function d3_target(d) {\n    return d.target;\n  }\n\n  d3.geo.greatArc = function () {\n    var source = d3_source,\n        source_,\n        target = d3_target,\n        target_;\n\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [source_ || source.apply(this, arguments), target_ || target.apply(this, arguments)]\n      };\n    }\n\n    greatArc.distance = function () {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n\n    greatArc.source = function (_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n\n    greatArc.target = function (_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n\n    greatArc.precision = function () {\n      return arguments.length ? greatArc : 0;\n    };\n\n    return greatArc;\n  };\n\n  d3.geo.interpolate = function (source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0),\n        sy0 = Math.sin(y0),\n        cy1 = Math.cos(y1),\n        sy1 = Math.sin(y1),\n        kx0 = cy0 * Math.cos(x0),\n        ky0 = cy0 * Math.sin(x0),\n        kx1 = cy1 * Math.cos(x1),\n        ky1 = cy1 * Math.sin(x1),\n        d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))),\n        k = 1 / Math.sin(d);\n    var interpolate = d ? function (t) {\n      var B = Math.sin(t *= d) * k,\n          A = Math.sin(d - t) * k,\n          x = A * kx0 + B * kx1,\n          y = A * ky0 + B * ky1,\n          z = A * sy0 + B * sy1;\n      return [Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees];\n    } : function () {\n      return [x0 * d3_degrees, y0 * d3_degrees];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n\n  d3.geo.length = function (object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n\n    d3_geo_length.point = function (λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n\n    d3_geo_length.lineEnd = function () {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians),\n          cosφ = Math.cos(φ),\n          t = abs((λ *= d3_radians) - λ0),\n          cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ),\n          cosφ = Math.cos(φ),\n          k = scale(cosλ * cosφ);\n      return [k * cosφ * Math.sin(λ), k * Math.sin(φ)];\n    }\n\n    azimuthal.invert = function (x, y) {\n      var ρ = Math.sqrt(x * x + y * y),\n          c = angle(ρ),\n          sinc = Math.sin(c),\n          cosc = Math.cos(c);\n      return [Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ)];\n    };\n\n    return azimuthal;\n  }\n\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function (cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function (ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function () {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function (cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function () {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0),\n        t = function t(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    },\n        n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)),\n        F = cosφ0 * Math.pow(t(φ0), n) / n;\n\n    if (!n) return d3_geo_mercator;\n\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n\n      var ρ = F / Math.pow(t(φ), n);\n      return [ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ)];\n    }\n\n    forward.invert = function (x, y) {\n      var ρ0_y = F - y,\n          ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ];\n    };\n\n    return forward;\n  }\n\n  (d3.geo.conicConformal = function () {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0),\n        n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0),\n        G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ)];\n    }\n\n    forward.invert = function (x, y) {\n      var ρ0_y = G - y;\n      return [Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y)];\n    };\n\n    return forward;\n  }\n\n  (d3.geo.conicEquidistant = function () {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function (cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function () {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n\n  function d3_geo_mercator(λ, φ) {\n    return [λ, Math.log(Math.tan(π / 4 + φ / 2))];\n  }\n\n  d3_geo_mercator.invert = function (x, y) {\n    return [x, 2 * Math.atan(Math.exp(y)) - halfπ];\n  };\n\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project),\n        scale = m.scale,\n        translate = m.translate,\n        clipExtent = m.clipExtent,\n        clipAuto;\n\n    m.scale = function () {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n\n    m.translate = function () {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n\n    m.clipExtent = function (_) {\n      var v = clipExtent.apply(m, arguments);\n\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(),\n              t = translate();\n          clipExtent([[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n\n      return v;\n    };\n\n    return m.clipExtent(null);\n  }\n\n  (d3.geo.mercator = function () {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function () {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function () {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function (cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function (ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function () {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n\n  function d3_geo_transverseMercator(λ, φ) {\n    return [Math.log(Math.tan(π / 4 + φ / 2)), -λ];\n  }\n\n  d3_geo_transverseMercator.invert = function (x, y) {\n    return [-y, 2 * Math.atan(Math.exp(x)) - halfπ];\n  };\n\n  (d3.geo.transverseMercator = function () {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator),\n        center = projection.center,\n        rotate = projection.rotate;\n\n    projection.center = function (_) {\n      return _ ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n    };\n\n    projection.rotate = function (_) {\n      return _ ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n    };\n\n    return rotate([0, 0, 90]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n\n  d3.geom.hull = function (vertices) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x),\n          fy = d3_functor(y),\n          i,\n          n = data.length,\n          points = [],\n          flippedPoints = [];\n\n      for (i = 0; i < n; i++) {\n        points.push([+fx.call(this, data[i], i), +fy.call(this, data[i], i), i]);\n      }\n\n      points.sort(d3_geom_hullOrder);\n\n      for (i = 0; i < n; i++) {\n        flippedPoints.push([points[i][0], -points[i][1]]);\n      }\n\n      var upper = d3_geom_hullUpper(points),\n          lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0],\n          skipRight = lower[lower.length - 1] === upper[upper.length - 1],\n          polygon = [];\n\n      for (i = upper.length - 1; i >= 0; --i) {\n        polygon.push(data[points[upper[i]][2]]);\n      }\n\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) {\n        polygon.push(data[points[lower[i]][2]]);\n      }\n\n      return polygon;\n    }\n\n    hull.x = function (_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n\n    hull.y = function (_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n\n    return hull;\n  };\n\n  function d3_geom_hullUpper(points) {\n    var n = points.length,\n        hull = [0, 1],\n        hs = 2;\n\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) {\n        --hs;\n      }\n\n      hull[hs++] = i;\n    }\n\n    return hull.slice(0, hs);\n  }\n\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n\n  d3.geom.polygon = function (coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\n  d3_geom_polygonPrototype.area = function () {\n    var i = -1,\n        n = this.length,\n        a,\n        b = this[n - 1],\n        area = 0;\n\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n\n    return area * .5;\n  };\n\n  d3_geom_polygonPrototype.centroid = function (k) {\n    var i = -1,\n        n = this.length,\n        x = 0,\n        y = 0,\n        a,\n        b = this[n - 1],\n        c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n\n    return [x * k, y * k];\n  };\n\n  d3_geom_polygonPrototype.clip = function (subject) {\n    var input,\n        closed = d3_geom_polygonClosed(subject),\n        i = -1,\n        n = this.length - d3_geom_polygonClosed(this),\n        j,\n        m,\n        a = this[n - 1],\n        b,\n        c,\n        d;\n\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n\n      while (++j < m) {\n        d = input[j];\n\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n\n        c = d;\n      }\n\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n\n    return subject;\n  };\n\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0],\n        x3 = a[0],\n        x21 = d[0] - x1,\n        x43 = b[0] - x3,\n        y1 = c[1],\n        y3 = a[1],\n        y21 = d[1] - y1,\n        y43 = b[1] - y3,\n        ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [x1 + ua * x21, y1 + ua * y21];\n  }\n\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0],\n        b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n\n  var d3_geom_voronoiEdges,\n      d3_geom_voronoiCells,\n      d3_geom_voronoiBeaches,\n      d3_geom_voronoiBeachPool = [],\n      d3_geom_voronoiFirstCircle,\n      d3_geom_voronoiCircles,\n      d3_geom_voronoiCirclePool = [];\n\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle,\n        x = circle.x,\n        y = circle.cy,\n        vertex = {\n      x: x,\n      y: y\n    },\n        previous = beach.P,\n        next = beach.N,\n        disappearing = [beach];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length,\n        iArc;\n\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x,\n        directrix = site.y,\n        lArc,\n        rArc,\n        dxl,\n        dxr,\n        node = d3_geom_voronoiBeaches._;\n\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L;else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n\n          break;\n        }\n      }\n    }\n\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site,\n        ax = lSite.x,\n        ay = lSite.y,\n        bx = site.x - ax,\n        by = site.y - ay,\n        rSite = rArc.site,\n        cx = rSite.x - ax,\n        cy = rSite.y - ay,\n        d = 2 * (bx * cy - by * cx),\n        hb = bx * bx + by * by,\n        hc = cx * cx + cy * cy,\n        vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site,\n        rfocx = site.x,\n        rfocy = site.y,\n        pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x,\n        lfocy = site.y,\n        plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx,\n        aby2 = 1 / pby2 - 1 / plby2,\n        b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n\n  d3_geom_voronoiCell.prototype.prepare = function () {\n    var halfEdges = this.edges,\n        iHalfEdge = halfEdges.length,\n        edge;\n\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0],\n        x1 = extent[1][0],\n        y0 = extent[0][1],\n        y1 = extent[1][1],\n        x2,\n        y2,\n        x3,\n        y3,\n        cells = d3_geom_voronoiCells,\n        iCell = cells.length,\n        cell,\n        iHalfEdge,\n        halfEdges,\n        nHalfEdges,\n        start,\n        end;\n\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P,\n        rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site,\n        cSite = arc.site,\n        rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x,\n        by = cSite.y,\n        ax = lSite.x - bx,\n        ay = lSite.y - by,\n        cx = rSite.x - bx,\n        cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay,\n        hc = cx * cx + cy * cy,\n        x = (cy * ha - ay * hc) / d,\n        y = (ax * hc - cx * ha) / d,\n        cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null,\n        node = d3_geom_voronoiCircles._;\n\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L;else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R;else {\n          before = node;\n          break;\n        }\n      }\n    }\n\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges,\n        clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]),\n        i = edges.length,\n        e;\n\n    while (i--) {\n      e = edges[i];\n\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a,\n        x0 = extent[0][0],\n        x1 = extent[1][0],\n        y0 = extent[0][1],\n        y1 = extent[1][1],\n        lSite = edge.l,\n        rSite = edge.r,\n        lx = lSite.x,\n        ly = lSite.y,\n        rx = rSite.x,\n        ry = rSite.y,\n        fx = (lx + rx) / 2,\n        fy = (ly + ry) / 2,\n        fm,\n        fb;\n\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        };else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        };else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          };else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          };else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a,\n        vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function start() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function end() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function insert(after, node) {\n      var parent, grandpa, uncle;\n\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n\n        if (after.R) {\n          after = after.R;\n\n          while (after.L) {\n            after = after.L;\n          }\n\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n\n      while (parent && parent.C) {\n        grandpa = parent.U;\n\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n\n        parent = after.U;\n      }\n\n      this._.C = false;\n    },\n    remove: function remove(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U,\n          sibling,\n          left = node.L,\n          right = node.R,\n          next,\n          red;\n      if (!left) next = right;else if (!right) next = left;else next = d3_geom_voronoiRedBlackFirst(right);\n\n      if (parent) {\n        if (parent.L === node) parent.L = next;else parent.R = next;\n      } else {\n        this._ = next;\n      }\n\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n\n      if (node) node.U = parent;\n      if (red) return;\n\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n\n      do {\n        if (node === this._) break;\n\n        if (node === parent.L) {\n          sibling = parent.R;\n\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n\n      if (node) node.C = false;\n    }\n  };\n\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node,\n        q = node.R,\n        parent = p.U;\n\n    if (parent) {\n      if (parent.L === p) parent.L = q;else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node,\n        q = node.L,\n        parent = p.U;\n\n    if (parent) {\n      if (parent.L === p) parent.L = q;else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) {\n      node = node.L;\n    }\n\n    return node;\n  }\n\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(),\n        x0,\n        y0,\n        circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n\n  d3.geom.voronoi = function (points) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY,\n        fx = x,\n        fy = y,\n        clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n\n    function voronoi(data) {\n      var polygons = new Array(data.length),\n          x0 = clipExtent[0][0],\n          y0 = clipExtent[0][1],\n          x1 = clipExtent[1][0],\n          y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function (cell, i) {\n        var edges = cell.edges,\n            site = cell.site,\n            polygon = polygons[i] = edges.length ? edges.map(function (e) {\n          var s = e.start();\n          return [s.x, s.y];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [[x0, y1], [x1, y1], [x1, y0], [x0, y0]] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n\n    function sites(data) {\n      return data.map(function (d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n\n    voronoi.links = function (data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function (edge) {\n        return edge.l && edge.r;\n      }).map(function (edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n\n    voronoi.triangles = function (data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function (cell, i) {\n        var site = cell.site,\n            edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder),\n            j = -1,\n            m = edges.length,\n            e0,\n            s0,\n            e1 = edges[m - 1].edge,\n            s1 = e1.l === site ? e1.r : e1.l;\n\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([data[i], data[s0.i], data[s1.i]]);\n          }\n        }\n      });\n      return triangles;\n    };\n\n    voronoi.x = function (_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n\n    voronoi.y = function (_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n\n    voronoi.clipExtent = function (_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n\n    voronoi.size = function (_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [[0, 0], _]);\n    };\n\n    return voronoi;\n  };\n\n  var d3_geom_voronoiClipExtent = [[-1e6, -1e6], [1e6, 1e6]];\n\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n\n  d3.geom.delaunay = function (vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n\n  d3.geom.quadtree = function (points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY,\n        compat;\n\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n\n      return quadtree(points);\n    }\n\n    function quadtree(data) {\n      var d,\n          fx = d3_functor(x),\n          fy = d3_functor(y),\n          xs,\n          ys,\n          i,\n          n,\n          x1_,\n          y1_,\n          x2_,\n          y2_;\n\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i),\n              y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n\n      var dx = x2_ - x1_,\n          dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx;else x2_ = x1_ + dy;\n\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n\n        if (n.leaf) {\n          var nx = n.x,\n              ny = n.y;\n\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5,\n            ym = (y1 + y2) * .5,\n            right = x >= xm,\n            below = y >= ym,\n            i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm;else x2 = xm;\n        if (below) y1 = ym;else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n\n      var root = d3_geom_quadtreeNode();\n\n      root.add = function (d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n\n      root.visit = function (f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n\n      root.find = function (point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n\n      i = -1;\n\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n\n        --i;\n      } else data.forEach(root.add);\n\n      xs = ys = data = d = null;\n      return root;\n    }\n\n    quadtree.x = function (_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n\n    quadtree.y = function (_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n\n    quadtree.extent = function (_) {\n      if (!arguments.length) return x1 == null ? null : [[x1, y1], [x2, y2]];\n      if (_ == null) x1 = y1 = x2 = y2 = null;else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], y2 = +_[1][1];\n      return quadtree;\n    };\n\n    quadtree.size = function (_) {\n      if (!arguments.length) return x1 == null ? null : [x2 - x1, y2 - y1];\n      if (_ == null) x1 = y1 = x2 = y2 = null;else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n\n    return quadtree;\n  };\n\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5,\n          sy = (y1 + y2) * .5,\n          children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity,\n        closestPoint;\n\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\n      if (point = node.point) {\n        var point,\n            dx = x - node.x,\n            dy = y - node.y,\n            distance2 = dx * dx + dy * dy;\n\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n\n      var children = node.nodes,\n          xm = (x1 + x2) * .5,\n          ym = (y1 + y2) * .5,\n          right = x >= xm,\n          below = y >= ym;\n\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n          case 0:\n            find(node, x1, y1, xm, ym);\n            break;\n\n          case 1:\n            find(node, xm, y1, x2, ym);\n            break;\n\n          case 2:\n            find(node, x1, ym, xm, y2);\n            break;\n\n          case 3:\n            find(node, xm, ym, x2, y2);\n            break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n\n    return closestPoint;\n  }\n\n  d3.interpolateRgb = d3_interpolateRgb;\n\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r,\n        ag = a.g,\n        ab = a.b,\n        br = b.r - ar,\n        bg = b.g - ag,\n        bb = b.b - ab;\n    return function (t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n\n  d3.interpolateObject = d3_interpolateObject;\n\n  function d3_interpolateObject(a, b) {\n    var i = {},\n        c = {},\n        k;\n\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n\n    return function (t) {\n      for (k in i) {\n        c[k] = i[k](t);\n      }\n\n      return c;\n    };\n  }\n\n  d3.interpolateNumber = d3_interpolateNumber;\n\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function (t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n\n  d3.interpolateString = d3_interpolateString;\n\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0,\n        am,\n        bm,\n        bs,\n        i = -1,\n        s = [],\n        q = [];\n    a = a + \"\", b = b + \"\";\n\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs;else s[++i] = bs;\n      }\n\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm;else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs;else s[++i] = bs;\n    }\n\n    return s.length < 2 ? q[0] ? (b = q[0].x, function (t) {\n      return b(t) + \"\";\n    }) : function () {\n      return b;\n    } : (b = q.length, function (t) {\n      for (var i = 0, o; i < b; ++i) {\n        s[(o = q[i]).i] = o.x(t);\n      }\n\n      return s.join(\"\");\n    });\n  }\n\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n      d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length,\n        f;\n\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) {\n      ;\n    }\n\n    return f;\n  }\n\n  d3.interpolators = [function (a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  }];\n  d3.interpolateArray = d3_interpolateArray;\n\n  function d3_interpolateArray(a, b) {\n    var x = [],\n        c = [],\n        na = a.length,\n        nb = b.length,\n        n0 = Math.min(a.length, b.length),\n        i;\n\n    for (i = 0; i < n0; ++i) {\n      x.push(d3_interpolate(a[i], b[i]));\n    }\n\n    for (; i < na; ++i) {\n      c[i] = a[i];\n    }\n\n    for (; i < nb; ++i) {\n      c[i] = b[i];\n    }\n\n    return function (t) {\n      for (i = 0; i < n0; ++i) {\n        c[i] = x[i](t);\n      }\n\n      return c;\n    };\n  }\n\n  var d3_ease_default = function d3_ease_default() {\n    return d3_identity;\n  };\n\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function quad() {\n      return d3_ease_quad;\n    },\n    cubic: function cubic() {\n      return d3_ease_cubic;\n    },\n    sin: function sin() {\n      return d3_ease_sin;\n    },\n    exp: function exp() {\n      return d3_ease_exp;\n    },\n    circle: function circle() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function bounce() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function outIn(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n\n  d3.ease = function (name) {\n    var i = name.indexOf(\"-\"),\n        t = i >= 0 ? name.slice(0, i) : name,\n        m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n\n  function d3_ease_clamp(f) {\n    return function (t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n\n  function d3_ease_reverse(f) {\n    return function (t) {\n      return 1 - f(1 - t);\n    };\n  }\n\n  function d3_ease_reflect(f) {\n    return function (t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t,\n        t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n\n  function d3_ease_poly(e) {\n    return function (t) {\n      return Math.pow(t, e);\n    };\n  }\n\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a);else a = 1, s = p / 4;\n    return function (t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function (t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n\n  d3.interpolateHcl = d3_interpolateHcl;\n\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h,\n        ac = a.c,\n        al = a.l,\n        bh = b.h - ah,\n        bc = b.c - ac,\n        bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah;else if (bh > 180) bh -= 360;else if (bh < -180) bh += 360;\n    return function (t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n\n  d3.interpolateHsl = d3_interpolateHsl;\n\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h,\n        as = a.s,\n        al = a.l,\n        bh = b.h - ah,\n        bs = b.s - as,\n        bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah;else if (bh > 180) bh -= 360;else if (bh < -180) bh += 360;\n    return function (t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n\n  d3.interpolateLab = d3_interpolateLab;\n\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l,\n        aa = a.a,\n        ab = a.b,\n        bl = b.l - al,\n        ba = b.a - aa,\n        bb = b.b - ab;\n    return function (t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n\n  d3.interpolateRound = d3_interpolateRound;\n\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function (t) {\n      return Math.round(a + b * t);\n    };\n  }\n\n  d3.transform = function (string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function (string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n\n  function d3_transform(m) {\n    var r0 = [m.a, m.b],\n        r1 = [m.c, m.d],\n        kx = d3_transformNormalize(r0),\n        kz = d3_transformDot(r0, r1),\n        ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [m.e, m.f];\n    this.scale = [kx, ky];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n\n  d3_transform.prototype.toString = function () {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n\n    return k;\n  }\n\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360;else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n\n  function d3_interpolateTransform(a, b) {\n    var s = [],\n        q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function (t) {\n      var i = -1,\n          n = q.length,\n          o;\n\n      while (++i < n) {\n        s[(o = q[i]).i] = o.x(t);\n      }\n\n      return s.join(\"\");\n    };\n  }\n\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function (x) {\n      return (x - a) / b;\n    };\n  }\n\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function (x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n\n  d3.layout = {};\n\n  d3.layout.bundle = function () {\n    return function (links) {\n      var paths = [],\n          i = -1,\n          n = links.length;\n\n      while (++i < n) {\n        paths.push(d3_layout_bundlePath(links[i]));\n      }\n\n      return paths;\n    };\n  };\n\n  function d3_layout_bundlePath(link) {\n    var start = link.source,\n        end = link.target,\n        lca = d3_layout_bundleLeastCommonAncestor(start, end),\n        points = [start];\n\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n\n    var k = points.length;\n\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n\n    return points;\n  }\n\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [],\n        parent = node.parent;\n\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n\n    ancestors.push(node);\n    return ancestors;\n  }\n\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a),\n        bNodes = d3_layout_bundleAncestors(b),\n        aNode = aNodes.pop(),\n        bNode = bNodes.pop(),\n        sharedNode = null;\n\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n\n    return sharedNode;\n  }\n\n  d3.layout.chord = function () {\n    var chord = {},\n        chords,\n        groups,\n        matrix,\n        n,\n        padding = 0,\n        sortGroups,\n        sortSubgroups,\n        sortChords;\n\n    function relayout() {\n      var subgroups = {},\n          groupSums = [],\n          groupIndex = d3.range(n),\n          subgroupIndex = [],\n          k,\n          x,\n          x0,\n          i,\n          j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n\n      while (++i < n) {\n        x = 0, j = -1;\n\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n\n      if (sortGroups) {\n        groupIndex.sort(function (a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function (d, i) {\n          d.sort(function (a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n\n      while (++i < n) {\n        x0 = x, j = -1;\n\n        while (++j < n) {\n          var di = groupIndex[i],\n              dj = subgroupIndex[di][j],\n              v = matrix[di][dj],\n              a0 = x,\n              a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n\n      i = -1;\n\n      while (++i < n) {\n        j = i - 1;\n\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j],\n              target = subgroups[j + \"-\" + i];\n\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n\n      if (sortChords) resort();\n    }\n\n    function resort() {\n      chords.sort(function (a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n\n    chord.matrix = function (x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n\n    chord.padding = function (x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n\n    chord.sortGroups = function (x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n\n    chord.sortSubgroups = function (x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n\n    chord.sortChords = function (x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n\n    chord.chords = function () {\n      if (!chords) relayout();\n      return chords;\n    };\n\n    chord.groups = function () {\n      if (!groups) relayout();\n      return groups;\n    };\n\n    return chord;\n  };\n\n  d3.layout.force = function () {\n    var force = {},\n        event = d3.dispatch(\"start\", \"tick\", \"end\"),\n        timer,\n        size = [1, 1],\n        drag,\n        alpha,\n        friction = .9,\n        linkDistance = d3_layout_forceLinkDistance,\n        linkStrength = d3_layout_forceLinkStrength,\n        charge = -30,\n        chargeDistance2 = d3_layout_forceChargeDistance2,\n        gravity = .1,\n        theta2 = .64,\n        nodes = [],\n        links = [],\n        distances,\n        strengths,\n        charges;\n\n    function repulse(node) {\n      return function (quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x,\n              dy = quad.cy - node.y,\n              dw = x2 - x1,\n              dn = dx * dx + dy * dy;\n\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n\n            return true;\n          }\n\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n\n        return !quad.charge;\n      };\n    }\n\n    force.tick = function () {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n\n      var n = nodes.length,\n          m = links.length,\n          q,\n          i,\n          o,\n          s,\n          t,\n          l,\n          k,\n          x,\n          y;\n\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n\n      i = -1;\n\n      while (++i < n) {\n        o = nodes[i];\n\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n\n    force.nodes = function (x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n\n    force.links = function (x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n\n    force.size = function (x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n\n    force.linkDistance = function (x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n\n    force.distance = force.linkDistance;\n\n    force.linkStrength = function (x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n\n    force.friction = function (x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n\n    force.charge = function (x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n\n    force.chargeDistance = function (x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n\n    force.gravity = function (x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n\n    force.theta = function (x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n\n    force.alpha = function (x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n\n      return force;\n    };\n\n    force.start = function () {\n      var i,\n          n = nodes.length,\n          m = links.length,\n          w = size[0],\n          h = size[1],\n          neighbors,\n          o;\n\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) {\n        distances[i] = +linkDistance.call(this, links[i], i);\n      } else for (i = 0; i < m; ++i) {\n        distances[i] = linkDistance;\n      }\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) {\n        strengths[i] = +linkStrength.call(this, links[i], i);\n      } else for (i = 0; i < m; ++i) {\n        strengths[i] = linkStrength;\n      }\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) {\n        charges[i] = +charge.call(this, nodes[i], i);\n      } else for (i = 0; i < n; ++i) {\n        charges[i] = charge;\n      }\n\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n\n        var candidates = neighbors[i],\n            j = -1,\n            l = candidates.length,\n            x;\n\n        while (++j < l) {\n          if (!isNaN(x = candidates[j][dimension])) return x;\n        }\n\n        return Math.random() * size;\n      }\n\n      return force.resume();\n    };\n\n    force.resume = function () {\n      return force.alpha(.1);\n    };\n\n    force.stop = function () {\n      return force.alpha(0);\n    };\n\n    force.drag = function () {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n\n    return d3.rebind(force, event, \"on\");\n  };\n\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0,\n        cy = 0;\n    quad.charge = 0;\n\n    if (!quad.leaf) {\n      var nodes = quad.nodes,\n          n = nodes.length,\n          i = -1,\n          c;\n\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n\n  var d3_layout_forceLinkDistance = 20,\n      d3_layout_forceLinkStrength = 1,\n      d3_layout_forceChargeDistance2 = Infinity;\n\n  d3.layout.hierarchy = function () {\n    var sort = d3_layout_hierarchySort,\n        children = d3_layout_hierarchyChildren,\n        value = d3_layout_hierarchyValue;\n\n    function hierarchy(root) {\n      var stack = [root],\n          nodes = [],\n          node;\n      root.depth = 0;\n\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n\n      d3_layout_hierarchyVisitAfter(root, function (node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n\n    hierarchy.sort = function (x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n\n    hierarchy.children = function (x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n\n    hierarchy.value = function (x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n\n    hierarchy.revalue = function (root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function (node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function (node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n\n      return root;\n    };\n\n    return hierarchy;\n  };\n\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [node];\n\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n\n        while (--n >= 0) {\n          nodes.push(children[n]);\n        }\n      }\n    }\n  }\n\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [node],\n        nodes2 = [];\n\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1,\n            n,\n            children;\n\n        while (++i < n) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function (parent) {\n      return (parent.children || []).map(function (child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n\n  d3.layout.partition = function () {\n    var hierarchy = d3.layout.hierarchy(),\n        size = [1, 1];\n\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n\n      if (children && (n = children.length)) {\n        var i = -1,\n            n,\n            c,\n            d;\n        dx = node.value ? dx / node.value : 0;\n\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n\n    function depth(node) {\n      var children = node.children,\n          d = 0;\n\n      if (children && (n = children.length)) {\n        var i = -1,\n            n;\n\n        while (++i < n) {\n          d = Math.max(d, depth(children[i]));\n        }\n      }\n\n      return 1 + d;\n    }\n\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n\n    partition.size = function (x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n\n  d3.layout.pie = function () {\n    var value = Number,\n        sort = d3_layout_pieSortByValue,\n        startAngle = 0,\n        endAngle = τ,\n        padAngle = 0;\n\n    function pie(data) {\n      var n = data.length,\n          values = data.map(function (d, i) {\n        return +value.call(pie, d, i);\n      }),\n          a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle),\n          da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a,\n          p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)),\n          pa = p * (da < 0 ? -1 : 1),\n          sum = d3.sum(values),\n          k = sum ? (da - n * pa) / sum : 0,\n          index = d3.range(n),\n          arcs = [],\n          v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function (i, j) {\n        return values[j] - values[i];\n      } : function (i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function (i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n\n    pie.value = function (_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n\n    pie.sort = function (_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n\n    pie.startAngle = function (_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n\n    pie.endAngle = function (_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n\n    pie.padAngle = function (_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n\n    return pie;\n  };\n\n  var d3_layout_pieSortByValue = {};\n\n  d3.layout.stack = function () {\n    var values = d3_identity,\n        order = d3_layout_stackOrderDefault,\n        offset = d3_layout_stackOffsetZero,\n        out = d3_layout_stackOut,\n        x = d3_layout_stackX,\n        y = d3_layout_stackY;\n\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function (d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function (d) {\n        return d.map(function (v, i) {\n          return [x.call(stack, v, i), y.call(stack, v, i)];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length,\n          n,\n          i,\n          j,\n          o;\n\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n\n      return data;\n    }\n\n    stack.values = function (x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n\n    stack.order = function (x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n\n    stack.offset = function (x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n\n    stack.x = function (z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n\n    stack.y = function (z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n\n    stack.out = function (z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n\n    return stack;\n  };\n\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function insideOut(data) {\n      var n = data.length,\n          i,\n          j,\n          max = data.map(d3_layout_stackMaxIndex),\n          sums = data.map(d3_layout_stackReduceSum),\n          index = d3.range(n).sort(function (a, b) {\n        return max[a] - max[b];\n      }),\n          top = 0,\n          bottom = 0,\n          tops = [],\n          bottoms = [];\n\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function reverse(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function silhouette(data) {\n      var n = data.length,\n          m = data[0].length,\n          sums = [],\n          max = 0,\n          i,\n          j,\n          o,\n          y0 = [];\n\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) {\n          o += data[i][j][1];\n        }\n\n        if (o > max) max = o;\n        sums.push(o);\n      }\n\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n\n      return y0;\n    },\n    wiggle: function wiggle(data) {\n      var n = data.length,\n          x = data[0],\n          m = x.length,\n          i,\n          j,\n          k,\n          s1,\n          s2,\n          s3,\n          dx,\n          o,\n          o0,\n          y0 = [];\n      y0[0] = o = o0 = 0;\n\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) {\n          s1 += data[i][j][1];\n        }\n\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n\n          s2 += s3 * data[i][j][1];\n        }\n\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n\n      for (j = 0; j < m; ++j) {\n        y0[j] -= o0;\n      }\n\n      return y0;\n    },\n    expand: function expand(data) {\n      var n = data.length,\n          m = data[0].length,\n          k = 1 / n,\n          i,\n          j,\n          o,\n          y0 = [];\n\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) {\n          o += data[i][j][1];\n        }\n\n        if (o) for (i = 0; i < n; i++) {\n          data[i][j][1] /= o;\n        } else for (i = 0; i < n; i++) {\n          data[i][j][1] = k;\n        }\n      }\n\n      for (j = 0; j < m; ++j) {\n        y0[j] = 0;\n      }\n\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1,\n        m = data[0].length,\n        y0 = [];\n\n    while (++j < m) {\n      y0[j] = 0;\n    }\n\n    return y0;\n  }\n\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1,\n        j = 0,\n        v = array[0][1],\n        k,\n        n = array.length;\n\n    for (; i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n\n    return j;\n  }\n\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n\n  d3.layout.histogram = function () {\n    var frequency = true,\n        valuer = Number,\n        ranger = d3_layout_histogramRange,\n        binner = d3_layout_histogramBinSturges;\n\n    function histogram(data, i) {\n      var bins = [],\n          values = data.map(valuer, this),\n          range = ranger.call(this, values, i),\n          thresholds = binner.call(this, range, values, i),\n          bin,\n          i = -1,\n          n = values.length,\n          m = thresholds.length - 1,\n          k = frequency ? 1 : 1 / n,\n          x;\n\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n\n      if (m > 0) {\n        i = -1;\n\n        while (++i < n) {\n          x = values[i];\n\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n\n      return bins;\n    }\n\n    histogram.value = function (x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n\n    histogram.range = function (x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n\n    histogram.bins = function (x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function (range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n\n    histogram.frequency = function (x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n\n    return histogram;\n  };\n\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1,\n        b = +range[0],\n        m = (range[1] - b) / n,\n        f = [];\n\n    while (++x <= n) {\n      f[x] = m * x + b;\n    }\n\n    return f;\n  }\n\n  function d3_layout_histogramRange(values) {\n    return [d3.min(values), d3.max(values)];\n  }\n\n  d3.layout.pack = function () {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort),\n        padding = 0,\n        size = [1, 1],\n        radius;\n\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i),\n          root = nodes[0],\n          w = size[0],\n          h = size[1],\n          r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function () {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function (d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function (d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function (d) {\n          d.r -= dr;\n        });\n      }\n\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n\n    pack.size = function (_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n\n    pack.radius = function (_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n\n    pack.padding = function (_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x,\n        dy = b.y - a.y,\n        dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes,\n        xMin = Infinity,\n        xMax = -Infinity,\n        yMin = Infinity,\n        yMax = -Infinity,\n        a,\n        b,\n        c,\n        i,\n        j,\n        k,\n        n;\n\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0,\n              s1 = 1,\n              s2 = 1;\n\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j);else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n\n    var cx = (xMin + xMax) / 2,\n        cy = (yMin + yMax) / 2,\n        cr = 0;\n\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n\n    if (children) {\n      var i = -1,\n          n = children.length;\n\n      while (++i < n) {\n        d3_layout_packTransform(children[i], x, y, k);\n      }\n    }\n  }\n\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r,\n        dx = b.x - a.x,\n        dy = b.y - a.y;\n\n    if (db && (dx || dy)) {\n      var da = b.r + c.r,\n          dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc),\n          y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n\n  d3.layout.tree = function () {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null),\n        separation = d3_layout_treeSeparation,\n        size = [1, 1],\n        nodeSize = null;\n\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i),\n          root0 = nodes[0],\n          root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode);else {\n        var left = root0,\n            right = root0,\n            bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function (node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x,\n            kx = size[0] / (right.x + separation(right, left) / 2 + tx),\n            ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function (node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [root0]\n      },\n          queue = [root1],\n          node1;\n\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n\n      return root1.children[0];\n    }\n\n    function firstWalk(v) {\n      var children = v.children,\n          siblings = v.parent.children,\n          w = v.i ? siblings[v.i - 1] : null;\n\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v,\n            vop = v,\n            vim = w,\n            vom = vip.parent.children[0],\n            sip = vip.m,\n            sop = vop.m,\n            sim = vim.m,\n            som = vom.m,\n            shift;\n\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n\n      return ancestor;\n    }\n\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n\n    tree.separation = function (x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n\n    tree.size = function (x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n\n    tree.nodeSize = function (x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n\n  function d3_layout_treeRight(v) {\n    var children = v.children,\n        n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n\n  function d3_layout_treeShift(v) {\n    var shift = 0,\n        change = 0,\n        children = v.children,\n        i = children.length,\n        w;\n\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n\n  d3.layout.cluster = function () {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null),\n        separation = d3_layout_treeSeparation,\n        size = [1, 1],\n        nodeSize = false;\n\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i),\n          root = nodes[0],\n          previousNode,\n          x = 0;\n      d3_layout_hierarchyVisitAfter(root, function (node) {\n        var children = node.children;\n\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root),\n          right = d3_layout_clusterRight(root),\n          x0 = left.x - separation(left, right) / 2,\n          x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function (node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function (node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n\n    cluster.separation = function (x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n\n    cluster.size = function (x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n\n    cluster.nodeSize = function (x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function (child) {\n      return child.y;\n    });\n  }\n\n  function d3_layout_clusterX(children) {\n    return children.reduce(function (x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n\n  function d3_layout_clusterRight(node) {\n    var children = node.children,\n        n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n\n  d3.layout.treemap = function () {\n    var hierarchy = d3.layout.hierarchy(),\n        round = Math.round,\n        size = [1, 1],\n        padding = null,\n        pad = d3_layout_treemapPadNull,\n        sticky = false,\n        stickies,\n        mode = \"squarify\",\n        ratio = .5 * (1 + Math.sqrt(5));\n\n    function scale(children, k) {\n      var i = -1,\n          n = children.length,\n          child,\n          area;\n\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n\n    function squarify(node) {\n      var children = node.children;\n\n      if (children && children.length) {\n        var rect = pad(node),\n            row = [],\n            remaining = children.slice(),\n            child,\n            best = Infinity,\n            score,\n            u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy),\n            n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n\n        children.forEach(squarify);\n      }\n    }\n\n    function stickify(node) {\n      var children = node.children;\n\n      if (children && children.length) {\n        var rect = pad(node),\n            remaining = children.slice(),\n            child,\n            row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n\n        children.forEach(stickify);\n      }\n    }\n\n    function worst(row, u) {\n      var s = row.area,\n          r,\n          rmax = 0,\n          rmin = Infinity,\n          i = -1,\n          n = row.length;\n\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n\n    function position(row, u, rect, flush) {\n      var i = -1,\n          n = row.length,\n          x = rect.x,\n          y = rect.y,\n          v = u ? round(row.area / u) : 0,\n          o;\n\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d),\n          root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1];else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([root], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n\n    treemap.size = function (x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n\n    treemap.padding = function (x) {\n      if (!arguments.length) return padding;\n\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [p, p, p, p] : p);\n      }\n\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [x, x, x, x], padConstant) : padConstant;\n      return treemap;\n    };\n\n    treemap.round = function (x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n\n    treemap.sticky = function (x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n\n    treemap.ratio = function (x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n\n    treemap.mode = function (x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3],\n        y = node.y + padding[0],\n        dx = node.dx - padding[1] - padding[3],\n        dy = node.dy - padding[0] - padding[2];\n\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n\n  d3.random = {\n    normal: function normal(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function () {\n        var x, y, r;\n\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function logNormal() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function () {\n        return Math.exp(random());\n      };\n    },\n    bates: function bates(m) {\n      var random = d3.random.irwinHall(m);\n      return function () {\n        return random() / m;\n      };\n    },\n    irwinHall: function irwinHall(m) {\n      return function () {\n        for (var s = 0, j = 0; j < m; j++) {\n          s += Math.random();\n        }\n\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n\n  function d3_scaleExtent(domain) {\n    var start = domain[0],\n        stop = domain[domain.length - 1];\n    return start < stop ? [start, stop] : [stop, start];\n  }\n\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]),\n        i = interpolate(range[0], range[1]);\n    return function (x) {\n      return i(u(x));\n    };\n  }\n\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0,\n        i1 = domain.length - 1,\n        x0 = domain[i0],\n        x1 = domain[i1],\n        dx;\n\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function floor(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function ceil(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [],\n        i = [],\n        j = 0,\n        k = Math.min(domain.length, range.length) - 1;\n\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n\n    return function (x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n\n  d3.scale.linear = function () {\n    return d3_scale_linear([0, 1], [0, 1], d3_interpolate, false);\n  };\n\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear,\n          uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n\n    function scale(x) {\n      return output(x);\n    }\n\n    scale.invert = function (y) {\n      return input(y);\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n\n    scale.rangeRound = function (x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n\n    scale.clamp = function (x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n\n    scale.interpolate = function (x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n\n    scale.ticks = function (m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n\n    scale.tickFormat = function (m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n\n    scale.nice = function (m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n\n    scale.copy = function () {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n\n    return rescale();\n  }\n\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain),\n        span = extent[1] - extent[0],\n        step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)),\n        err = m / span * step;\n    if (err <= .15) step *= 10;else if (err <= .35) step *= 5;else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function (d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n\n    return d3.format(format);\n  }\n\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n\n  d3.scale.log = function () {\n    return d3_scale_log(d3.scale.linear().domain([0, 1]), 10, true, [1, 10]);\n  };\n\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n\n    function scale(x) {\n      return linear(log(x));\n    }\n\n    scale.invert = function (x) {\n      return pow(linear.invert(x));\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n\n    scale.base = function (_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n\n    scale.nice = function () {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n\n    scale.ticks = function () {\n      var extent = d3_scaleExtent(domain),\n          ticks = [],\n          u = extent[0],\n          v = extent[1],\n          i = Math.floor(log(u)),\n          j = Math.ceil(log(v)),\n          n = base % 1 ? 2 : base;\n\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (; i < j; i++) {\n            for (var k = 1; k < n; k++) {\n              ticks.push(pow(i) * k);\n            }\n          }\n\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n\n          for (; i++ < j;) {\n            for (var k = n - 1; k > 0; k--) {\n              ticks.push(pow(i) * k);\n            }\n          }\n        }\n\n        for (i = 0; ticks[i] < u; i++) {}\n\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\n        ticks = ticks.slice(i, j);\n      }\n\n      return ticks;\n    };\n\n    scale.tickFormat = function (n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat;else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function (d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n\n    scale.copy = function () {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n\n    return d3_scale_linearRebind(scale, linear);\n  }\n\n  var d3_scale_logFormat = d3.format(\".0e\"),\n      d3_scale_logNiceNegative = {\n    floor: function floor(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function ceil(x) {\n      return -Math.floor(-x);\n    }\n  };\n\n  d3.scale.pow = function () {\n    return d3_scale_pow(d3.scale.linear(), 1, [0, 1]);\n  };\n\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent),\n        powb = d3_scale_powPow(1 / exponent);\n\n    function scale(x) {\n      return linear(powp(x));\n    }\n\n    scale.invert = function (x) {\n      return powb(linear.invert(x));\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n\n    scale.ticks = function (m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n\n    scale.tickFormat = function (m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n\n    scale.nice = function (m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n\n    scale.exponent = function (x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n\n    scale.copy = function () {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n\n    return d3_scale_linearRebind(scale, linear);\n  }\n\n  function d3_scale_powPow(e) {\n    return function (x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n\n  d3.scale.sqrt = function () {\n    return d3.scale.pow().exponent(.5);\n  };\n\n  d3.scale.ordinal = function () {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [[]]\n    });\n  };\n\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n\n    function steps(start, step) {\n      return d3.range(domain.length).map(function (i) {\n        return start + step * i;\n      });\n    }\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1,\n          n = x.length,\n          xi;\n\n      while (++i < n) {\n        if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      }\n\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangePoints = function (x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0],\n          stop = x[1],\n          step = domain.length < 2 ? (start = (start + stop) / 2, 0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeRoundPoints = function (x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0],\n          stop = x[1],\n          step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), 0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeBands = function (x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0],\n          start = x[reverse - 0],\n          stop = x[1 - reverse],\n          step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeRoundBands = function (x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0],\n          start = x[reverse - 0],\n          stop = x[1 - reverse],\n          step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeBand = function () {\n      return rangeBand;\n    };\n\n    scale.rangeExtent = function () {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n\n    scale.copy = function () {\n      return d3_scale_ordinal(domain, ranger);\n    };\n\n    return scale.domain(domain);\n  }\n\n  d3.scale.category10 = function () {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n\n  d3.scale.category20 = function () {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n\n  d3.scale.category20b = function () {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n\n  d3.scale.category20c = function () {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n\n  var d3_category10 = [2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175].map(d3_rgbString);\n  var d3_category20 = [2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725].map(d3_rgbString);\n  var d3_category20b = [3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654].map(d3_rgbString);\n  var d3_category20c = [3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081].map(d3_rgbString);\n\n  d3.scale.quantile = function () {\n    return d3_scale_quantile([], []);\n  };\n\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n\n    function rescale() {\n      var k = 0,\n          q = range.length;\n      thresholds = [];\n\n      while (++k < q) {\n        thresholds[k - 1] = d3.quantile(domain, k / q);\n      }\n\n      return scale;\n    }\n\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n\n    scale.quantiles = function () {\n      return thresholds;\n    };\n\n    scale.invertExtent = function (y) {\n      y = range.indexOf(y);\n      return y < 0 ? [NaN, NaN] : [y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1]];\n    };\n\n    scale.copy = function () {\n      return d3_scale_quantile(domain, range);\n    };\n\n    return rescale();\n  }\n\n  d3.scale.quantize = function () {\n    return d3_scale_quantize(0, 1, [0, 1]);\n  };\n\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n\n    scale.domain = function (x) {\n      if (!arguments.length) return [x0, x1];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n\n    scale.invertExtent = function (y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [y, y + 1 / kx];\n    };\n\n    scale.copy = function () {\n      return d3_scale_quantize(x0, x1, range);\n    };\n\n    return rescale();\n  }\n\n  d3.scale.threshold = function () {\n    return d3_scale_threshold([.5], [0, 1]);\n  };\n\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n\n    scale.domain = function (_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n\n    scale.range = function (_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n\n    scale.invertExtent = function (y) {\n      y = range.indexOf(y);\n      return [domain[y - 1], domain[y]];\n    };\n\n    scale.copy = function () {\n      return d3_scale_threshold(domain, range);\n    };\n\n    return scale;\n  }\n\n  d3.scale.identity = function () {\n    return d3_scale_identity([0, 1]);\n  };\n\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n\n    identity.invert = identity;\n\n    identity.domain = identity.range = function (x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n\n    identity.ticks = function (m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n\n    identity.tickFormat = function (m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n\n    identity.copy = function () {\n      return d3_scale_identity(domain);\n    };\n\n    return identity;\n  }\n\n  d3.svg = {};\n\n  function d3_zero() {\n    return 0;\n  }\n\n  d3.svg.arc = function () {\n    var innerRadius = d3_svg_arcInnerRadius,\n        outerRadius = d3_svg_arcOuterRadius,\n        cornerRadius = d3_zero,\n        padRadius = d3_svg_arcAuto,\n        startAngle = d3_svg_arcStartAngle,\n        endAngle = d3_svg_arcEndAngle,\n        padAngle = d3_svg_arcPadAngle;\n\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)),\n          r1 = Math.max(0, +outerRadius.apply(this, arguments)),\n          a0 = startAngle.apply(this, arguments) - halfπ,\n          a1 = endAngle.apply(this, arguments) - halfπ,\n          da = Math.abs(a1 - a0),\n          cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc,\n          cr,\n          rp,\n          ap,\n          p0 = 0,\n          p1 = 0,\n          x0,\n          y0,\n          x1,\n          y1,\n          x2,\n          y2,\n          x3,\n          y3,\n          path = [];\n\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc,\n            rc0 = rc;\n\n        if (da < π) {\n          var oc = x3 == null ? [x2, y2] : x1 == null ? [x0, y0] : d3_geom_polygonIntersect([x0, y0], [x3, y3], [x1, y1], [x2, y2]),\n              ax = x0 - oc[0],\n              ay = y0 - oc[1],\n              bx = x1 - oc[0],\n              by = y1 - oc[1],\n              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [x2, y2] : [x3, y3], [x0, y0], r1, rc1, cw),\n              t12 = d3_svg_arcCornerTangents([x1, y1], [x2, y2], r1, rc1, cw);\n\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([x0, y0], [x3, y3], r0, -rc0, cw),\n              t21 = d3_svg_arcCornerTangents([x2, y2], x1 == null ? [x0, y0] : [x1, y1], r0, -rc0, cw);\n\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n\n    arc.innerRadius = function (v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n\n    arc.outerRadius = function (v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n\n    arc.cornerRadius = function (v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n\n    arc.padRadius = function (v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n\n    arc.startAngle = function (v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n\n    arc.endAngle = function (v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n\n    arc.padAngle = function (v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n\n    arc.centroid = function () {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n          a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [Math.cos(a) * r, Math.sin(a) * r];\n    };\n\n    return arc;\n  };\n\n  var d3_svg_arcAuto = \"auto\";\n\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0],\n        y01 = p0[1] - p1[1],\n        lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n        ox = lo * y01,\n        oy = -lo * x01,\n        x1 = p0[0] + ox,\n        y1 = p0[1] + oy,\n        x2 = p1[0] + ox,\n        y2 = p1[1] + oy,\n        x3 = (x1 + x2) / 2,\n        y3 = (y1 + y2) / 2,\n        dx = x2 - x1,\n        dy = y2 - y1,\n        d2 = dx * dx + dy * dy,\n        r = r1 - rc,\n        D = x1 * y2 - x2 * y1,\n        d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n        cx0 = (D * dy - dx * d) / d2,\n        cy0 = (-D * dx - dy * d) / d2,\n        cx1 = (D * dy + dx * d) / d2,\n        cy1 = (-D * dx + dy * d) / d2,\n        dx0 = cx0 - x3,\n        dy0 = cy0 - y3,\n        dx1 = cx1 - x3,\n        dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [[cx0 - ox, cy0 - oy], [cx0 * r1 / r, cy0 * r1 / r]];\n  }\n\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY,\n        defined = d3_true,\n        interpolate = d3_svg_lineLinear,\n        interpolateKey = interpolate.key,\n        tension = .7;\n\n    function line(data) {\n      var segments = [],\n          points = [],\n          i = -1,\n          n = data.length,\n          d,\n          fx = d3_functor(x),\n          fy = d3_functor(y);\n\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([+fx.call(this, d, i), +fy.call(this, d, i)]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n\n    line.x = function (_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n\n    line.y = function (_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n\n    line.defined = function (_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n\n    line.interpolate = function (_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _;else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n\n    line.tension = function (_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n\n    return line;\n  }\n\n  d3.svg.line = function () {\n    return d3_svg_line(d3_identity);\n  };\n\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function (key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n\n  function d3_svg_lineStep(points) {\n    var i = 0,\n        n = points.length,\n        p = points[0],\n        path = [p[0], \",\", p[1]];\n\n    while (++i < n) {\n      path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    }\n\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineStepBefore(points) {\n    var i = 0,\n        n = points.length,\n        p = points[0],\n        path = [p[0], \",\", p[1]];\n\n    while (++i < n) {\n      path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineStepAfter(points) {\n    var i = 0,\n        n = points.length,\n        p = points[0],\n        path = [p[0], \",\", p[1]];\n\n    while (++i < n) {\n      path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), points), d3_svg_lineCardinalTangents([points[points.length - 2]].concat(points, [points[1]]), tension));\n  }\n\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n\n    var quad = points.length != tangents.length,\n        path = \"\",\n        p0 = points[0],\n        p = points[1],\n        t0 = tangents[0],\n        t = t0,\n        pi = 1;\n\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n\n    return path;\n  }\n\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [],\n        a = (1 - tension) / 2,\n        p0,\n        p1 = points[0],\n        p2 = points[1],\n        i = 1,\n        n = points.length;\n\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([a * (p2[0] - p0[0]), a * (p2[1] - p0[1])]);\n    }\n\n    return tangents;\n  }\n\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1,\n        n = points.length,\n        pi = points[0],\n        x0 = pi[0],\n        y0 = pi[1],\n        px = [x0, x0, x0, (pi = points[1])[0]],\n        py = [y0, y0, y0, pi[1]],\n        path = [x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py)];\n    points.push(points[n - 1]);\n\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [],\n        i = -1,\n        n = points.length,\n        pi,\n        px = [0],\n        py = [0];\n\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineBasisClosed(points) {\n    var path,\n        i = -1,\n        n = points.length,\n        m = n + 4,\n        pi,\n        px = [],\n        py = [];\n\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n\n    path = [d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py)];\n    --i;\n\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n\n    if (n) {\n      var x0 = points[0][0],\n          y0 = points[0][1],\n          dx = points[n][0] - x0,\n          dy = points[n][1] - y0,\n          i = -1,\n          p,\n          t;\n\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n\n    return d3_svg_lineBasis(points);\n  }\n\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n\n  var d3_svg_lineBasisBezier1 = [0, 2 / 3, 1 / 3, 0],\n      d3_svg_lineBasisBezier2 = [0, 1 / 3, 2 / 3, 0],\n      d3_svg_lineBasisBezier3 = [0, 1 / 6, 2 / 3, 1 / 6];\n\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0,\n        j = points.length - 1,\n        m = [],\n        p0 = points[0],\n        p1 = points[1],\n        d = m[0] = d3_svg_lineSlope(p0, p1);\n\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n\n    m[i] = d;\n    return m;\n  }\n\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [],\n        d,\n        a,\n        b,\n        s,\n        m = d3_svg_lineFiniteDifferences(points),\n        i = -1,\n        j = points.length - 1;\n\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n\n    i = -1;\n\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([s || 0, m[i] * s || 0]);\n    }\n\n    return tangents;\n  }\n\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n\n  d3.svg.line.radial = function () {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n\n  function d3_svg_lineRadial(points) {\n    var point,\n        i = -1,\n        n = points.length,\n        r,\n        a;\n\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n\n    return points;\n  }\n\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX,\n        x1 = d3_geom_pointX,\n        y0 = 0,\n        y1 = d3_geom_pointY,\n        defined = d3_true,\n        interpolate = d3_svg_lineLinear,\n        interpolateKey = interpolate.key,\n        interpolateReverse = interpolate,\n        L = \"L\",\n        tension = .7;\n\n    function area(data) {\n      var segments = [],\n          points0 = [],\n          points1 = [],\n          i = -1,\n          n = data.length,\n          d,\n          fx0 = d3_functor(x0),\n          fy0 = d3_functor(y0),\n          fx1 = x0 === x1 ? function () {\n        return x;\n      } : d3_functor(x1),\n          fy1 = y0 === y1 ? function () {\n        return y;\n      } : d3_functor(y1),\n          x,\n          y;\n\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([x = +fx0.call(this, d, i), y = +fy0.call(this, d, i)]);\n          points1.push([+fx1.call(this, d, i), +fy1.call(this, d, i)]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n\n    area.x = function (_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n\n    area.x0 = function (_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n\n    area.x1 = function (_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n\n    area.y = function (_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n\n    area.y0 = function (_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n\n    area.y1 = function (_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n\n    area.defined = function (_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n\n    area.interpolate = function (_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _;else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n\n    area.tension = function (_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n\n    return area;\n  }\n\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\n  d3.svg.area = function () {\n    return d3_svg_area(d3_identity);\n  };\n\n  d3.svg.area.radial = function () {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n\n  d3.svg.chord = function () {\n    var source = d3_source,\n        target = d3_target,\n        radius = d3_svg_chordRadius,\n        startAngle = d3_svg_arcStartAngle,\n        endAngle = d3_svg_arcEndAngle;\n\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i),\n          t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i),\n          r = radius.call(self, subgroup, i),\n          a0 = startAngle.call(self, subgroup, i) - halfπ,\n          a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [r * Math.cos(a0), r * Math.sin(a0)],\n        p1: [r * Math.cos(a1), r * Math.sin(a1)]\n      };\n    }\n\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n\n    chord.radius = function (v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n\n    chord.source = function (v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n\n    chord.target = function (v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n\n    chord.startAngle = function (v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n\n    chord.endAngle = function (v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n\n    return chord;\n  };\n\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n\n  d3.svg.diagonal = function () {\n    var source = d3_source,\n        target = d3_target,\n        projection = d3_svg_diagonalProjection;\n\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i),\n          p3 = target.call(this, d, i),\n          m = (p0.y + p3.y) / 2,\n          p = [p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n\n    diagonal.source = function (x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n\n    diagonal.target = function (x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n\n    diagonal.projection = function (x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n\n    return diagonal;\n  };\n\n  function d3_svg_diagonalProjection(d) {\n    return [d.x, d.y];\n  }\n\n  d3.svg.diagonal.radial = function () {\n    var diagonal = d3.svg.diagonal(),\n        projection = d3_svg_diagonalProjection,\n        projection_ = diagonal.projection;\n\n    diagonal.projection = function (x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n\n    return diagonal;\n  };\n\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function () {\n      var d = projection.apply(this, arguments),\n          r = d[0],\n          a = d[1] - halfπ;\n      return [r * Math.cos(a), r * Math.sin(a)];\n    };\n  }\n\n  d3.svg.symbol = function () {\n    var type = d3_svg_symbolType,\n        size = d3_svg_symbolSize;\n\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n\n    symbol.type = function (x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n\n    symbol.size = function (x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n\n    return symbol;\n  };\n\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function cross(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function diamond(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)),\n          rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function square(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function triangleDown(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3),\n          ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function triangleUp(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3),\n          ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3),\n      d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\n  d3_selectionPrototype.transition = function (name) {\n    var id = d3_transitionInheritId || ++d3_transitionId,\n        ns = d3_transitionNamespace(name),\n        subgroups = [],\n        subgroup,\n        node,\n        transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n\n    return d3_transition(subgroups, ns, id);\n  };\n\n  d3_selectionPrototype.interrupt = function (name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\n  function d3_selection_interruptNS(ns) {\n    return function () {\n      var lock, activeId, active;\n\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId];else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n\n  var d3_transitionPrototype = [],\n      d3_transitionId = 0,\n      d3_transitionInheritId,\n      d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\n  d3.transition = function (selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n\n  d3.transition.prototype = d3_transitionPrototype;\n\n  d3_transitionPrototype.select = function (selector) {\n    var id = this.id,\n        ns = this.namespace,\n        subgroups = [],\n        subgroup,\n        subnode,\n        node;\n    selector = d3_selection_selector(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n\n    return d3_transition(subgroups, ns, id);\n  };\n\n  d3_transitionPrototype.selectAll = function (selector) {\n    var id = this.id,\n        ns = this.namespace,\n        subgroups = [],\n        subgroup,\n        subnodes,\n        node,\n        subnode,\n        transition;\n    selector = d3_selection_selectorAll(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n\n          for (var k = -1, o = subnodes.length; ++k < o;) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n\n    return d3_transition(subgroups, ns, id);\n  };\n\n  d3_transitionPrototype.filter = function (filter) {\n    var subgroups = [],\n        subgroup,\n        group,\n        node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n\n  d3_transitionPrototype.tween = function (name, tween) {\n    var id = this.id,\n        ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function (node) {\n      node[ns][id].tween.remove(name);\n    } : function (node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id,\n        ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function (node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function (node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n\n  d3_transitionPrototype.attr = function (nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) {\n        this.attr(value, nameNS[value]);\n      }\n\n      return this;\n    }\n\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate,\n        name = d3.ns.qualify(nameNS);\n\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function () {\n        var a = this.getAttribute(name),\n            i;\n        return a !== b && (i = interpolate(a, b), function (t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function () {\n        var a = this.getAttributeNS(name.space, name.local),\n            i;\n        return a !== b && (i = interpolate(a, b), function (t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n\n  d3_transitionPrototype.attrTween = function (nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function (t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function (t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n\n  d3_transitionPrototype.style = function (name, value, priority) {\n    var n = arguments.length;\n\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n\n        for (priority in name) {\n          this.style(priority, name[priority], value);\n        }\n\n        return this;\n      }\n\n      priority = \"\";\n    }\n\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function () {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name),\n            i;\n        return a !== b && (i = d3_interpolate(a, b), function (t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n\n  d3_transitionPrototype.styleTween = function (name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function (t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n\n    return this.tween(\"style.\" + name, styleTween);\n  };\n\n  d3_transitionPrototype.text = function (value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function () {\n      this.textContent = b;\n    };\n  }\n\n  d3_transitionPrototype.remove = function () {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function () {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n\n  d3_transitionPrototype.ease = function (value) {\n    var id = this.id,\n        ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function (node) {\n      node[ns][id].ease = value;\n    });\n  };\n\n  d3_transitionPrototype.delay = function (value) {\n    var id = this.id,\n        ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function (node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function (node) {\n      node[ns][id].delay = value;\n    }));\n  };\n\n  d3_transitionPrototype.duration = function (value) {\n    var id = this.id,\n        ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function (node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function (node) {\n      node[ns][id].duration = value;\n    }));\n  };\n\n  d3_transitionPrototype.each = function (type, listener) {\n    var id = this.id,\n        ns = this.namespace;\n\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit,\n          inheritId = d3_transitionInheritId;\n\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function (node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function (node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n\n    return this;\n  };\n\n  d3_transitionPrototype.transition = function () {\n    var id0 = this.id,\n        id1 = ++d3_transitionId,\n        ns = this.namespace,\n        subgroups = [],\n        subgroup,\n        group,\n        node,\n        transition;\n\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n\n        subgroup.push(node);\n      }\n    }\n\n    return d3_transition(subgroups, ns, id1);\n  };\n\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }),\n        transition = lock[id],\n        time,\n        timer,\n        duration,\n        ease,\n        tweens;\n\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n\n    function start(elapsed) {\n      var activeId = lock.active,\n          active = lock[activeId];\n\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n\n      timer.c = tick;\n      d3_timer(function () {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function (key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n\n    function tick(elapsed) {\n      var t = elapsed / duration,\n          e = ease(t),\n          n = tweens.length;\n\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id];else delete node[ns];\n        return 1;\n      }\n    }\n\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n\n  d3.svg.axis = function () {\n    var scale = d3.scale.linear(),\n        orient = d3_svg_axisDefaultOrient,\n        innerTickSize = 6,\n        outerTickSize = 6,\n        tickPadding = 3,\n        tickArguments_ = [10],\n        tickValues = null,\n        tickFormat_;\n\n    function axis(g) {\n      g.each(function () {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale,\n            scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues,\n            tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_,\n            tick = g.selectAll(\".tick\").data(ticks, scale1),\n            tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε),\n            tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(),\n            tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1),\n            tickSpacing = Math.max(innerTickSize, 0) + tickPadding,\n            tickTransform;\n        var range = d3_scaleRange(scale1),\n            path = g.selectAll(\".domain\").data([0]),\n            pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"),\n            lineUpdate = tickUpdate.select(\"line\"),\n            text = tick.select(\"text\").text(tickFormat),\n            textEnter = tickEnter.select(\"text\"),\n            textUpdate = tickUpdate.select(\"text\"),\n            sign = orient === \"top\" || orient === \"left\" ? -1 : 1,\n            x1,\n            x2,\n            y1,\n            y2;\n\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\n        if (scale1.rangeBand) {\n          var x = scale1,\n              dx = x.rangeBand() / 2;\n\n          scale0 = scale1 = function scale1(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n\n    axis.scale = function (x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n\n    axis.orient = function (x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n\n    axis.ticks = function () {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n\n    axis.tickValues = function (x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n\n    axis.tickFormat = function (x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n\n    axis.tickSize = function (x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n\n    axis.innerTickSize = function (x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n\n    axis.outerTickSize = function (x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n\n    axis.tickPadding = function (x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n\n    axis.tickSubdivide = function () {\n      return arguments.length && axis;\n    };\n\n    return axis;\n  };\n\n  var d3_svg_axisDefaultOrient = \"bottom\",\n      d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function (d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function (d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n\n  d3.svg.brush = function () {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"),\n        x = null,\n        y = null,\n        xExtent = [0, 0],\n        yExtent = [0, 0],\n        xExtentDomain,\n        yExtentDomain,\n        xClamp = true,\n        yClamp = true,\n        resizes = d3_svg_brushResizes[0];\n\n    function brush(g) {\n      g.each(function () {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([0]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([0]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function (d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function (d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function (d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function (d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g),\n            backgroundUpdate = d3.transition(background),\n            range;\n\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n\n        redraw(gUpdate);\n      });\n    }\n\n    brush.event = function (g) {\n      g.each(function () {\n        var event_ = event.of(this, arguments),\n            extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        },\n            extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function () {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function () {\n            var xi = d3_interpolateArray(xExtent, extent1.x),\n                yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function (t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function () {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function (d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n\n    function brushstart() {\n      var target = this,\n          eventTarget = d3.select(d3.event.target),\n          event_ = event.of(target, arguments),\n          g = d3.select(target),\n          resizing = eventTarget.datum(),\n          resizingX = !/^(n|s)$/.test(resizing) && x,\n          resizingY = !/^(e|w)$/.test(resizing) && y,\n          dragging = eventTarget.classed(\"extent\"),\n          dragRestore = d3_event_dragSuppress(target),\n          center,\n          origin = d3.mouse(target),\n          offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n\n      g.interrupt().selectAll(\"*\").interrupt();\n\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing),\n            ey = +/^n/.test(resizing);\n        offset = [xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1]];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n\n          d3_eventPreventDefault();\n        }\n      }\n\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n\n      function brushmove() {\n        var point = d3.mouse(target),\n            moved = false;\n\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [(xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale),\n            r0 = range[0],\n            r1 = range[1],\n            position = origin[i],\n            extent = i ? yExtent : xExtent,\n            size = extent[1] - extent[0],\n            min,\n            max;\n\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null;else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n\n    brush.x = function (z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n\n    brush.y = function (z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n\n    brush.clamp = function (z) {\n      if (!arguments.length) return x && y ? [xClamp, yClamp] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1];else if (x) xClamp = !!z;else if (y) yClamp = !!z;\n      return brush;\n    };\n\n    brush.extent = function (z) {\n      var x0, x1, y0, y1, t;\n\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n\n        return x && y ? [[x0, y0], [x1, y1]] : x ? [x0, x1] : y && [y0, y1];\n      }\n\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [x0, x1];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [x0, x1];\n      }\n\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [y0, y1];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [y0, y1];\n      }\n\n      return brush;\n    };\n\n    brush.clear = function () {\n      if (!brush.empty()) {\n        xExtent = [0, 0], yExtent = [0, 0];\n        xExtentDomain = yExtentDomain = null;\n      }\n\n      return brush;\n    };\n\n    brush.empty = function () {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n\n    return d3.rebind(brush, event, \"on\");\n  };\n\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [[\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"], [\"e\", \"w\"], [\"n\", \"s\"], []];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n\n  d3_time_formatIsoNative.parse = function (string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function (date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function (date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function (date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function (date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function (date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function (date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function (date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function (date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function (date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function (date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function (date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function (date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n\n    scale.invert = function (x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0],\n          target = span / count,\n          i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [methods.year, d3_scale_linearTickRange(extent.map(function (d) {\n        return d / 31536e6;\n      }), count)[2]] : !i ? [d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2]] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n\n    scale.nice = function (interval, skip) {\n      var domain = scale.domain(),\n          extent = d3_scaleExtent(domain),\n          method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function floor(date) {\n          while (skipped(date = interval.floor(date))) {\n            date = d3_time_scaleDate(date - 1);\n          }\n\n          return date;\n        },\n        ceil: function ceil(date) {\n          while (skipped(date = interval.ceil(date))) {\n            date = d3_time_scaleDate(+date + 1);\n          }\n\n          return date;\n        }\n      } : interval));\n    };\n\n    scale.ticks = function (interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()),\n          method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [{\n        range: interval\n      }, skip];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n\n    scale.tickFormat = function () {\n      return format;\n    };\n\n    scale.copy = function () {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n\n    return d3_scale_linearRebind(scale, linear);\n  }\n\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n\n  var d3_time_scaleSteps = [1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6];\n  var d3_time_scaleLocalMethods = [[d3_time.second, 1], [d3_time.second, 5], [d3_time.second, 15], [d3_time.second, 30], [d3_time.minute, 1], [d3_time.minute, 5], [d3_time.minute, 15], [d3_time.minute, 30], [d3_time.hour, 1], [d3_time.hour, 3], [d3_time.hour, 6], [d3_time.hour, 12], [d3_time.day, 1], [d3_time.day, 2], [d3_time.week, 1], [d3_time.month, 1], [d3_time.month, 3], [d3_time.year, 1]];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([[\".%L\", function (d) {\n    return d.getMilliseconds();\n  }], [\":%S\", function (d) {\n    return d.getSeconds();\n  }], [\"%I:%M\", function (d) {\n    return d.getMinutes();\n  }], [\"%I %p\", function (d) {\n    return d.getHours();\n  }], [\"%a %d\", function (d) {\n    return d.getDay() && d.getDate() != 1;\n  }], [\"%b %d\", function (d) {\n    return d.getDate() != 1;\n  }], [\"%B\", function (d) {\n    return d.getMonth();\n  }], [\"%Y\", d3_true]]);\n  var d3_time_scaleMilliseconds = {\n    range: function range(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n\n  d3_time.scale = function () {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function (m) {\n    return [m[0].utc, m[1]];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([[\".%L\", function (d) {\n    return d.getUTCMilliseconds();\n  }], [\":%S\", function (d) {\n    return d.getUTCSeconds();\n  }], [\"%I:%M\", function (d) {\n    return d.getUTCMinutes();\n  }], [\"%I %p\", function (d) {\n    return d.getUTCHours();\n  }], [\"%a %d\", function (d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  }], [\"%b %d\", function (d) {\n    return d.getUTCDate() != 1;\n  }], [\"%B\", function (d) {\n    return d.getUTCMonth();\n  }], [\"%Y\", d3_true]]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\n  d3_time.scale.utc = function () {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n\n  d3.text = d3_xhrType(function (request) {\n    return request.responseText;\n  });\n\n  d3.json = function (url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n\n  d3.html = function (url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n\n  d3.xml = d3_xhrType(function (request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3);else if (typeof module === \"object\" && module.exports) module.exports = d3;else this.d3 = d3;\n}();","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nmodule.exports = toSource;","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction assignMergeValue(object, key, value) {\n  if (value !== undefined && !eq(object[key], value) || value === undefined && !(key in object)) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignMergeValue;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Uint8Array = root.Uint8Array;\nmodule.exports = Uint8Array;","var overArg = require('./_overArg');\n/** Built-in value references. */\n\n\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\nmodule.exports = getPrototype;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;","/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\nmodule.exports = safeGet;","var assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n    var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n\n  return object;\n}\n\nmodule.exports = copyObject;","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined && !(key in object)) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\n\n\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;","var baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\n\n\nfunction createAssigner(assigner) {\n  return baseRest(function (object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n    customizer = assigner.length > 3 && typeof customizer == 'function' ? (length--, customizer) : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n\n    object = Object(object);\n\n    while (++index < length) {\n      var source = sources[index];\n\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n\n    return object;\n  });\n}\n\nmodule.exports = createAssigner;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Check that cyclic values are equal.\n\n\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;","/* nvd3 version 1.8.6 (https://github.com/novus/nvd3) 2017-08-23 */\n(function () {\n  // set up main nv object\n  var nv = {}; // the major global objects under the nv namespace\n\n  nv.dev = false; //set false when in production\n\n  nv.tooltip = nv.tooltip || {}; // For the tooltip system\n\n  nv.utils = nv.utils || {}; // Utility subsystem\n\n  nv.models = nv.models || {}; //stores all the possible models/components\n\n  nv.charts = {}; //stores all the ready to use charts\n\n  nv.logs = {}; //stores some statistics and potential error messages\n\n  nv.dom = {}; //DOM manipulation functions\n  // Node/CommonJS - require D3\n\n  if (typeof module !== 'undefined' && typeof exports !== 'undefined' && typeof d3 == 'undefined') {\n    d3 = require('d3');\n  }\n\n  nv.dispatch = d3.dispatch('render_start', 'render_end'); // Function bind polyfill\n  // Needed ONLY for phantomJS as it's missing until version 2.0 which is unreleased as of this comment\n  // https://github.com/ariya/phantomjs/issues/10522\n  // http://kangax.github.io/compat-table/es5/#Function.prototype.bind\n  // phantomJS is used for running the test suite\n\n  if (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n      if (typeof this !== \"function\") {\n        // closest thing possible to the ECMAScript 5 internal IsCallable function\n        throw new TypeError(\"Function.prototype.bind - what is trying to be bound is not callable\");\n      }\n\n      var aArgs = Array.prototype.slice.call(arguments, 1),\n          fToBind = this,\n          fNOP = function fNOP() {},\n          fBound = function fBound() {\n        return fToBind.apply(this instanceof fNOP && oThis ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n      };\n\n      fNOP.prototype = this.prototype;\n      fBound.prototype = new fNOP();\n      return fBound;\n    };\n  } //  Development render timers - disabled if dev = false\n\n\n  if (nv.dev) {\n    nv.dispatch.on('render_start', function (e) {\n      nv.logs.startTime = +new Date();\n    });\n    nv.dispatch.on('render_end', function (e) {\n      nv.logs.endTime = +new Date();\n      nv.logs.totalTime = nv.logs.endTime - nv.logs.startTime;\n      nv.log('total', nv.logs.totalTime); // used for development, to keep track of graph generation times\n    });\n  } // Logs all arguments, and returns the last so you can test things in place\n  // Note: in IE8 console.log is an object not a function, and if modernizr is used\n  // then calling Function.prototype.bind with with anything other than a function\n  // causes a TypeError to be thrown.\n\n\n  nv.log = function () {\n    if (nv.dev && window.console && console.log && console.log.apply) console.log.apply(console, arguments);else if (nv.dev && window.console && typeof console.log == \"function\" && Function.prototype.bind) {\n      var log = Function.prototype.bind.call(console.log, console);\n      log.apply(console, arguments);\n    }\n    return arguments[arguments.length - 1];\n  }; // print console warning, should be used by deprecated functions\n\n\n  nv.deprecated = function (name, info) {\n    if (console && console.warn) {\n      console.warn('nvd3 warning: `' + name + '` has been deprecated. ', info || '');\n    }\n  }; // The nv.render function is used to queue up chart rendering\n  // in non-blocking async functions.\n  // When all queued charts are done rendering, nv.dispatch.render_end is invoked.\n\n\n  nv.render = function render(step) {\n    // number of graphs to generate in each timeout loop\n    step = step || 1;\n    nv.render.active = true;\n    nv.dispatch.render_start();\n\n    var renderLoop = function renderLoop() {\n      var chart, graph;\n\n      for (var i = 0; i < step && (graph = nv.render.queue[i]); i++) {\n        chart = graph.generate();\n        if (typeof graph.callback == typeof Function) graph.callback(chart);\n      }\n\n      nv.render.queue.splice(0, i);\n\n      if (nv.render.queue.length) {\n        setTimeout(renderLoop);\n      } else {\n        nv.dispatch.render_end();\n        nv.render.active = false;\n      }\n    };\n\n    setTimeout(renderLoop);\n  };\n\n  nv.render.active = false;\n  nv.render.queue = [];\n  /*\n  Adds a chart to the async rendering queue. This method can take arguments in two forms:\n  nv.addGraph({\n      generate: <Function>\n      callback: <Function>\n  })\n  \n  or\n  \n  nv.addGraph(<generate Function>, <callback Function>)\n  \n  The generate function should contain code that creates the NVD3 model, sets options\n  on it, adds data to an SVG element, and invokes the chart model. The generate function\n  should return the chart model.  See examples/lineChart.html for a usage example.\n  \n  The callback function is optional, and it is called when the generate function completes.\n  */\n\n  nv.addGraph = function (obj) {\n    if (typeof arguments[0] === typeof Function) {\n      obj = {\n        generate: arguments[0],\n        callback: arguments[1]\n      };\n    }\n\n    nv.render.queue.push(obj);\n\n    if (!nv.render.active) {\n      nv.render();\n    }\n  }; // Node/CommonJS exports\n\n\n  if (typeof module !== 'undefined' && typeof exports !== 'undefined') {\n    module.exports = nv;\n  }\n\n  if (typeof window !== 'undefined') {\n    window.nv = nv;\n  }\n  /* Facade for queueing DOM write operations\r\n   * with Fastdom (https://github.com/wilsonpage/fastdom)\r\n   * if available.\r\n   * This could easily be extended to support alternate\r\n   * implementations in the future.\r\n   */\n\n\n  nv.dom.write = function (callback) {\n    if (window.fastdom !== undefined) {\n      return fastdom.mutate(callback);\n    }\n\n    return callback();\n  };\n  /* Facade for queueing DOM read operations\r\n   * with Fastdom (https://github.com/wilsonpage/fastdom)\r\n   * if available.\r\n   * This could easily be extended to support alternate\r\n   * implementations in the future.\r\n   */\n\n\n  nv.dom.read = function (callback) {\n    if (window.fastdom !== undefined) {\n      return fastdom.measure(callback);\n    }\n\n    return callback();\n  };\n  /* Utility class to handle creation of an interactive layer.\n   This places a rectangle on top of the chart. When you mouse move over it, it sends a dispatch\n   containing the X-coordinate. It can also render a vertical line where the mouse is located.\n  \n   dispatch.elementMousemove is the important event to latch onto.  It is fired whenever the mouse moves over\n   the rectangle. The dispatch is given one object which contains the mouseX/Y location.\n   It also has 'pointXValue', which is the conversion of mouseX to the x-axis scale.\n   */\n\n\n  nv.interactiveGuideline = function () {\n    \"use strict\";\n\n    var margin = {\n      left: 0,\n      top: 0 //Pass the chart's top and left magins. Used to calculate the mouseX/Y.\n\n    },\n        width = null,\n        height = null,\n        xScale = d3.scale.linear(),\n        dispatch = d3.dispatch('elementMousemove', 'elementMouseout', 'elementClick', 'elementDblclick', 'elementMouseDown', 'elementMouseUp'),\n        showGuideLine = true,\n        svgContainer = null // Must pass the chart's svg, we'll use its mousemove event.\n    ,\n        tooltip = nv.models.tooltip(),\n        isMSIE = window.ActiveXObject // Checkt if IE by looking for activeX. (excludes IE11)\n    ;\n    tooltip.duration(0).hideDelay(0).hidden(false);\n\n    function layer(selection) {\n      selection.each(function (data) {\n        var container = d3.select(this);\n        var availableWidth = width || 960,\n            availableHeight = height || 400;\n        var wrap = container.selectAll(\"g.nv-wrap.nv-interactiveLineLayer\").data([data]);\n        var wrapEnter = wrap.enter().append(\"g\").attr(\"class\", \" nv-wrap nv-interactiveLineLayer\");\n        wrapEnter.append(\"g\").attr(\"class\", \"nv-interactiveGuideLine\");\n\n        if (!svgContainer) {\n          return;\n        }\n\n        function mouseHandler() {\n          var mouseX = d3.event.clientX - this.getBoundingClientRect().left;\n          var mouseY = d3.event.clientY - this.getBoundingClientRect().top;\n          var subtractMargin = true;\n          var mouseOutAnyReason = false;\n\n          if (isMSIE) {\n            /*\n             D3.js (or maybe SVG.getScreenCTM) has a nasty bug in Internet Explorer 10.\n             d3.mouse() returns incorrect X,Y mouse coordinates when mouse moving\n             over a rect in IE 10.\n             However, d3.event.offsetX/Y also returns the mouse coordinates\n             relative to the triggering <rect>. So we use offsetX/Y on IE.\n             */\n            mouseX = d3.event.offsetX;\n            mouseY = d3.event.offsetY;\n            /*\n             On IE, if you attach a mouse event listener to the <svg> container,\n             it will actually trigger it for all the child elements (like <path>, <circle>, etc).\n             When this happens on IE, the offsetX/Y is set to where ever the child element\n             is located.\n             As a result, we do NOT need to subtract margins to figure out the mouse X/Y\n             position under this scenario. Removing the line below *will* cause\n             the interactive layer to not work right on IE.\n             */\n\n            if (d3.event.target.tagName !== \"svg\") {\n              subtractMargin = false;\n            }\n\n            if (d3.event.target.className.baseVal.match(\"nv-legend\")) {\n              mouseOutAnyReason = true;\n            }\n          }\n\n          if (subtractMargin) {\n            mouseX -= margin.left;\n            mouseY -= margin.top;\n          }\n          /* If mouseX/Y is outside of the chart's bounds,\n           trigger a mouseOut event.\n           */\n\n\n          if (d3.event.type === 'mouseout' || mouseX < 0 || mouseY < 0 || mouseX > availableWidth || mouseY > availableHeight || d3.event.relatedTarget && d3.event.relatedTarget.ownerSVGElement === undefined || mouseOutAnyReason) {\n            if (isMSIE) {\n              if (d3.event.relatedTarget && d3.event.relatedTarget.ownerSVGElement === undefined && (d3.event.relatedTarget.className === undefined || d3.event.relatedTarget.className.match(tooltip.nvPointerEventsClass))) {\n                return;\n              }\n            }\n\n            dispatch.elementMouseout({\n              mouseX: mouseX,\n              mouseY: mouseY\n            });\n            layer.renderGuideLine(null); //hide the guideline\n\n            tooltip.hidden(true);\n            return;\n          } else {\n            tooltip.hidden(false);\n          }\n\n          var scaleIsOrdinal = typeof xScale.rangeBands === 'function';\n          var pointXValue = undefined; // Ordinal scale has no invert method\n\n          if (scaleIsOrdinal) {\n            var elementIndex = d3.bisect(xScale.range(), mouseX) - 1; // Check if mouseX is in the range band\n\n            if (xScale.range()[elementIndex] + xScale.rangeBand() >= mouseX) {\n              pointXValue = xScale.domain()[d3.bisect(xScale.range(), mouseX) - 1];\n            } else {\n              dispatch.elementMouseout({\n                mouseX: mouseX,\n                mouseY: mouseY\n              });\n              layer.renderGuideLine(null); //hide the guideline\n\n              tooltip.hidden(true);\n              return;\n            }\n          } else {\n            pointXValue = xScale.invert(mouseX);\n          }\n\n          dispatch.elementMousemove({\n            mouseX: mouseX,\n            mouseY: mouseY,\n            pointXValue: pointXValue\n          }); //If user double clicks the layer, fire a elementDblclick\n\n          if (d3.event.type === \"dblclick\") {\n            dispatch.elementDblclick({\n              mouseX: mouseX,\n              mouseY: mouseY,\n              pointXValue: pointXValue\n            });\n          } // if user single clicks the layer, fire elementClick\n\n\n          if (d3.event.type === 'click') {\n            dispatch.elementClick({\n              mouseX: mouseX,\n              mouseY: mouseY,\n              pointXValue: pointXValue\n            });\n          } // if user presses mouse down the layer, fire elementMouseDown\n\n\n          if (d3.event.type === 'mousedown') {\n            dispatch.elementMouseDown({\n              mouseX: mouseX,\n              mouseY: mouseY,\n              pointXValue: pointXValue\n            });\n          } // if user presses mouse down the layer, fire elementMouseUp\n\n\n          if (d3.event.type === 'mouseup') {\n            dispatch.elementMouseUp({\n              mouseX: mouseX,\n              mouseY: mouseY,\n              pointXValue: pointXValue\n            });\n          }\n        }\n\n        svgContainer.on(\"touchmove\", mouseHandler).on(\"mousemove\", mouseHandler, true).on(\"mouseout\", mouseHandler, true).on(\"mousedown\", mouseHandler, true).on(\"mouseup\", mouseHandler, true).on(\"dblclick\", mouseHandler).on(\"click\", mouseHandler);\n        layer.guideLine = null; //Draws a vertical guideline at the given X postion.\n\n        layer.renderGuideLine = function (x) {\n          if (!showGuideLine) return;\n          if (layer.guideLine && layer.guideLine.attr(\"x1\") === x) return;\n          nv.dom.write(function () {\n            var line = wrap.select(\".nv-interactiveGuideLine\").selectAll(\"line\").data(x != null ? [nv.utils.NaNtoZero(x)] : [], String);\n            line.enter().append(\"line\").attr(\"class\", \"nv-guideline\").attr(\"x1\", function (d) {\n              return d;\n            }).attr(\"x2\", function (d) {\n              return d;\n            }).attr(\"y1\", availableHeight).attr(\"y2\", 0);\n            line.exit().remove();\n          });\n        };\n      });\n    }\n\n    layer.dispatch = dispatch;\n    layer.tooltip = tooltip;\n\n    layer.margin = function (_) {\n      if (!arguments.length) return margin;\n      margin.top = typeof _.top != 'undefined' ? _.top : margin.top;\n      margin.left = typeof _.left != 'undefined' ? _.left : margin.left;\n      return layer;\n    };\n\n    layer.width = function (_) {\n      if (!arguments.length) return width;\n      width = _;\n      return layer;\n    };\n\n    layer.height = function (_) {\n      if (!arguments.length) return height;\n      height = _;\n      return layer;\n    };\n\n    layer.xScale = function (_) {\n      if (!arguments.length) return xScale;\n      xScale = _;\n      return layer;\n    };\n\n    layer.showGuideLine = function (_) {\n      if (!arguments.length) return showGuideLine;\n      showGuideLine = _;\n      return layer;\n    };\n\n    layer.svgContainer = function (_) {\n      if (!arguments.length) return svgContainer;\n      svgContainer = _;\n      return layer;\n    };\n\n    return layer;\n  };\n  /* Utility class that uses d3.bisect to find the index in a given array, where a search value can be inserted.\n   This is different from normal bisectLeft; this function finds the nearest index to insert the search value.\n  \n   For instance, lets say your array is [1,2,3,5,10,30], and you search for 28.\n   Normal d3.bisectLeft will return 4, because 28 is inserted after the number 10.  But interactiveBisect will return 5\n   because 28 is closer to 30 than 10.\n  \n   Unit tests can be found in: interactiveBisectTest.html\n  \n   Has the following known issues:\n   * Will not work if the data points move backwards (ie, 10,9,8,7, etc) or if the data points are in random order.\n   * Won't work if there are duplicate x coordinate values.\n   */\n\n\n  nv.interactiveBisect = function (values, searchVal, xAccessor) {\n    \"use strict\";\n\n    if (!(values instanceof Array)) {\n      return null;\n    }\n\n    var _xAccessor;\n\n    if (typeof xAccessor !== 'function') {\n      _xAccessor = function _xAccessor(d) {\n        return d.x;\n      };\n    } else {\n      _xAccessor = xAccessor;\n    }\n\n    var _cmp = function _cmp(d, v) {\n      // Accessors are no longer passed the index of the element along with\n      // the element itself when invoked by d3.bisector.\n      //\n      // Starting at D3 v3.4.4, d3.bisector() started inspecting the\n      // function passed to determine if it should consider it an accessor\n      // or a comparator. This meant that accessors that take two arguments\n      // (expecting an index as the second parameter) are treated as\n      // comparators where the second argument is the search value against\n      // which the first argument is compared.\n      return _xAccessor(d) - v;\n    };\n\n    var bisect = d3.bisector(_cmp).left;\n    var index = d3.max([0, bisect(values, searchVal) - 1]);\n\n    var currentValue = _xAccessor(values[index]);\n\n    if (typeof currentValue === 'undefined') {\n      currentValue = index;\n    }\n\n    if (currentValue === searchVal) {\n      return index; //found exact match\n    }\n\n    var nextIndex = d3.min([index + 1, values.length - 1]);\n\n    var nextValue = _xAccessor(values[nextIndex]);\n\n    if (typeof nextValue === 'undefined') {\n      nextValue = nextIndex;\n    }\n\n    if (Math.abs(nextValue - searchVal) >= Math.abs(currentValue - searchVal)) {\n      return index;\n    } else {\n      return nextIndex;\n    }\n  };\n  /*\n   Returns the index in the array \"values\" that is closest to searchVal.\n   Only returns an index if searchVal is within some \"threshold\".\n   Otherwise, returns null.\n   */\n\n\n  nv.nearestValueIndex = function (values, searchVal, threshold) {\n    \"use strict\";\n\n    var yDistMax = Infinity,\n        indexToHighlight = null;\n    values.forEach(function (d, i) {\n      var delta = Math.abs(searchVal - d);\n\n      if (d != null && delta <= yDistMax && delta < threshold) {\n        yDistMax = delta;\n        indexToHighlight = i;\n      }\n    });\n    return indexToHighlight;\n  };\n  /* Model which can be instantiated to handle tooltip rendering.\n   Example usage:\n   var tip = nv.models.tooltip().gravity('w').distance(23)\n   .data(myDataObject);\n  \n   tip();    //just invoke the returned function to render tooltip.\n   */\n\n\n  nv.models.tooltip = function () {\n    \"use strict\";\n    /*\n    Tooltip data. If data is given in the proper format, a consistent tooltip is generated.\n    Example Format of data:\n    {\n        key: \"Date\",\n        value: \"August 2009\",\n        series: [\n            {key: \"Series 1\", value: \"Value 1\", color: \"#000\"},\n            {key: \"Series 2\", value: \"Value 2\", color: \"#00f\"}\n        ]\n    }\n    */\n\n    var id = \"nvtooltip-\" + Math.floor(Math.random() * 100000) // Generates a unique id when you create a new tooltip() object.\n    ,\n        data = null,\n        gravity = 'w' // Can be 'n','s','e','w'. Determines how tooltip is positioned.\n    ,\n        distance = 25 // Distance to offset tooltip from the mouse location.\n    ,\n        snapDistance = 0 // Tolerance allowed before tooltip is moved from its current position (creates 'snapping' effect)\n    ,\n        classes = null // Attaches additional CSS classes to the tooltip DIV that is created.\n    ,\n        hidden = true // Start off hidden, toggle with hide/show functions below.\n    ,\n        hideDelay = 200 // Delay (in ms) before the tooltip hides after calling hide().\n    ,\n        tooltip = null // d3 select of the tooltip div.\n    ,\n        lastPosition = {\n      left: null,\n      top: null // Last position the tooltip was in.\n\n    },\n        enabled = true // True -> tooltips are rendered. False -> don't render tooltips.\n    ,\n        duration = 100 // Tooltip movement duration, in ms.\n    ,\n        headerEnabled = true // If is to show the tooltip header.\n    ,\n        nvPointerEventsClass = \"nv-pointer-events-none\" // CSS class to specify whether element should not have mouse events.\n    ; // Format function for the tooltip values column.\n    // d is value,\n    // i is series index\n    // p is point containing the value\n\n    var valueFormatter = function valueFormatter(d, i, p) {\n      return d;\n    }; // Format function for the tooltip header value.\n\n\n    var headerFormatter = function headerFormatter(d) {\n      return d;\n    };\n\n    var keyFormatter = function keyFormatter(d, i) {\n      return d;\n    }; // By default, the tooltip model renders a beautiful table inside a DIV, returned as HTML\n    // You can override this function if a custom tooltip is desired. For instance, you could directly manipulate\n    // the DOM by accessing elem and returning false.\n\n\n    var contentGenerator = function contentGenerator(d, elem) {\n      if (d === null) {\n        return '';\n      }\n\n      var table = d3.select(document.createElement(\"table\"));\n\n      if (headerEnabled) {\n        var theadEnter = table.selectAll(\"thead\").data([d]).enter().append(\"thead\");\n        theadEnter.append(\"tr\").append(\"td\").attr(\"colspan\", 3).append(\"strong\").classed(\"x-value\", true).html(headerFormatter(d.value));\n      }\n\n      var tbodyEnter = table.selectAll(\"tbody\").data([d]).enter().append(\"tbody\");\n      var trowEnter = tbodyEnter.selectAll(\"tr\").data(function (p) {\n        return p.series;\n      }).enter().append(\"tr\").classed(\"highlight\", function (p) {\n        return p.highlight;\n      });\n      trowEnter.append(\"td\").classed(\"legend-color-guide\", true).append(\"div\").style(\"background-color\", function (p) {\n        return p.color;\n      });\n      trowEnter.append(\"td\").classed(\"key\", true).classed(\"total\", function (p) {\n        return !!p.total;\n      }).html(function (p, i) {\n        return keyFormatter(p.key, i);\n      });\n      trowEnter.append(\"td\").classed(\"value\", true).html(function (p, i) {\n        return valueFormatter(p.value, i, p);\n      });\n      trowEnter.filter(function (p, i) {\n        return p.percent !== undefined;\n      }).append(\"td\").classed(\"percent\", true).html(function (p, i) {\n        return \"(\" + d3.format('%')(p.percent) + \")\";\n      });\n      trowEnter.selectAll(\"td\").each(function (p) {\n        if (p.highlight) {\n          var opacityScale = d3.scale.linear().domain([0, 1]).range([\"#fff\", p.color]);\n          var opacity = 0.6;\n          d3.select(this).style(\"border-bottom-color\", opacityScale(opacity)).style(\"border-top-color\", opacityScale(opacity));\n        }\n      });\n      var html = table.node().outerHTML;\n      if (d.footer !== undefined) html += \"<div class='footer'>\" + d.footer + \"</div>\";\n      return html;\n    };\n    /*\n     Function that returns the position (relative to the viewport/document.body)\n     the tooltip should be placed in.\n     Should return: {\n        left: <leftPos>,\n        top: <topPos>\n     }\n     */\n\n\n    var position = function position() {\n      var pos = {\n        left: d3.event !== null ? d3.event.clientX : 0,\n        top: d3.event !== null ? d3.event.clientY : 0\n      };\n\n      if (getComputedStyle(document.body).transform != 'none') {\n        // Take the offset into account, as now the tooltip is relative\n        // to document.body.\n        var client = document.body.getBoundingClientRect();\n        pos.left -= client.left;\n        pos.top -= client.top;\n      }\n\n      return pos;\n    };\n\n    var dataSeriesExists = function dataSeriesExists(d) {\n      if (d && d.series) {\n        if (nv.utils.isArray(d.series)) {\n          return true;\n        } // if object, it's okay just convert to array of the object\n\n\n        if (nv.utils.isObject(d.series)) {\n          d.series = [d.series];\n          return true;\n        }\n      }\n\n      return false;\n    }; // Calculates the gravity offset of the tooltip. Parameter is position of tooltip\n    // relative to the viewport.\n\n\n    var calcGravityOffset = function calcGravityOffset(pos) {\n      var height = tooltip.node().offsetHeight,\n          width = tooltip.node().offsetWidth,\n          clientWidth = document.documentElement.clientWidth,\n          // Don't want scrollbars.\n      clientHeight = document.documentElement.clientHeight,\n          // Don't want scrollbars.\n      left,\n          top,\n          tmp; // calculate position based on gravity\n\n      switch (gravity) {\n        case 'e':\n          left = -width - distance;\n          top = -(height / 2);\n          if (pos.left + left < 0) left = distance;\n          if ((tmp = pos.top + top) < 0) top -= tmp;\n          if ((tmp = pos.top + top + height) > clientHeight) top -= tmp - clientHeight;\n          break;\n\n        case 'w':\n          left = distance;\n          top = -(height / 2);\n          if (pos.left + left + width > clientWidth) left = -width - distance;\n          if ((tmp = pos.top + top) < 0) top -= tmp;\n          if ((tmp = pos.top + top + height) > clientHeight) top -= tmp - clientHeight;\n          break;\n\n        case 'n':\n          left = -(width / 2) - 5; // - 5 is an approximation of the mouse's height.\n\n          top = distance;\n          if (pos.top + top + height > clientHeight) top = -height - distance;\n          if ((tmp = pos.left + left) < 0) left -= tmp;\n          if ((tmp = pos.left + left + width) > clientWidth) left -= tmp - clientWidth;\n          break;\n\n        case 's':\n          left = -(width / 2);\n          top = -height - distance;\n          if (pos.top + top < 0) top = distance;\n          if ((tmp = pos.left + left) < 0) left -= tmp;\n          if ((tmp = pos.left + left + width) > clientWidth) left -= tmp - clientWidth;\n          break;\n\n        case 'center':\n          left = -(width / 2);\n          top = -(height / 2);\n          break;\n\n        default:\n          left = 0;\n          top = 0;\n          break;\n      }\n\n      return {\n        'left': left,\n        'top': top\n      };\n    };\n    /*\n     Positions the tooltip in the correct place, as given by the position() function.\n     */\n\n\n    var positionTooltip = function positionTooltip() {\n      nv.dom.read(function () {\n        var pos = position(),\n            gravityOffset = calcGravityOffset(pos),\n            left = pos.left + gravityOffset.left,\n            top = pos.top + gravityOffset.top; // delay hiding a bit to avoid flickering\n\n        if (hidden) {\n          tooltip.interrupt().transition().delay(hideDelay).duration(0).style('opacity', 0);\n        } else {\n          // using tooltip.style('transform') returns values un-usable for tween\n          var old_translate = 'translate(' + lastPosition.left + 'px, ' + lastPosition.top + 'px)';\n          var new_translate = 'translate(' + Math.round(left) + 'px, ' + Math.round(top) + 'px)';\n          var translateInterpolator = d3.interpolateString(old_translate, new_translate);\n          var is_hidden = tooltip.style('opacity') < 0.1;\n          tooltip.interrupt() // cancel running transitions\n          .transition().duration(is_hidden ? 0 : duration) // using tween since some versions of d3 can't auto-tween a translate on a div\n          .styleTween('transform', function (d) {\n            return translateInterpolator;\n          }, 'important') // Safari has its own `-webkit-transform` and does not support `transform`\n          .styleTween('-webkit-transform', function (d) {\n            return translateInterpolator;\n          }).style('-ms-transform', new_translate).style('opacity', 1);\n        }\n\n        lastPosition.left = left;\n        lastPosition.top = top;\n      });\n    }; // Creates new tooltip container, or uses existing one on DOM.\n\n\n    function initTooltip() {\n      if (!tooltip || !tooltip.node()) {\n        // Create new tooltip div if it doesn't exist on DOM.\n        var data = [1];\n        tooltip = d3.select(document.body).select('#' + id).data(data);\n        tooltip.enter().append('div').attr(\"class\", \"nvtooltip \" + (classes ? classes : \"xy-tooltip\")).attr(\"id\", id).style(\"top\", 0).style(\"left\", 0).style('opacity', 0).style('position', 'fixed').selectAll(\"div, table, td, tr\").classed(nvPointerEventsClass, true).classed(nvPointerEventsClass, true);\n        tooltip.exit().remove();\n      }\n    } // Draw the tooltip onto the DOM.\n\n\n    function nvtooltip() {\n      if (!enabled) return;\n      if (!dataSeriesExists(data)) return;\n      nv.dom.write(function () {\n        initTooltip(); // Generate data and set it into tooltip.\n        // Bonus - If you override contentGenerator and return false, you can use something like\n        //         Angular, React or Knockout to bind the data for your tooltip directly to the DOM.\n\n        var newContent = contentGenerator(data, tooltip.node());\n\n        if (newContent) {\n          tooltip.node().innerHTML = newContent;\n        }\n\n        positionTooltip();\n      });\n      return nvtooltip;\n    }\n\n    nvtooltip.nvPointerEventsClass = nvPointerEventsClass;\n    nvtooltip.options = nv.utils.optionsFunc.bind(nvtooltip);\n    nvtooltip._options = Object.create({}, {\n      // simple read/write options\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n        }\n      },\n      gravity: {\n        get: function get() {\n          return gravity;\n        },\n        set: function set(_) {\n          gravity = _;\n        }\n      },\n      distance: {\n        get: function get() {\n          return distance;\n        },\n        set: function set(_) {\n          distance = _;\n        }\n      },\n      snapDistance: {\n        get: function get() {\n          return snapDistance;\n        },\n        set: function set(_) {\n          snapDistance = _;\n        }\n      },\n      classes: {\n        get: function get() {\n          return classes;\n        },\n        set: function set(_) {\n          classes = _;\n        }\n      },\n      enabled: {\n        get: function get() {\n          return enabled;\n        },\n        set: function set(_) {\n          enabled = _;\n        }\n      },\n      hideDelay: {\n        get: function get() {\n          return hideDelay;\n        },\n        set: function set(_) {\n          hideDelay = _;\n        }\n      },\n      contentGenerator: {\n        get: function get() {\n          return contentGenerator;\n        },\n        set: function set(_) {\n          contentGenerator = _;\n        }\n      },\n      valueFormatter: {\n        get: function get() {\n          return valueFormatter;\n        },\n        set: function set(_) {\n          valueFormatter = _;\n        }\n      },\n      headerFormatter: {\n        get: function get() {\n          return headerFormatter;\n        },\n        set: function set(_) {\n          headerFormatter = _;\n        }\n      },\n      keyFormatter: {\n        get: function get() {\n          return keyFormatter;\n        },\n        set: function set(_) {\n          keyFormatter = _;\n        }\n      },\n      headerEnabled: {\n        get: function get() {\n          return headerEnabled;\n        },\n        set: function set(_) {\n          headerEnabled = _;\n        }\n      },\n      position: {\n        get: function get() {\n          return position;\n        },\n        set: function set(_) {\n          position = _;\n        }\n      },\n      // Deprecated options\n      chartContainer: {\n        get: function get() {\n          return document.body;\n        },\n        set: function set(_) {\n          // deprecated after 1.8.3\n          nv.deprecated('chartContainer', 'feature removed after 1.8.3');\n        }\n      },\n      fixedTop: {\n        get: function get() {\n          return null;\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('fixedTop', 'feature removed after 1.8.1');\n        }\n      },\n      offset: {\n        get: function get() {\n          return {\n            left: 0,\n            top: 0\n          };\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('offset', 'use chart.tooltip.distance() instead');\n        }\n      },\n      // options with extra logic\n      hidden: {\n        get: function get() {\n          return hidden;\n        },\n        set: function set(_) {\n          if (hidden != _) {\n            hidden = !!_;\n            nvtooltip();\n          }\n        }\n      },\n      data: {\n        get: function get() {\n          return data;\n        },\n        set: function set(_) {\n          // if showing a single data point, adjust data format with that\n          if (_.point) {\n            _.value = _.point.x;\n            _.series = _.series || {};\n            _.series.value = _.point.y;\n            _.series.color = _.point.color || _.series.color;\n          }\n\n          data = _;\n        }\n      },\n      // read only properties\n      node: {\n        get: function get() {\n          return tooltip.node();\n        },\n        set: function set(_) {}\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {}\n      }\n    });\n    nv.utils.initOptions(nvtooltip);\n    return nvtooltip;\n  };\n  /*\n  Gets the browser window size\n  \n  Returns object with height and width properties\n   */\n\n\n  nv.utils.windowSize = function () {\n    // Sane defaults\n    var size = {\n      width: 640,\n      height: 480\n    }; // Most recent browsers use\n\n    if (window.innerWidth && window.innerHeight) {\n      size.width = window.innerWidth;\n      size.height = window.innerHeight;\n      return size;\n    } // IE can use depending on mode it is in\n\n\n    if (document.compatMode == 'CSS1Compat' && document.documentElement && document.documentElement.offsetWidth) {\n      size.width = document.documentElement.offsetWidth;\n      size.height = document.documentElement.offsetHeight;\n      return size;\n    } // Earlier IE uses Doc.body\n\n\n    if (document.body && document.body.offsetWidth) {\n      size.width = document.body.offsetWidth;\n      size.height = document.body.offsetHeight;\n      return size;\n    }\n\n    return size;\n  };\n  /* handle dumb browser quirks...  isinstance breaks if you use frames\n  typeof returns 'object' for null, NaN is a number, etc.\n   */\n\n\n  nv.utils.isArray = Array.isArray;\n\n  nv.utils.isObject = function (a) {\n    return a !== null && typeof a === 'object';\n  };\n\n  nv.utils.isFunction = function (a) {\n    return typeof a === 'function';\n  };\n\n  nv.utils.isDate = function (a) {\n    return toString.call(a) === '[object Date]';\n  };\n\n  nv.utils.isNumber = function (a) {\n    return !isNaN(a) && typeof a === 'number';\n  };\n  /*\n  Binds callback function to run when window is resized\n   */\n\n\n  nv.utils.windowResize = function (handler) {\n    if (window.addEventListener) {\n      window.addEventListener('resize', handler);\n    } else {\n      nv.log(\"ERROR: Failed to bind to window.resize with: \", handler);\n    } // return object with clear function to remove the single added callback.\n\n\n    return {\n      callback: handler,\n      clear: function clear() {\n        window.removeEventListener('resize', handler);\n      }\n    };\n  };\n  /*\n  Backwards compatible way to implement more d3-like coloring of graphs.\n  Can take in nothing, an array, or a function/scale\n  To use a normal scale, get the range and pass that because we must be able\n  to take two arguments and use the index to keep backward compatibility\n  */\n\n\n  nv.utils.getColor = function (color) {\n    //if you pass in nothing, get default colors back\n    if (color === undefined) {\n      return nv.utils.defaultColor(); //if passed an array, turn it into a color scale\n    } else if (nv.utils.isArray(color)) {\n      var color_scale = d3.scale.ordinal().range(color);\n      return function (d, i) {\n        var key = i === undefined ? d : i;\n        return d.color || color_scale(key);\n      }; //if passed a function or scale, return it, or whatever it may be\n      //external libs, such as angularjs-nvd3-directives use this\n    } else {\n      //can't really help it if someone passes rubbish as color\n      return color;\n    }\n  };\n  /*\n  Default color chooser uses a color scale of 20 colors from D3\n   https://github.com/mbostock/d3/wiki/Ordinal-Scales#categorical-colors\n   */\n\n\n  nv.utils.defaultColor = function () {\n    // get range of the scale so we'll turn it into our own function.\n    return nv.utils.getColor(d3.scale.category20().range());\n  };\n  /*\n  Returns a color function that takes the result of 'getKey' for each series and\n  looks for a corresponding color from the dictionary\n  */\n\n\n  nv.utils.customTheme = function (dictionary, getKey, defaultColors) {\n    // use default series.key if getKey is undefined\n    getKey = getKey || function (series) {\n      return series.key;\n    };\n\n    defaultColors = defaultColors || d3.scale.category20().range(); // start at end of default color list and walk back to index 0\n\n    var defIndex = defaultColors.length;\n    return function (series, index) {\n      var key = getKey(series);\n\n      if (nv.utils.isFunction(dictionary[key])) {\n        return dictionary[key]();\n      } else if (dictionary[key] !== undefined) {\n        return dictionary[key];\n      } else {\n        // no match in dictionary, use a default color\n        if (!defIndex) {\n          // used all the default colors, start over\n          defIndex = defaultColors.length;\n        }\n\n        defIndex = defIndex - 1;\n        return defaultColors[defIndex];\n      }\n    };\n  };\n  /*\n  From the PJAX example on d3js.org, while this is not really directly needed\n  it's a very cool method for doing pjax, I may expand upon it a little bit,\n  open to suggestions on anything that may be useful\n  */\n\n\n  nv.utils.pjax = function (links, content) {\n    var load = function load(href) {\n      d3.html(href, function (fragment) {\n        var target = d3.select(content).node();\n        target.parentNode.replaceChild(d3.select(fragment).select(content).node(), target);\n        nv.utils.pjax(links, content);\n      });\n    };\n\n    d3.selectAll(links).on(\"click\", function () {\n      history.pushState(this.href, this.textContent, this.href);\n      load(this.href);\n      d3.event.preventDefault();\n    });\n    d3.select(window).on(\"popstate\", function () {\n      if (d3.event.state) {\n        load(d3.event.state);\n      }\n    });\n  };\n  /*\n  For when we want to approximate the width in pixels for an SVG:text element.\n  Most common instance is when the element is in a display:none; container.\n  Forumla is : text.length * font-size * constant_factor\n  */\n\n\n  nv.utils.calcApproxTextWidth = function (svgTextElem) {\n    if (nv.utils.isFunction(svgTextElem.style) && nv.utils.isFunction(svgTextElem.text)) {\n      var fontSize = parseInt(svgTextElem.style(\"font-size\").replace(\"px\", \"\"), 10);\n      var textLength = svgTextElem.text().length;\n      return nv.utils.NaNtoZero(textLength * fontSize * 0.5);\n    }\n\n    return 0;\n  };\n  /*\n  Numbers that are undefined, null or NaN, convert them to zeros.\n  */\n\n\n  nv.utils.NaNtoZero = function (n) {\n    if (!nv.utils.isNumber(n) || isNaN(n) || n === null || n === Infinity || n === -Infinity) {\n      return 0;\n    }\n\n    return n;\n  };\n  /*\n  Add a way to watch for d3 transition ends to d3\n  */\n\n\n  d3.selection.prototype.watchTransition = function (renderWatch) {\n    var args = [this].concat([].slice.call(arguments, 1));\n    return renderWatch.transition.apply(renderWatch, args);\n  };\n  /*\n  Helper object to watch when d3 has rendered something\n  */\n\n\n  nv.utils.renderWatch = function (dispatch, duration) {\n    if (!(this instanceof nv.utils.renderWatch)) {\n      return new nv.utils.renderWatch(dispatch, duration);\n    }\n\n    var _duration = duration !== undefined ? duration : 250;\n\n    var renderStack = [];\n    var self = this;\n\n    this.models = function (models) {\n      models = [].slice.call(arguments, 0);\n      models.forEach(function (model) {\n        model.__rendered = false;\n\n        (function (m) {\n          m.dispatch.on('renderEnd', function (arg) {\n            m.__rendered = true;\n            self.renderEnd('model');\n          });\n        })(model);\n\n        if (renderStack.indexOf(model) < 0) {\n          renderStack.push(model);\n        }\n      });\n      return this;\n    };\n\n    this.reset = function (duration) {\n      if (duration !== undefined) {\n        _duration = duration;\n      }\n\n      renderStack = [];\n    };\n\n    this.transition = function (selection, args, duration) {\n      args = arguments.length > 1 ? [].slice.call(arguments, 1) : [];\n\n      if (args.length > 1) {\n        duration = args.pop();\n      } else {\n        duration = _duration !== undefined ? _duration : 250;\n      }\n\n      selection.__rendered = false;\n\n      if (renderStack.indexOf(selection) < 0) {\n        renderStack.push(selection);\n      }\n\n      if (duration === 0) {\n        selection.__rendered = true;\n\n        selection.delay = function () {\n          return this;\n        };\n\n        selection.duration = function () {\n          return this;\n        };\n\n        return selection;\n      } else {\n        if (selection.length === 0) {\n          selection.__rendered = true;\n        } else if (selection.every(function (d) {\n          return !d.length;\n        })) {\n          selection.__rendered = true;\n        } else {\n          selection.__rendered = false;\n        }\n\n        var n = 0;\n        return selection.transition().duration(duration).each(function () {\n          ++n;\n        }).each('end', function (d, i) {\n          if (--n === 0) {\n            selection.__rendered = true;\n            self.renderEnd.apply(this, args);\n          }\n        });\n      }\n    };\n\n    this.renderEnd = function () {\n      if (renderStack.every(function (d) {\n        return d.__rendered;\n      })) {\n        renderStack.forEach(function (d) {\n          d.__rendered = false;\n        });\n        dispatch.renderEnd.apply(this, arguments);\n      }\n    };\n  };\n  /*\n  Takes multiple objects and combines them into the first one (dst)\n  example:  nv.utils.deepExtend({a: 1}, {a: 2, b: 3}, {c: 4});\n  gives:  {a: 2, b: 3, c: 4}\n  */\n\n\n  nv.utils.deepExtend = function (dst) {\n    var sources = arguments.length > 1 ? [].slice.call(arguments, 1) : [];\n    sources.forEach(function (source) {\n      for (var key in source) {\n        var isArray = nv.utils.isArray(dst[key]);\n        var isObject = nv.utils.isObject(dst[key]);\n        var srcObj = nv.utils.isObject(source[key]);\n\n        if (isObject && !isArray && srcObj) {\n          nv.utils.deepExtend(dst[key], source[key]);\n        } else {\n          dst[key] = source[key];\n        }\n      }\n    });\n  };\n  /*\n  state utility object, used to track d3 states in the models\n  */\n\n\n  nv.utils.state = function () {\n    if (!(this instanceof nv.utils.state)) {\n      return new nv.utils.state();\n    }\n\n    var state = {};\n\n    var _self = this;\n\n    var _setState = function _setState() {};\n\n    var _getState = function _getState() {\n      return {};\n    };\n\n    var init = null;\n    var changed = null;\n    this.dispatch = d3.dispatch('change', 'set');\n    this.dispatch.on('set', function (state) {\n      _setState(state, true);\n    });\n\n    this.getter = function (fn) {\n      _getState = fn;\n      return this;\n    };\n\n    this.setter = function (fn, callback) {\n      if (!callback) {\n        callback = function callback() {};\n      }\n\n      _setState = function _setState(state, update) {\n        fn(state);\n\n        if (update) {\n          callback();\n        }\n      };\n\n      return this;\n    };\n\n    this.init = function (state) {\n      init = init || {};\n      nv.utils.deepExtend(init, state);\n    };\n\n    var _set = function _set() {\n      var settings = _getState();\n\n      if (JSON.stringify(settings) === JSON.stringify(state)) {\n        return false;\n      }\n\n      for (var key in settings) {\n        if (state[key] === undefined) {\n          state[key] = {};\n        }\n\n        state[key] = settings[key];\n        changed = true;\n      }\n\n      return true;\n    };\n\n    this.update = function () {\n      if (init) {\n        _setState(init, false);\n\n        init = null;\n      }\n\n      if (_set.call(this)) {\n        this.dispatch.change(state);\n      }\n    };\n  };\n  /*\n  Snippet of code you can insert into each nv.models.* to give you the ability to\n  do things like:\n  chart.options({\n    showXAxis: true,\n    tooltips: true\n  });\n  \n  To enable in the chart:\n  chart.options = nv.utils.optionsFunc.bind(chart);\n  */\n\n\n  nv.utils.optionsFunc = function (args) {\n    if (args) {\n      d3.map(args).forEach(function (key, value) {\n        if (nv.utils.isFunction(this[key])) {\n          this[key](value);\n        }\n      }.bind(this));\n    }\n\n    return this;\n  };\n  /*\n  numTicks:  requested number of ticks\n  data:  the chart data\n  \n  returns the number of ticks to actually use on X axis, based on chart data\n  to avoid duplicate ticks with the same value\n  */\n\n\n  nv.utils.calcTicksX = function (numTicks, data) {\n    // find max number of values from all data streams\n    var numValues = 1;\n    var i = 0;\n\n    for (i; i < data.length; i += 1) {\n      var stream_len = data[i] && data[i].values ? data[i].values.length : 0;\n      numValues = stream_len > numValues ? stream_len : numValues;\n    }\n\n    nv.log(\"Requested number of ticks: \", numTicks);\n    nv.log(\"Calculated max values to be: \", numValues); // make sure we don't have more ticks than values to avoid duplicates\n\n    numTicks = numTicks > numValues ? numTicks = numValues - 1 : numTicks; // make sure we have at least one tick\n\n    numTicks = numTicks < 1 ? 1 : numTicks; // make sure it's an integer\n\n    numTicks = Math.floor(numTicks);\n    nv.log(\"Calculating tick count as: \", numTicks);\n    return numTicks;\n  };\n  /*\n  returns number of ticks to actually use on Y axis, based on chart data\n  */\n\n\n  nv.utils.calcTicksY = function (numTicks, data) {\n    // currently uses the same logic but we can adjust here if needed later\n    return nv.utils.calcTicksX(numTicks, data);\n  };\n  /*\n  Add a particular option from an options object onto chart\n  Options exposed on a chart are a getter/setter function that returns chart\n  on set to mimic typical d3 option chaining, e.g. svg.option1('a').option2('b');\n  \n  option objects should be generated via Object.create() to provide\n  the option of manipulating data via get/set functions.\n  */\n\n\n  nv.utils.initOption = function (chart, name) {\n    // if it's a call option, just call it directly, otherwise do get/set\n    if (chart._calls && chart._calls[name]) {\n      chart[name] = chart._calls[name];\n    } else {\n      chart[name] = function (_) {\n        if (!arguments.length) return chart._options[name];\n        chart._overrides[name] = true;\n        chart._options[name] = _;\n        return chart;\n      }; // calling the option as _option will ignore if set by option already\n      // so nvd3 can set options internally but the stop if set manually\n\n\n      chart['_' + name] = function (_) {\n        if (!arguments.length) return chart._options[name];\n\n        if (!chart._overrides[name]) {\n          chart._options[name] = _;\n        }\n\n        return chart;\n      };\n    }\n  };\n  /*\n  Add all options in an options object to the chart\n  */\n\n\n  nv.utils.initOptions = function (chart) {\n    chart._overrides = chart._overrides || {};\n    var ops = Object.getOwnPropertyNames(chart._options || {});\n    var calls = Object.getOwnPropertyNames(chart._calls || {});\n    ops = ops.concat(calls);\n\n    for (var i in ops) {\n      nv.utils.initOption(chart, ops[i]);\n    }\n  };\n  /*\n  Inherit options from a D3 object\n  d3.rebind makes calling the function on target actually call it on source\n  Also use _d3options so we can track what we inherit for documentation and chained inheritance\n  */\n\n\n  nv.utils.inheritOptionsD3 = function (target, d3_source, oplist) {\n    target._d3options = oplist.concat(target._d3options || []); // Find unique d3 options (string) and update d3options\n\n    target._d3options = (target._d3options || []).filter(function (item, i, ar) {\n      return ar.indexOf(item) === i;\n    });\n    oplist.unshift(d3_source);\n    oplist.unshift(target);\n    d3.rebind.apply(this, oplist);\n  };\n  /*\n  Remove duplicates from an array\n  */\n\n\n  nv.utils.arrayUnique = function (a) {\n    return a.sort().filter(function (item, pos) {\n      return !pos || item != a[pos - 1];\n    });\n  };\n  /*\n  Keeps a list of custom symbols to draw from in addition to d3.svg.symbol\n  Necessary since d3 doesn't let you extend its list -_-\n  Add new symbols by doing nv.utils.symbols.set('name', function(size){...});\n  */\n\n\n  nv.utils.symbolMap = d3.map();\n  /*\n  Replaces d3.svg.symbol so that we can look both there and our own map\n   */\n\n  nv.utils.symbol = function () {\n    var type,\n        size = 64;\n\n    function symbol(d, i) {\n      var t = type.call(this, d, i);\n      var s = size.call(this, d, i);\n\n      if (d3.svg.symbolTypes.indexOf(t) !== -1) {\n        return d3.svg.symbol().type(t).size(s)();\n      } else {\n        return nv.utils.symbolMap.get(t)(s);\n      }\n    }\n\n    symbol.type = function (_) {\n      if (!arguments.length) return type;\n      type = d3.functor(_);\n      return symbol;\n    };\n\n    symbol.size = function (_) {\n      if (!arguments.length) return size;\n      size = d3.functor(_);\n      return symbol;\n    };\n\n    return symbol;\n  };\n  /*\n  Inherit option getter/setter functions from source to target\n  d3.rebind makes calling the function on target actually call it on source\n  Also track via _inherited and _d3options so we can track what we inherit\n  for documentation generation purposes and chained inheritance\n  */\n\n\n  nv.utils.inheritOptions = function (target, source) {\n    // inherit all the things\n    var ops = Object.getOwnPropertyNames(source._options || {});\n    var calls = Object.getOwnPropertyNames(source._calls || {});\n    var inherited = source._inherited || [];\n    var d3ops = source._d3options || [];\n    var args = ops.concat(calls).concat(inherited).concat(d3ops);\n    args.unshift(source);\n    args.unshift(target);\n    d3.rebind.apply(this, args); // pass along the lists to keep track of them, don't allow duplicates\n\n    target._inherited = nv.utils.arrayUnique(ops.concat(calls).concat(inherited).concat(ops).concat(target._inherited || []));\n    target._d3options = nv.utils.arrayUnique(d3ops.concat(target._d3options || []));\n  };\n  /*\n  Runs common initialize code on the svg before the chart builds\n  */\n\n\n  nv.utils.initSVG = function (svg) {\n    svg.classed({\n      'nvd3-svg': true\n    });\n  };\n  /*\n  Sanitize and provide default for the container height.\n  */\n\n\n  nv.utils.sanitizeHeight = function (height, container) {\n    return height || parseInt(container.style('height'), 10) || 400;\n  };\n  /*\n  Sanitize and provide default for the container width.\n  */\n\n\n  nv.utils.sanitizeWidth = function (width, container) {\n    return width || parseInt(container.style('width'), 10) || 960;\n  };\n  /*\n  Calculate the available height for a chart.\n  */\n\n\n  nv.utils.availableHeight = function (height, container, margin) {\n    return Math.max(0, nv.utils.sanitizeHeight(height, container) - margin.top - margin.bottom);\n  };\n  /*\n  Calculate the available width for a chart.\n  */\n\n\n  nv.utils.availableWidth = function (width, container, margin) {\n    return Math.max(0, nv.utils.sanitizeWidth(width, container) - margin.left - margin.right);\n  };\n  /*\n  Clear any rendered chart components and display a chart's 'noData' message\n  */\n\n\n  nv.utils.noData = function (chart, container) {\n    var opt = chart.options(),\n        margin = opt.margin(),\n        noData = opt.noData(),\n        data = noData == null ? [\"No Data Available.\"] : [noData],\n        height = nv.utils.availableHeight(null, container, margin),\n        width = nv.utils.availableWidth(null, container, margin),\n        x = margin.left + width / 2,\n        y = margin.top + height / 2; //Remove any previously created chart components\n\n    container.selectAll('g').remove();\n    var noDataText = container.selectAll('.nv-noData').data(data);\n    noDataText.enter().append('text').attr('class', 'nvd3 nv-noData').attr('dy', '-.7em').style('text-anchor', 'middle');\n    noDataText.attr('x', x).attr('y', y).text(function (t) {\n      return t;\n    });\n  };\n  /*\n   Wrap long labels.\n   */\n\n\n  nv.utils.wrapTicks = function (text, width) {\n    text.each(function () {\n      var text = d3.select(this),\n          words = text.text().split(/\\s+/).reverse(),\n          word,\n          line = [],\n          lineNumber = 0,\n          lineHeight = 1.1,\n          y = text.attr(\"y\"),\n          dy = parseFloat(text.attr(\"dy\")),\n          tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n\n      while (word = words.pop()) {\n        line.push(word);\n        tspan.text(line.join(\" \"));\n\n        if (tspan.node().getComputedTextLength() > width) {\n          line.pop();\n          tspan.text(line.join(\" \"));\n          line = [word];\n          tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n        }\n      }\n    });\n  };\n  /*\n  Check equality of 2 array\n  */\n\n\n  nv.utils.arrayEquals = function (array1, array2) {\n    if (array1 === array2) return true;\n    if (!array1 || !array2) return false; // compare lengths - can save a lot of time\n\n    if (array1.length != array2.length) return false;\n\n    for (var i = 0, l = array1.length; i < l; i++) {\n      // Check if we have nested arrays\n      if (array1[i] instanceof Array && array2[i] instanceof Array) {\n        // recurse into the nested arrays\n        if (!nv.arrayEquals(array1[i], array2[i])) return false;\n      } else if (array1[i] != array2[i]) {\n        // Warning - two different object instances will never be equal: {x:20} != {x:20}\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /*\n   Check if a point within an arc\n   */\n\n\n  nv.utils.pointIsInArc = function (pt, ptData, d3Arc) {\n    // Center of the arc is assumed to be 0,0\n    // (pt.x, pt.y) are assumed to be relative to the center\n    var r1 = d3Arc.innerRadius()(ptData),\n        // Note: Using the innerRadius\n    r2 = d3Arc.outerRadius()(ptData),\n        theta1 = d3Arc.startAngle()(ptData),\n        theta2 = d3Arc.endAngle()(ptData);\n    var dist = pt.x * pt.x + pt.y * pt.y,\n        angle = Math.atan2(pt.x, -pt.y); // Note: different coordinate system.\n\n    angle = angle < 0 ? angle + Math.PI * 2 : angle;\n    return r1 * r1 <= dist && dist <= r2 * r2 && theta1 <= angle && angle <= theta2;\n  };\n\n  nv.models.axis = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var axis = d3.svg.axis();\n    var scale = d3.scale.linear();\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 75 //only used for tickLabel currently\n    ,\n        height = 60 //only used for tickLabel currently\n    ,\n        axisLabelText = null,\n        showMaxMin = true //TODO: showMaxMin should be disabled on all ordinal scaled axes\n    ,\n        rotateLabels = 0,\n        rotateYLabel = true,\n        staggerLabels = false,\n        isOrdinal = false,\n        ticks = null,\n        axisLabelDistance = 0,\n        fontSize = undefined,\n        duration = 250,\n        dispatch = d3.dispatch('renderEnd'),\n        tickFormatMaxMin;\n    axis.scale(scale).orient('bottom').tickFormat(function (d) {\n      return d;\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var scale0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-axis').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-axis');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        if (ticks !== null) axis.ticks(ticks);else if (axis.orient() == 'top' || axis.orient() == 'bottom') axis.ticks(Math.abs(scale.range()[1] - scale.range()[0]) / 100); //TODO: consider calculating width/height based on whether or not label is added, for reference in charts using this component\n\n        g.watchTransition(renderWatch, 'axis').call(axis);\n        scale0 = scale0 || axis.scale();\n        var fmt = axis.tickFormat();\n\n        if (fmt == null) {\n          fmt = scale0.tickFormat();\n        }\n\n        var axisLabel = g.selectAll('text.nv-axislabel').data([axisLabelText || null]);\n        axisLabel.exit().remove(); //only skip when fontSize is undefined so it can be cleared with a null or blank string\n\n        if (fontSize !== undefined) {\n          g.selectAll('g').select(\"text\").style('font-size', fontSize);\n        }\n\n        var xLabelMargin;\n        var axisMaxMin;\n        var w;\n\n        switch (axis.orient()) {\n          case 'top':\n            axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n            w = 0;\n\n            if (scale.range().length === 1) {\n              w = isOrdinal ? scale.range()[0] * 2 + scale.rangeBand() : 0;\n            } else if (scale.range().length === 2) {\n              w = isOrdinal ? scale.range()[0] + scale.range()[1] + scale.rangeBand() : scale.range()[1];\n            } else if (scale.range().length > 2) {\n              w = scale.range()[scale.range().length - 1] + (scale.range()[1] - scale.range()[0]);\n            }\n\n            ;\n            axisLabel.attr('text-anchor', 'middle').attr('y', 0).attr('x', w / 2);\n\n            if (showMaxMin) {\n              axisMaxMin = wrap.selectAll('g.nv-axisMaxMin').data(scale.domain());\n              axisMaxMin.enter().append('g').attr('class', function (d, i) {\n                return ['nv-axisMaxMin', 'nv-axisMaxMin-x', i == 0 ? 'nv-axisMin-x' : 'nv-axisMax-x'].join(' ');\n              }).append('text');\n              axisMaxMin.exit().remove();\n              axisMaxMin.attr('transform', function (d, i) {\n                return 'translate(' + nv.utils.NaNtoZero(scale(d)) + ',0)';\n              }).select('text').attr('dy', '-0.5em').attr('y', -axis.tickPadding()).attr('text-anchor', 'middle').text(function (d, i) {\n                var formatter = tickFormatMaxMin || fmt;\n                var v = formatter(d);\n                return ('' + v).match('NaN') ? '' : v;\n              });\n              axisMaxMin.watchTransition(renderWatch, 'min-max top').attr('transform', function (d, i) {\n                return 'translate(' + nv.utils.NaNtoZero(scale.range()[i]) + ',0)';\n              });\n            }\n\n            break;\n\n          case 'bottom':\n            xLabelMargin = axisLabelDistance + 36;\n            var maxTextWidth = 30;\n            var textHeight = 0;\n            var xTicks = g.selectAll('g').select(\"text\");\n            var rotateLabelsRule = '';\n\n            if (rotateLabels % 360) {\n              //Reset transform on ticks so textHeight can be calculated correctly\n              xTicks.attr('transform', ''); //Calculate the longest xTick width\n\n              xTicks.each(function (d, i) {\n                var box = this.getBoundingClientRect();\n                var width = box.width;\n                textHeight = box.height;\n                if (width > maxTextWidth) maxTextWidth = width;\n              });\n              rotateLabelsRule = 'rotate(' + rotateLabels + ' 0,' + (textHeight / 2 + axis.tickPadding()) + ')'; //Convert to radians before calculating sin. Add 30 to margin for healthy padding.\n\n              var sin = Math.abs(Math.sin(rotateLabels * Math.PI / 180));\n              xLabelMargin = (sin ? sin * maxTextWidth : maxTextWidth) + 30; //Rotate all xTicks\n\n              xTicks.attr('transform', rotateLabelsRule).style('text-anchor', rotateLabels % 360 > 0 ? 'start' : 'end');\n            } else {\n              if (staggerLabels) {\n                xTicks.attr('transform', function (d, i) {\n                  return 'translate(0,' + (i % 2 == 0 ? '0' : '12') + ')';\n                });\n              } else {\n                xTicks.attr('transform', \"translate(0,0)\");\n              }\n            }\n\n            axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n            w = 0;\n\n            if (scale.range().length === 1) {\n              w = isOrdinal ? scale.range()[0] * 2 + scale.rangeBand() : 0;\n            } else if (scale.range().length === 2) {\n              w = isOrdinal ? scale.range()[0] + scale.range()[1] + scale.rangeBand() : scale.range()[1];\n            } else if (scale.range().length > 2) {\n              w = scale.range()[scale.range().length - 1] + (scale.range()[1] - scale.range()[0]);\n            }\n\n            ;\n            axisLabel.attr('text-anchor', 'middle').attr('y', xLabelMargin).attr('x', w / 2);\n\n            if (showMaxMin) {\n              //if (showMaxMin && !isOrdinal) {\n              axisMaxMin = wrap.selectAll('g.nv-axisMaxMin') //.data(scale.domain())\n              .data([scale.domain()[0], scale.domain()[scale.domain().length - 1]]);\n              axisMaxMin.enter().append('g').attr('class', function (d, i) {\n                return ['nv-axisMaxMin', 'nv-axisMaxMin-x', i == 0 ? 'nv-axisMin-x' : 'nv-axisMax-x'].join(' ');\n              }).append('text');\n              axisMaxMin.exit().remove();\n              axisMaxMin.attr('transform', function (d, i) {\n                return 'translate(' + nv.utils.NaNtoZero(scale(d) + (isOrdinal ? scale.rangeBand() / 2 : 0)) + ',0)';\n              }).select('text').attr('dy', '.71em').attr('y', axis.tickPadding()).attr('transform', rotateLabelsRule).style('text-anchor', rotateLabels ? rotateLabels % 360 > 0 ? 'start' : 'end' : 'middle').text(function (d, i) {\n                var formatter = tickFormatMaxMin || fmt;\n                var v = formatter(d);\n                return ('' + v).match('NaN') ? '' : v;\n              });\n              axisMaxMin.watchTransition(renderWatch, 'min-max bottom').attr('transform', function (d, i) {\n                return 'translate(' + nv.utils.NaNtoZero(scale(d) + (isOrdinal ? scale.rangeBand() / 2 : 0)) + ',0)';\n              });\n            }\n\n            break;\n\n          case 'right':\n            axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n            axisLabel.style('text-anchor', rotateYLabel ? 'middle' : 'begin').attr('transform', rotateYLabel ? 'rotate(90)' : '').attr('y', rotateYLabel ? -Math.max(margin.right, width) + 12 - (axisLabelDistance || 0) : -10) //TODO: consider calculating this based on largest tick width... OR at least expose this on chart\n            .attr('x', rotateYLabel ? d3.max(scale.range()) / 2 : axis.tickPadding());\n\n            if (showMaxMin) {\n              axisMaxMin = wrap.selectAll('g.nv-axisMaxMin').data(scale.domain());\n              axisMaxMin.enter().append('g').attr('class', function (d, i) {\n                return ['nv-axisMaxMin', 'nv-axisMaxMin-y', i == 0 ? 'nv-axisMin-y' : 'nv-axisMax-y'].join(' ');\n              }).append('text').style('opacity', 0);\n              axisMaxMin.exit().remove();\n              axisMaxMin.attr('transform', function (d, i) {\n                return 'translate(0,' + nv.utils.NaNtoZero(scale(d)) + ')';\n              }).select('text').attr('dy', '.32em').attr('y', 0).attr('x', axis.tickPadding()).style('text-anchor', 'start').text(function (d, i) {\n                var formatter = tickFormatMaxMin || fmt;\n                var v = formatter(d);\n                return ('' + v).match('NaN') ? '' : v;\n              });\n              axisMaxMin.watchTransition(renderWatch, 'min-max right').attr('transform', function (d, i) {\n                return 'translate(0,' + nv.utils.NaNtoZero(scale.range()[i]) + ')';\n              }).select('text').style('opacity', 1);\n            }\n\n            break;\n\n          case 'left':\n            /*\n             //For dynamically placing the label. Can be used with dynamically-sized chart axis margins\n             var yTicks = g.selectAll('g').select(\"text\");\n             yTicks.each(function(d,i){\n             var labelPadding = this.getBoundingClientRect().width + axis.tickPadding() + 16;\n             if(labelPadding > width) width = labelPadding;\n             });\n             */\n            axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n            axisLabel.style('text-anchor', rotateYLabel ? 'middle' : 'end').attr('transform', rotateYLabel ? 'rotate(-90)' : '').attr('y', rotateYLabel ? -Math.max(margin.left, width) + 25 - (axisLabelDistance || 0) : -10).attr('x', rotateYLabel ? -d3.max(scale.range()) / 2 : -axis.tickPadding());\n\n            if (showMaxMin) {\n              axisMaxMin = wrap.selectAll('g.nv-axisMaxMin').data(scale.domain());\n              axisMaxMin.enter().append('g').attr('class', function (d, i) {\n                return ['nv-axisMaxMin', 'nv-axisMaxMin-y', i == 0 ? 'nv-axisMin-y' : 'nv-axisMax-y'].join(' ');\n              }).append('text').style('opacity', 0);\n              axisMaxMin.exit().remove();\n              axisMaxMin.attr('transform', function (d, i) {\n                return 'translate(0,' + nv.utils.NaNtoZero(scale0(d)) + ')';\n              }).select('text').attr('dy', '.32em').attr('y', 0).attr('x', -axis.tickPadding()).attr('text-anchor', 'end').text(function (d, i) {\n                var formatter = tickFormatMaxMin || fmt;\n                var v = formatter(d);\n                return ('' + v).match('NaN') ? '' : v;\n              });\n              axisMaxMin.watchTransition(renderWatch, 'min-max right').attr('transform', function (d, i) {\n                return 'translate(0,' + nv.utils.NaNtoZero(scale.range()[i]) + ')';\n              }).select('text').style('opacity', 1);\n            }\n\n            break;\n        }\n\n        axisLabel.text(function (d) {\n          return d;\n        });\n\n        if (showMaxMin && (axis.orient() === 'left' || axis.orient() === 'right')) {\n          //check if max and min overlap other values, if so, hide the values that overlap\n          g.selectAll('g') // the g's wrapping each tick\n          .each(function (d, i) {\n            d3.select(this).select('text').attr('opacity', 1);\n\n            if (scale(d) < scale.range()[1] + 10 || scale(d) > scale.range()[0] - 10) {\n              // 10 is assuming text height is 16... if d is 0, leave it!\n              if (d > 1e-10 || d < -1e-10) // accounts for minor floating point errors... though could be problematic if the scale is EXTREMELY SMALL\n                d3.select(this).attr('opacity', 0);\n              d3.select(this).select('text').attr('opacity', 0); // Don't remove the ZERO line!!\n            }\n          }); //if Max and Min = 0 only show min, Issue #281\n\n          if (scale.domain()[0] == scale.domain()[1] && scale.domain()[0] == 0) {\n            wrap.selectAll('g.nv-axisMaxMin').style('opacity', function (d, i) {\n              return !i ? 1 : 0;\n            });\n          }\n        }\n\n        if (showMaxMin && (axis.orient() === 'top' || axis.orient() === 'bottom')) {\n          var maxMinRange = [];\n          wrap.selectAll('g.nv-axisMaxMin').each(function (d, i) {\n            try {\n              if (i) // i== 1, max position\n                maxMinRange.push(scale(d) - this.getBoundingClientRect().width - 4); //assuming the max and min labels are as wide as the next tick (with an extra 4 pixels just in case)\n              else // i==0, min position\n                maxMinRange.push(scale(d) + this.getBoundingClientRect().width + 4);\n            } catch (err) {\n              if (i) // i== 1, max position\n                maxMinRange.push(scale(d) - 4); //assuming the max and min labels are as wide as the next tick (with an extra 4 pixels just in case)\n              else // i==0, min position\n                maxMinRange.push(scale(d) + 4);\n            }\n          }); // the g's wrapping each tick\n\n          g.selectAll('g').each(function (d, i) {\n            if (scale(d) < maxMinRange[0] || scale(d) > maxMinRange[1]) {\n              if (d > 1e-10 || d < -1e-10) // accounts for minor floating point errors... though could be problematic if the scale is EXTREMELY SMALL\n                d3.select(this).remove();else d3.select(this).select('text').remove(); // Don't remove the ZERO line!!\n            }\n          });\n        } //Highlight zero tick line\n\n\n        g.selectAll('.tick').filter(function (d) {\n          /*\n          The filter needs to return only ticks at or near zero.\n          Numbers like 0.00001 need to count as zero as well,\n          and the arithmetic trick below solves that.\n          */\n          return !parseFloat(Math.round(d * 100000) / 1000000) && d !== undefined;\n        }).classed('zero', true); //store old scales for use in transitions on update\n\n        scale0 = scale.copy();\n      });\n      renderWatch.renderEnd('axis immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.axis = axis;\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      axisLabelDistance: {\n        get: function get() {\n          return axisLabelDistance;\n        },\n        set: function set(_) {\n          axisLabelDistance = _;\n        }\n      },\n      staggerLabels: {\n        get: function get() {\n          return staggerLabels;\n        },\n        set: function set(_) {\n          staggerLabels = _;\n        }\n      },\n      rotateLabels: {\n        get: function get() {\n          return rotateLabels;\n        },\n        set: function set(_) {\n          rotateLabels = _;\n        }\n      },\n      rotateYLabel: {\n        get: function get() {\n          return rotateYLabel;\n        },\n        set: function set(_) {\n          rotateYLabel = _;\n        }\n      },\n      showMaxMin: {\n        get: function get() {\n          return showMaxMin;\n        },\n        set: function set(_) {\n          showMaxMin = _;\n        }\n      },\n      axisLabel: {\n        get: function get() {\n          return axisLabelText;\n        },\n        set: function set(_) {\n          axisLabelText = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      ticks: {\n        get: function get() {\n          return ticks;\n        },\n        set: function set(_) {\n          ticks = _;\n        }\n      },\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      fontSize: {\n        get: function get() {\n          return fontSize;\n        },\n        set: function set(_) {\n          fontSize = _;\n        }\n      },\n      tickFormatMaxMin: {\n        get: function get() {\n          return tickFormatMaxMin;\n        },\n        set: function set(_) {\n          tickFormatMaxMin = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      scale: {\n        get: function get() {\n          return scale;\n        },\n        set: function set(_) {\n          scale = _;\n          axis.scale(scale);\n          isOrdinal = typeof scale.rangeBands === 'function';\n          nv.utils.inheritOptionsD3(chart, scale, ['domain', 'range', 'rangeBand', 'rangeBands']);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    nv.utils.inheritOptionsD3(chart, axis, ['orient', 'tickValues', 'tickSubdivide', 'tickSize', 'tickPadding', 'tickFormat']);\n    nv.utils.inheritOptionsD3(chart, scale, ['domain', 'range', 'rangeBand', 'rangeBands']);\n    return chart;\n  };\n\n  nv.models.boxPlot = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        id = Math.floor(Math.random() * 10000),\n        // Create semi-unique ID in case user doesn't select one\n    xScale = d3.scale.ordinal(),\n        yScale = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.label;\n    },\n        // Default data model selectors.\n    getQ1 = function getQ1(d) {\n      return d.values.Q1;\n    },\n        getQ2 = function getQ2(d) {\n      return d.values.Q2;\n    },\n        getQ3 = function getQ3(d) {\n      return d.values.Q3;\n    },\n        getWl = function getWl(d) {\n      return d.values.whisker_low;\n    },\n        getWh = function getWh(d) {\n      return d.values.whisker_high;\n    },\n        getColor = function getColor(d) {\n      return d.color;\n    },\n        getOlItems = function getOlItems(d) {\n      return d.values.outliers;\n    },\n        getOlValue = function getOlValue(d, i, j) {\n      return d;\n    },\n        getOlLabel = function getOlLabel(d, i, j) {\n      return d;\n    },\n        getOlColor = function getOlColor(d, i, j) {\n      return undefined;\n    },\n        color = nv.utils.defaultColor(),\n        container = null,\n        xDomain,\n        xRange,\n        yDomain,\n        yRange,\n        dispatch = d3.dispatch('elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'),\n        duration = 250,\n        maxBoxWidth = null; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var xScale0, yScale0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container); // Setup Scales\n\n        xScale.domain(xDomain || data.map(function (d, i) {\n          return getX(d, i);\n        })).rangeBands(xRange || [0, availableWidth], 0.1); // if we know yDomain, no need to calculate\n\n        var yData = [];\n\n        if (!yDomain) {\n          // (y-range is based on quartiles, whiskers and outliers)\n          var values = [],\n              yMin,\n              yMax;\n          data.forEach(function (d, i) {\n            var q1 = getQ1(d),\n                q3 = getQ3(d),\n                wl = getWl(d),\n                wh = getWh(d);\n            var olItems = getOlItems(d);\n\n            if (olItems) {\n              olItems.forEach(function (e, i) {\n                values.push(getOlValue(e, i, undefined));\n              });\n            }\n\n            if (wl) {\n              values.push(wl);\n            }\n\n            if (q1) {\n              values.push(q1);\n            }\n\n            if (q3) {\n              values.push(q3);\n            }\n\n            if (wh) {\n              values.push(wh);\n            }\n          });\n          yMin = d3.min(values);\n          yMax = d3.max(values);\n          yData = [yMin, yMax];\n        }\n\n        yScale.domain(yDomain || yData);\n        yScale.range(yRange || [availableHeight, 0]); //store old scales if they exist\n\n        xScale0 = xScale0 || xScale;\n        yScale0 = yScale0 || yScale.copy().range([yScale(0), yScale(0)]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var boxplots = wrap.selectAll('.nv-boxplot').data(function (d) {\n          return d;\n        });\n        var boxEnter = boxplots.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        boxplots.attr('class', 'nv-boxplot').attr('transform', function (d, i, j) {\n          return 'translate(' + (xScale(getX(d, i)) + xScale.rangeBand() * 0.05) + ', 0)';\n        }).classed('hover', function (d) {\n          return d.hover;\n        });\n        boxplots.watchTransition(renderWatch, 'nv-boxplot: boxplots').style('stroke-opacity', 1).style('fill-opacity', 0.75).delay(function (d, i) {\n          return i * duration / data.length;\n        }).attr('transform', function (d, i) {\n          return 'translate(' + (xScale(getX(d, i)) + xScale.rangeBand() * 0.05) + ', 0)';\n        });\n        boxplots.exit().remove(); // ----- add the SVG elements for each boxPlot -----\n        // conditionally append whisker lines\n\n        boxEnter.each(function (d, i) {\n          var box = d3.select(this);\n          [getWl, getWh].forEach(function (f) {\n            if (f(d) !== undefined && f(d) !== null) {\n              var key = f === getWl ? 'low' : 'high';\n              box.append('line').style('stroke', getColor(d) || color(d, i)).attr('class', 'nv-boxplot-whisker nv-boxplot-' + key);\n              box.append('line').style('stroke', getColor(d) || color(d, i)).attr('class', 'nv-boxplot-tick nv-boxplot-' + key);\n            }\n          });\n        });\n\n        var box_width = function box_width() {\n          return maxBoxWidth === null ? xScale.rangeBand() * 0.9 : Math.min(75, xScale.rangeBand() * 0.9);\n        };\n\n        var box_left = function box_left() {\n          return xScale.rangeBand() * 0.45 - box_width() / 2;\n        };\n\n        var box_right = function box_right() {\n          return xScale.rangeBand() * 0.45 + box_width() / 2;\n        }; // update whisker lines and ticks\n\n\n        [getWl, getWh].forEach(function (f) {\n          var key = f === getWl ? 'low' : 'high';\n          var endpoint = f === getWl ? getQ1 : getQ3;\n          boxplots.select('line.nv-boxplot-whisker.nv-boxplot-' + key).watchTransition(renderWatch, 'nv-boxplot: boxplots').attr('x1', xScale.rangeBand() * 0.45).attr('y1', function (d, i) {\n            return yScale(f(d));\n          }).attr('x2', xScale.rangeBand() * 0.45).attr('y2', function (d, i) {\n            return yScale(endpoint(d));\n          });\n          boxplots.select('line.nv-boxplot-tick.nv-boxplot-' + key).watchTransition(renderWatch, 'nv-boxplot: boxplots').attr('x1', box_left).attr('y1', function (d, i) {\n            return yScale(f(d));\n          }).attr('x2', box_right).attr('y2', function (d, i) {\n            return yScale(f(d));\n          });\n        });\n        [getWl, getWh].forEach(function (f) {\n          var key = f === getWl ? 'low' : 'high';\n          boxEnter.selectAll('.nv-boxplot-' + key).on('mouseover', function (d, i, j) {\n            d3.select(this).classed('hover', true);\n            dispatch.elementMouseover({\n              series: {\n                key: f(d),\n                color: getColor(d) || color(d, j)\n              },\n              e: d3.event\n            });\n          }).on('mouseout', function (d, i, j) {\n            d3.select(this).classed('hover', false);\n            dispatch.elementMouseout({\n              series: {\n                key: f(d),\n                color: getColor(d) || color(d, j)\n              },\n              e: d3.event\n            });\n          }).on('mousemove', function (d, i) {\n            dispatch.elementMousemove({\n              e: d3.event\n            });\n          });\n        }); // boxes\n\n        boxEnter.append('rect').attr('class', 'nv-boxplot-box') // tooltip events\n        .on('mouseover', function (d, i) {\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            key: getX(d),\n            value: getX(d),\n            series: [{\n              key: 'Q3',\n              value: getQ3(d),\n              color: getColor(d) || color(d, i)\n            }, {\n              key: 'Q2',\n              value: getQ2(d),\n              color: getColor(d) || color(d, i)\n            }, {\n              key: 'Q1',\n              value: getQ1(d),\n              color: getColor(d) || color(d, i)\n            }],\n            data: d,\n            index: i,\n            e: d3.event\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            key: getX(d),\n            value: getX(d),\n            series: [{\n              key: 'Q3',\n              value: getQ3(d),\n              color: getColor(d) || color(d, i)\n            }, {\n              key: 'Q2',\n              value: getQ2(d),\n              color: getColor(d) || color(d, i)\n            }, {\n              key: 'Q1',\n              value: getQ1(d),\n              color: getColor(d) || color(d, i)\n            }],\n            data: d,\n            index: i,\n            e: d3.event\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            e: d3.event\n          });\n        }); // box transitions\n\n        boxplots.select('rect.nv-boxplot-box').watchTransition(renderWatch, 'nv-boxplot: boxes').attr('y', function (d, i) {\n          return yScale(getQ3(d));\n        }).attr('width', box_width).attr('x', box_left).attr('height', function (d, i) {\n          return Math.abs(yScale(getQ3(d)) - yScale(getQ1(d))) || 1;\n        }).style('fill', function (d, i) {\n          return getColor(d) || color(d, i);\n        }).style('stroke', function (d, i) {\n          return getColor(d) || color(d, i);\n        }); // median line\n\n        boxEnter.append('line').attr('class', 'nv-boxplot-median');\n        boxplots.select('line.nv-boxplot-median').watchTransition(renderWatch, 'nv-boxplot: boxplots line').attr('x1', box_left).attr('y1', function (d, i) {\n          return yScale(getQ2(d));\n        }).attr('x2', box_right).attr('y2', function (d, i) {\n          return yScale(getQ2(d));\n        }); // outliers\n\n        var outliers = boxplots.selectAll('.nv-boxplot-outlier').data(function (d) {\n          return getOlItems(d) || [];\n        });\n        outliers.enter().append('circle').style('fill', function (d, i, j) {\n          return getOlColor(d, i, j) || color(d, j);\n        }).style('stroke', function (d, i, j) {\n          return getOlColor(d, i, j) || color(d, j);\n        }).style('z-index', 9000).on('mouseover', function (d, i, j) {\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            series: {\n              key: getOlLabel(d, i, j),\n              color: getOlColor(d, i, j) || color(d, j)\n            },\n            e: d3.event\n          });\n        }).on('mouseout', function (d, i, j) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            series: {\n              key: getOlLabel(d, i, j),\n              color: getOlColor(d, i, j) || color(d, j)\n            },\n            e: d3.event\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            e: d3.event\n          });\n        });\n        outliers.attr('class', 'nv-boxplot-outlier');\n        outliers.watchTransition(renderWatch, 'nv-boxplot: nv-boxplot-outlier').attr('cx', xScale.rangeBand() * 0.45).attr('cy', function (d, i, j) {\n          return yScale(getOlValue(d, i, j));\n        }).attr('r', '3');\n        outliers.exit().remove(); //store old scales for use in transitions on update\n\n        xScale0 = xScale.copy();\n        yScale0 = yScale.copy();\n      });\n      renderWatch.renderEnd('nv-boxplot immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      maxBoxWidth: {\n        get: function get() {\n          return maxBoxWidth;\n        },\n        set: function set(_) {\n          maxBoxWidth = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      q1: {\n        get: function get() {\n          return getQ1;\n        },\n        set: function set(_) {\n          getQ1 = _;\n        }\n      },\n      q2: {\n        get: function get() {\n          return getQ2;\n        },\n        set: function set(_) {\n          getQ2 = _;\n        }\n      },\n      q3: {\n        get: function get() {\n          return getQ3;\n        },\n        set: function set(_) {\n          getQ3 = _;\n        }\n      },\n      wl: {\n        get: function get() {\n          return getWl;\n        },\n        set: function set(_) {\n          getWl = _;\n        }\n      },\n      wh: {\n        get: function get() {\n          return getWh;\n        },\n        set: function set(_) {\n          getWh = _;\n        }\n      },\n      itemColor: {\n        get: function get() {\n          return getColor;\n        },\n        set: function set(_) {\n          getColor = _;\n        }\n      },\n      outliers: {\n        get: function get() {\n          return getOlItems;\n        },\n        set: function set(_) {\n          getOlItems = _;\n        }\n      },\n      outlierValue: {\n        get: function get() {\n          return getOlValue;\n        },\n        set: function set(_) {\n          getOlValue = _;\n        }\n      },\n      outlierLabel: {\n        get: function get() {\n          return getOlLabel;\n        },\n        set: function set(_) {\n          getOlLabel = _;\n        }\n      },\n      outlierColor: {\n        get: function get() {\n          return getOlColor;\n        },\n        set: function set(_) {\n          getOlColor = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return xScale;\n        },\n        set: function set(_) {\n          xScale = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return yScale;\n        },\n        set: function set(_) {\n          yScale = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      // rectClass: {get: function(){return rectClass;}, set: function(_){rectClass=_;}},\n      y: {\n        get: function get() {\n          console.warn('BoxPlot \\'y\\' chart option is deprecated. Please use model overrides instead.');\n          return {};\n        },\n        set: function set(_) {\n          console.warn('BoxPlot \\'y\\' chart option is deprecated. Please use model overrides instead.');\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.boxPlotChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var boxplot = nv.models.boxPlot(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis();\n    var margin = {\n      top: 15,\n      right: 10,\n      bottom: 50,\n      left: 60\n    },\n        width = null,\n        height = null,\n        color = nv.utils.getColor(),\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        staggerLabels = false,\n        tooltip = nv.models.tooltip(),\n        x,\n        y,\n        noData = 'No Data Available.',\n        dispatch = d3.dispatch('beforeUpdate', 'renderEnd'),\n        duration = 250;\n    xAxis.orient('bottom').showMaxMin(false).tickFormat(function (d) {\n      return d;\n    });\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left').tickFormat(d3.format(',.1f'));\n    tooltip.duration(0); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(boxplot);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = (width || parseInt(container.style('width')) || 960) - margin.left - margin.right;\n        var availableHeight = (height || parseInt(container.style('height')) || 400) - margin.top - margin.bottom;\n\n        chart.update = function () {\n          dispatch.beforeUpdate();\n          container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this; // TODO still need to find a way to validate quartile data presence using boxPlot callbacks.\n        // Display No Data message if there's nothing to show. (quartiles required at minimum).\n\n        if (!data || !data.length) {\n          var noDataText = container.selectAll('.nv-noData').data([noData]);\n          noDataText.enter().append('text').attr('class', 'nvd3 nv-noData').attr('dy', '-.7em').style('text-anchor', 'middle');\n          noDataText.attr('x', margin.left + availableWidth / 2).attr('y', margin.top + availableHeight / 2).text(function (d) {\n            return d;\n          });\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = boxplot.xScale();\n        y = boxplot.yScale().clamp(true); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-boxPlotWithAxes').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-boxPlotWithAxes').append('g');\n        var defsEnter = gEnter.append('defs');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis').append('g').attr('class', 'nv-zeroLine').append('line');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select('.nv-y.nv-axis').attr('transform', 'translate(' + availableWidth + ',0)');\n        } // Main Chart Component(s)\n\n\n        boxplot.width(availableWidth).height(availableHeight);\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.transition().call(boxplot);\n        defsEnter.append('clipPath').attr('id', 'nv-x-label-clip-' + boxplot.id()).append('rect');\n        g.select('#nv-x-label-clip-' + boxplot.id() + ' rect').attr('width', x.rangeBand() * (staggerLabels ? 2 : 1)).attr('height', 16).attr('x', -x.rangeBand() / (staggerLabels ? 1 : 2)); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x).ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          g.select('.nv-x.nv-axis').call(xAxis);\n          var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n\n          if (staggerLabels) {\n            xTicks.selectAll('text').attr('transform', function (d, i, j) {\n              return 'translate(0,' + (j % 2 === 0 ? '5' : '17') + ')';\n            });\n          }\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y).ticks(Math.floor(availableHeight / 36)) // can't use nv.utils.calcTicksY with Object data\n          .tickSize(-availableWidth, 0);\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } // Zero line\n\n\n        g.select('.nv-zeroLine line').attr('x1', 0).attr('x2', availableWidth).attr('y1', y(0)).attr('y2', y(0)); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n      });\n      renderWatch.renderEnd('nv-boxplot chart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    boxplot.dispatch.on('elementMouseover.tooltip', function (evt) {\n      tooltip.data(evt).hidden(false);\n    });\n    boxplot.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.data(evt).hidden(true);\n    });\n    boxplot.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.boxplot = boxplot;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      staggerLabels: {\n        get: function get() {\n          return staggerLabels;\n        },\n        set: function set(_) {\n          staggerLabels = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      tooltipContent: {\n        get: function get() {\n          return tooltip;\n        },\n        set: function set(_) {\n          tooltip = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          boxplot.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          boxplot.color(color);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, boxplot);\n    nv.utils.initOptions(chart);\n    return chart;\n  }; // Chart design based on the recommendations of Stephen Few. Implementation\n  // based on the work of Clint Ivy, Jamie Love, and Jason Davies.\n  // http://projects.instantcognition.com/protovis/bulletchart/\n\n\n  nv.models.bullet = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        orient = 'left' // TODO top & bottom\n    ,\n        reverse = false,\n        ranges = function ranges(d) {\n      return d.ranges;\n    },\n        markers = function markers(d) {\n      return d.markers ? d.markers : [];\n    },\n        markerLines = function markerLines(d) {\n      return d.markerLines ? d.markerLines : [0];\n    },\n        measures = function measures(d) {\n      return d.measures;\n    },\n        rangeLabels = function rangeLabels(d) {\n      return d.rangeLabels ? d.rangeLabels : [];\n    },\n        markerLabels = function markerLabels(d) {\n      return d.markerLabels ? d.markerLabels : [];\n    },\n        markerLineLabels = function markerLineLabels(d) {\n      return d.markerLineLabels ? d.markerLineLabels : [];\n    },\n        measureLabels = function measureLabels(d) {\n      return d.measureLabels ? d.measureLabels : [];\n    },\n        forceX = [0] // List of numbers to Force into the X scale (ie. 0, or a max / min, etc.)\n    ,\n        width = 380,\n        height = 30,\n        container = null,\n        tickFormat = null,\n        color = nv.utils.getColor(['#1f77b4']),\n        dispatch = d3.dispatch('elementMouseover', 'elementMouseout', 'elementMousemove'),\n        defaultRangeLabels = [\"Maximum\", \"Mean\", \"Minimum\"],\n        legacyRangeClassNames = [\"Max\", \"Avg\", \"Min\"],\n        duration = 1000;\n\n    function sortLabels(labels, values) {\n      var lz = labels.slice();\n      labels.sort(function (a, b) {\n        var iA = lz.indexOf(a);\n        var iB = lz.indexOf(b);\n        return d3.descending(values[iA], values[iB]);\n      });\n    }\n\n    ;\n\n    function chart(selection) {\n      selection.each(function (d, i) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        var rangez = ranges.call(this, d, i).slice(),\n            markerz = markers.call(this, d, i).slice(),\n            markerLinez = markerLines.call(this, d, i).slice(),\n            measurez = measures.call(this, d, i).slice(),\n            rangeLabelz = rangeLabels.call(this, d, i).slice(),\n            markerLabelz = markerLabels.call(this, d, i).slice(),\n            markerLineLabelz = markerLineLabels.call(this, d, i).slice(),\n            measureLabelz = measureLabels.call(this, d, i).slice(); // Sort labels according to their sorted values\n\n        sortLabels(rangeLabelz, rangez);\n        sortLabels(markerLabelz, markerz);\n        sortLabels(markerLineLabelz, markerLinez);\n        sortLabels(measureLabelz, measurez); // sort values descending\n\n        rangez.sort(d3.descending);\n        markerz.sort(d3.descending);\n        markerLinez.sort(d3.descending);\n        measurez.sort(d3.descending); // Setup Scales\n        // Compute the new x-scale.\n\n        var x1 = d3.scale.linear().domain(d3.extent(d3.merge([forceX, rangez]))).range(reverse ? [availableWidth, 0] : [0, availableWidth]); // Retrieve the old x-scale, if this is an update.\n\n        var x0 = this.__chart__ || d3.scale.linear().domain([0, Infinity]).range(x1.range()); // Stash the new scale.\n\n        this.__chart__ = x1;\n        var rangeMin = d3.min(rangez),\n            //rangez[2]\n        rangeMax = d3.max(rangez),\n            //rangez[0]\n        rangeAvg = rangez[1]; // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-bullet').data([d]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-bullet');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n\n        for (var i = 0, il = rangez.length; i < il; i++) {\n          var rangeClassNames = 'nv-range nv-range' + i;\n\n          if (i <= 2) {\n            rangeClassNames = rangeClassNames + ' nv-range' + legacyRangeClassNames[i];\n          }\n\n          gEnter.append('rect').attr('class', rangeClassNames);\n        }\n\n        gEnter.append('rect').attr('class', 'nv-measure');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        var w0 = function w0(d) {\n          return Math.abs(x0(d) - x0(0));\n        },\n            // TODO: could optimize by precalculating x0(0) and x1(0)\n        w1 = function w1(d) {\n          return Math.abs(x1(d) - x1(0));\n        };\n\n        var xp0 = function xp0(d) {\n          return d < 0 ? x0(d) : x0(0);\n        },\n            xp1 = function xp1(d) {\n          return d < 0 ? x1(d) : x1(0);\n        };\n\n        for (var i = 0, il = rangez.length; i < il; i++) {\n          var range = rangez[i];\n          g.select('rect.nv-range' + i).datum(range).attr('height', availableHeight).transition().duration(duration).attr('width', w1(range)).attr('x', xp1(range));\n        }\n\n        g.select('rect.nv-measure').style('fill', color).attr('height', availableHeight / 3).attr('y', availableHeight / 3).on('mouseover', function () {\n          dispatch.elementMouseover({\n            value: measurez[0],\n            label: measureLabelz[0] || 'Current',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function () {\n          dispatch.elementMousemove({\n            value: measurez[0],\n            label: measureLabelz[0] || 'Current',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function () {\n          dispatch.elementMouseout({\n            value: measurez[0],\n            label: measureLabelz[0] || 'Current',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).transition().duration(duration).attr('width', measurez < 0 ? x1(0) - x1(measurez[0]) : x1(measurez[0]) - x1(0)).attr('x', xp1(measurez));\n        var h3 = availableHeight / 6;\n        var markerData = markerz.map(function (marker, index) {\n          return {\n            value: marker,\n            label: markerLabelz[index]\n          };\n        });\n        gEnter.selectAll(\"path.nv-markerTriangle\").data(markerData).enter().append('path').attr('class', 'nv-markerTriangle').attr('d', 'M0,' + h3 + 'L' + h3 + ',' + -h3 + ' ' + -h3 + ',' + -h3 + 'Z').on('mouseover', function (d) {\n          dispatch.elementMouseover({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\"),\n            pos: [x1(d.value), availableHeight / 2]\n          });\n        }).on('mousemove', function (d) {\n          dispatch.elementMousemove({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          dispatch.elementMouseout({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        });\n        g.selectAll(\"path.nv-markerTriangle\").data(markerData).transition().duration(duration).attr('transform', function (d) {\n          return 'translate(' + x1(d.value) + ',' + availableHeight / 2 + ')';\n        });\n        var markerLinesData = markerLinez.map(function (marker, index) {\n          return {\n            value: marker,\n            label: markerLineLabelz[index]\n          };\n        });\n        gEnter.selectAll(\"line.nv-markerLine\").data(markerLinesData).enter().append('line').attr('cursor', '').attr('class', 'nv-markerLine').attr('x1', function (d) {\n          return x1(d.value);\n        }).attr('y1', '2').attr('x2', function (d) {\n          return x1(d.value);\n        }).attr('y2', availableHeight - 2).on('mouseover', function (d) {\n          dispatch.elementMouseover({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\"),\n            pos: [x1(d.value), availableHeight / 2]\n          });\n        }).on('mousemove', function (d) {\n          dispatch.elementMousemove({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          dispatch.elementMouseout({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        });\n        g.selectAll(\"line.nv-markerLine\").data(markerLinesData).transition().duration(duration).attr('x1', function (d) {\n          return x1(d.value);\n        }).attr('x2', function (d) {\n          return x1(d.value);\n        });\n        wrap.selectAll('.nv-range').on('mouseover', function (d, i) {\n          var label = rangeLabelz[i] || defaultRangeLabels[i];\n          dispatch.elementMouseover({\n            value: d,\n            label: label,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function () {\n          dispatch.elementMousemove({\n            value: measurez[0],\n            label: measureLabelz[0] || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          var label = rangeLabelz[i] || defaultRangeLabels[i];\n          dispatch.elementMouseout({\n            value: d,\n            label: label,\n            color: d3.select(this).style(\"fill\")\n          });\n        });\n      });\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      ranges: {\n        get: function get() {\n          return ranges;\n        },\n        set: function set(_) {\n          ranges = _;\n        }\n      },\n      // ranges (bad, satisfactory, good)\n      markers: {\n        get: function get() {\n          return markers;\n        },\n        set: function set(_) {\n          markers = _;\n        }\n      },\n      // markers (previous, goal)\n      measures: {\n        get: function get() {\n          return measures;\n        },\n        set: function set(_) {\n          measures = _;\n        }\n      },\n      // measures (actual, forecast)\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      tickFormat: {\n        get: function get() {\n          return tickFormat;\n        },\n        set: function set(_) {\n          tickFormat = _;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      orient: {\n        get: function get() {\n          return orient;\n        },\n        set: function set(_) {\n          // left, right, top, bottom\n          orient = _;\n          reverse = orient == 'right' || orient == 'bottom';\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  }; // Chart design based on the recommendations of Stephen Few. Implementation\n  // based on the work of Clint Ivy, Jamie Love, and Jason Davies.\n  // http://projects.instantcognition.com/protovis/bulletchart/\n\n\n  nv.models.bulletChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var bullet = nv.models.bullet();\n    var tooltip = nv.models.tooltip();\n\n    var orient = 'left' // TODO top & bottom\n    ,\n        reverse = false,\n        margin = {\n      top: 5,\n      right: 40,\n      bottom: 20,\n      left: 120\n    },\n        ranges = function ranges(d) {\n      return d.ranges;\n    },\n        markers = function markers(d) {\n      return d.markers ? d.markers : [];\n    },\n        measures = function measures(d) {\n      return d.measures;\n    },\n        width = null,\n        height = 55,\n        tickFormat = null,\n        ticks = null,\n        noData = null,\n        dispatch = d3.dispatch();\n\n    tooltip.duration(0).headerEnabled(false);\n\n    function chart(selection) {\n      selection.each(function (d, i) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = height - margin.top - margin.bottom,\n            that = this;\n\n        chart.update = function () {\n          chart(selection);\n        };\n\n        chart.container = this; // Display No Data message if there's nothing to show.\n\n        if (!d || !ranges.call(this, d, i)) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        var rangez = ranges.call(this, d, i).slice().sort(d3.descending),\n            markerz = markers.call(this, d, i).slice().sort(d3.descending),\n            measurez = measures.call(this, d, i).slice().sort(d3.descending); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-bulletChart').data([d]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-bulletChart');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-bulletWrap');\n        gEnter.append('g').attr('class', 'nv-titles');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Compute the new x-scale.\n\n        var x1 = d3.scale.linear().domain([0, Math.max(rangez[0], markerz[0] || 0, measurez[0])]) // TODO: need to allow forceX and forceY, and xDomain, yDomain\n        .range(reverse ? [availableWidth, 0] : [0, availableWidth]); // Retrieve the old x-scale, if this is an update.\n\n        var x0 = this.__chart__ || d3.scale.linear().domain([0, Infinity]).range(x1.range()); // Stash the new scale.\n\n        this.__chart__ = x1;\n\n        var w0 = function w0(d) {\n          return Math.abs(x0(d) - x0(0));\n        },\n            // TODO: could optimize by precalculating x0(0) and x1(0)\n        w1 = function w1(d) {\n          return Math.abs(x1(d) - x1(0));\n        };\n\n        var title = gEnter.select('.nv-titles').append('g').attr('text-anchor', 'end').attr('transform', 'translate(-6,' + (height - margin.top - margin.bottom) / 2 + ')');\n        title.append('text').attr('class', 'nv-title').text(function (d) {\n          return d.title;\n        });\n        title.append('text').attr('class', 'nv-subtitle').attr('dy', '1em').text(function (d) {\n          return d.subtitle;\n        });\n        bullet.width(availableWidth).height(availableHeight);\n        var bulletWrap = g.select('.nv-bulletWrap');\n        d3.transition(bulletWrap).call(bullet); // Compute the tick format.\n\n        var format = tickFormat || x1.tickFormat(availableWidth / 100); // Update the tick groups.\n\n        var tick = g.selectAll('g.nv-tick').data(x1.ticks(ticks ? ticks : availableWidth / 50), function (d) {\n          return this.textContent || format(d);\n        }); // Initialize the ticks with the old scale, x0.\n\n        var tickEnter = tick.enter().append('g').attr('class', 'nv-tick').attr('transform', function (d) {\n          return 'translate(' + x0(d) + ',0)';\n        }).style('opacity', 1e-6);\n        tickEnter.append('line').attr('y1', availableHeight).attr('y2', availableHeight * 7 / 6);\n        tickEnter.append('text').attr('text-anchor', 'middle').attr('dy', '1em').attr('y', availableHeight * 7 / 6).text(format); // Transition the updating ticks to the new scale, x1.\n\n        var tickUpdate = d3.transition(tick).transition().duration(bullet.duration()).attr('transform', function (d) {\n          return 'translate(' + x1(d) + ',0)';\n        }).style('opacity', 1);\n        tickUpdate.select('line').attr('y1', availableHeight).attr('y2', availableHeight * 7 / 6);\n        tickUpdate.select('text').attr('y', availableHeight * 7 / 6); // Transition the exiting ticks to the new scale, x1.\n\n        d3.transition(tick.exit()).transition().duration(bullet.duration()).attr('transform', function (d) {\n          return 'translate(' + x1(d) + ',0)';\n        }).style('opacity', 1e-6).remove();\n      });\n      d3.timer.flush();\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    bullet.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt['series'] = {\n        key: evt.label,\n        value: evt.value,\n        color: evt.color\n      };\n      tooltip.data(evt).hidden(false);\n    });\n    bullet.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    bullet.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.bullet = bullet;\n    chart.dispatch = dispatch;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      ranges: {\n        get: function get() {\n          return ranges;\n        },\n        set: function set(_) {\n          ranges = _;\n        }\n      },\n      // ranges (bad, satisfactory, good)\n      markers: {\n        get: function get() {\n          return markers;\n        },\n        set: function set(_) {\n          markers = _;\n        }\n      },\n      // markers (previous, goal)\n      measures: {\n        get: function get() {\n          return measures;\n        },\n        set: function set(_) {\n          measures = _;\n        }\n      },\n      // measures (actual, forecast)\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      tickFormat: {\n        get: function get() {\n          return tickFormat;\n        },\n        set: function set(_) {\n          tickFormat = _;\n        }\n      },\n      ticks: {\n        get: function get() {\n          return ticks;\n        },\n        set: function set(_) {\n          ticks = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      orient: {\n        get: function get() {\n          return orient;\n        },\n        set: function set(_) {\n          // left, right, top, bottom\n          orient = _;\n          reverse = orient == 'right' || orient == 'bottom';\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, bullet);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.candlestickBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = null,\n        height = null,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        getOpen = function getOpen(d) {\n      return d.open;\n    },\n        getClose = function getClose(d) {\n      return d.close;\n    },\n        getHigh = function getHigh(d) {\n      return d.high;\n    },\n        getLow = function getLow(d) {\n      return d.low;\n    },\n        forceX = [],\n        forceY = [],\n        padData = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n    ,\n        clipEdge = true,\n        color = nv.utils.defaultColor(),\n        interactive = false,\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd', 'chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    function chart(selection) {\n      selection.each(function (data) {\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); // Width of the candlestick bars.\n\n        var barWidth = availableWidth / data[0].values.length * .45; // Setup Scales\n\n        x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX)));\n        if (padData) x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5) / data[0].values.length]);else x.range(xRange || [5 + barWidth / 2, availableWidth - barWidth / 2 - 5]);\n        y.domain(yDomain || [d3.min(data[0].values.map(getLow).concat(forceY)), d3.max(data[0].values.map(getHigh).concat(forceY))]).range(yRange || [availableHeight, 0]); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01]) : y.domain([-1, 1]); // Setup containers and skeleton of chart\n\n        var wrap = d3.select(this).selectAll('g.nv-wrap.nv-candlestickBar').data([data[0].values]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-candlestickBar');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-ticks');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        defsEnter.append('clipPath').attr('id', 'nv-chart-clip-path-' + id).append('rect');\n        wrap.select('#nv-chart-clip-path-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n        var ticks = wrap.select('.nv-ticks').selectAll('.nv-tick').data(function (d) {\n          return d;\n        });\n        ticks.exit().remove();\n        var tickGroups = ticks.enter().append('g'); // The colors are currently controlled by CSS.\n\n        ticks.attr('class', function (d, i, j) {\n          return (getOpen(d, i) > getClose(d, i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i;\n        });\n        var lines = tickGroups.append('line').attr('class', 'nv-candlestick-lines').attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',0)';\n        }).attr('x1', 0).attr('y1', function (d, i) {\n          return y(getHigh(d, i));\n        }).attr('x2', 0).attr('y2', function (d, i) {\n          return y(getLow(d, i));\n        });\n        var rects = tickGroups.append('rect').attr('class', 'nv-candlestick-rects nv-bars').attr('transform', function (d, i) {\n          return 'translate(' + (x(getX(d, i)) - barWidth / 2) + ',' + (y(getY(d, i)) - (getOpen(d, i) > getClose(d, i) ? y(getClose(d, i)) - y(getOpen(d, i)) : 0)) + ')';\n        }).attr('x', 0).attr('y', 0).attr('width', barWidth).attr('height', function (d, i) {\n          var open = getOpen(d, i);\n          var close = getClose(d, i);\n          return open > close ? y(close) - y(open) : y(open) - y(close);\n        });\n        ticks.select('.nv-candlestick-lines').transition().attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',0)';\n        }).attr('x1', 0).attr('y1', function (d, i) {\n          return y(getHigh(d, i));\n        }).attr('x2', 0).attr('y2', function (d, i) {\n          return y(getLow(d, i));\n        });\n        ticks.select('.nv-candlestick-rects').transition().attr('transform', function (d, i) {\n          return 'translate(' + (x(getX(d, i)) - barWidth / 2) + ',' + (y(getY(d, i)) - (getOpen(d, i) > getClose(d, i) ? y(getClose(d, i)) - y(getOpen(d, i)) : 0)) + ')';\n        }).attr('x', 0).attr('y', 0).attr('width', barWidth).attr('height', function (d, i) {\n          var open = getOpen(d, i);\n          var close = getClose(d, i);\n          return open > close ? y(close) - y(open) : y(open) - y(close);\n        });\n      });\n      return chart;\n    } //Create methods to allow outside functions to highlight a specific bar.\n\n\n    chart.highlightPoint = function (pointIndex, isHoverOver) {\n      chart.clearHighlights();\n      container.select(\".nv-candlestickBar .nv-tick-0-\" + pointIndex).classed(\"hover\", isHoverOver);\n    };\n\n    chart.clearHighlights = function () {\n      container.select(\".nv-candlestickBar .nv-tick.hover\").classed(\"hover\", false);\n    }; //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      padData: {\n        get: function get() {\n          return padData;\n        },\n        set: function set(_) {\n          padData = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      interactive: {\n        get: function get() {\n          return interactive;\n        },\n        set: function set(_) {\n          interactive = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      open: {\n        get: function get() {\n          return getOpen();\n        },\n        set: function set(_) {\n          getOpen = _;\n        }\n      },\n      close: {\n        get: function get() {\n          return getClose();\n        },\n        set: function set(_) {\n          getClose = _;\n        }\n      },\n      high: {\n        get: function get() {\n          return getHigh;\n        },\n        set: function set(_) {\n          getHigh = _;\n        }\n      },\n      low: {\n        get: function get() {\n          return getLow;\n        },\n        set: function set(_) {\n          getLow = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top != undefined ? _.top : margin.top;\n          margin.right = _.right != undefined ? _.right : margin.right;\n          margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n          margin.left = _.left != undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.cumulativeLineChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var lines = nv.models.line(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        controls = nv.models.legend(),\n        interactiveLayer = nv.interactiveGuideline(),\n        tooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 30,\n      right: 30,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = null,\n        showLegend = true,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        showControls = true,\n        useInteractiveGuideline = false,\n        rescaleY = true,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        id = lines.id(),\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        average = function average(d) {\n      return d.average;\n    },\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        transitionDuration = 250,\n        duration = 250,\n        noErrorCheck = false //if set to TRUE, will bypass an error check in the indexify function.\n    ;\n\n    state.index = 0;\n    state.rescaleY = rescaleY;\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n    tooltip.valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    controls.updateState(false); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var dx = d3.scale.linear(),\n        index = {\n      i: 0,\n      x: 0\n    },\n        renderWatch = nv.utils.renderWatch(dispatch, duration),\n        currentYDomain;\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          }),\n          index: index.i,\n          rescaleY: rescaleY\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.index !== undefined) index.i = state.index;\n        if (state.rescaleY !== undefined) rescaleY = state.rescaleY;\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(lines);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        container.classed('nv-chart-' + id, true);\n        var that = this;\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          if (duration === 0) container.call(chart);else container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        }\n\n        var indexDrag = d3.behavior.drag().on('dragstart', dragStart).on('drag', dragMove).on('dragend', dragEnd);\n\n        function dragStart(d, i) {\n          d3.select(chart.container).style('cursor', 'ew-resize');\n        }\n\n        function dragMove(d, i) {\n          index.x = d3.event.x;\n          index.i = Math.round(dx.invert(index.x));\n          updateZero();\n        }\n\n        function dragEnd(d, i) {\n          d3.select(chart.container).style('cursor', 'auto'); // update state and send stateChange with new index\n\n          state.index = index.i;\n          dispatch.stateChange(state);\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = lines.xScale();\n        y = lines.yScale();\n        dx.domain([0, data[0].values.length - 1]) //Assumes all series have same length\n        .range([0, availableWidth]).clamp(true);\n        var data = indexify(index.i, data); // initialize the starting yDomain for the not-rescale case after indexify (to have calculated point.display)\n\n        if (typeof currentYDomain === \"undefined\") {\n          currentYDomain = getCurrentYDomain(data);\n        }\n\n        if (!rescaleY) {\n          lines.yDomain(currentYDomain);\n          lines.clipEdge(true);\n        } else {\n          lines.yDomain(null);\n        } // Setup containers and skeleton of chart\n\n\n        var interactivePointerEvents = useInteractiveGuideline ? \"none\" : \"all\";\n        var wrap = container.selectAll('g.nv-wrap.nv-cumulativeLine').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-cumulativeLine').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-interactive');\n        gEnter.append('g').attr('class', 'nv-x nv-axis').style(\"pointer-events\", \"none\");\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-background');\n        gEnter.append('g').attr('class', 'nv-linesWrap').style(\"pointer-events\", interactivePointerEvents);\n        gEnter.append('g').attr('class', 'nv-avgLinesWrap').style(\"pointer-events\", \"none\");\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-controlsWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          g.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n        } // Controls\n\n\n        if (!showControls) {\n          g.select('.nv-controlsWrap').selectAll('*').remove();\n        } else {\n          var controlsData = [{\n            key: 'Re-scale y-axis',\n            disabled: !rescaleY\n          }];\n          controls.width(140).color(['#444', '#444', '#444']).rightAlign(false).margin({\n            top: 5,\n            right: 0,\n            bottom: 5,\n            left: 20\n          });\n          g.select('.nv-controlsWrap').datum(controlsData).attr('transform', 'translate(0,' + -margin.top + ')').call(controls);\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } // Show error if index point value is 0 (division by zero avoided)\n\n\n        var tempDisabled = data.filter(function (d) {\n          return d.tempDisabled;\n        });\n        wrap.select('.tempDisabled').remove(); //clean-up and prevent duplicates\n\n        if (tempDisabled.length) {\n          wrap.append('text').attr('class', 'tempDisabled').attr('x', availableWidth / 2).attr('y', '-.71em').style('text-anchor', 'end').text(tempDisabled.map(function (d) {\n            return d.key;\n          }).join(', ') + ' values cannot be calculated for this time period.');\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        }\n\n        gEnter.select('.nv-background').append('rect');\n        g.select('.nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n        lines //.x(function(d) { return d.x })\n        .y(function (d) {\n          return d.display.y;\n        }).width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled && !data[i].tempDisabled;\n        }));\n        var linesWrap = g.select('.nv-linesWrap').datum(data.filter(function (d) {\n          return !d.disabled && !d.tempDisabled;\n        }));\n        linesWrap.call(lines); //Store a series index number in the data array.\n\n        data.forEach(function (d, i) {\n          d.seriesIndex = i;\n        });\n        var avgLineData = data.filter(function (d) {\n          return !d.disabled && !!average(d);\n        });\n        var avgLines = g.select(\".nv-avgLinesWrap\").selectAll(\"line\").data(avgLineData, function (d) {\n          return d.key;\n        });\n\n        var getAvgLineY = function getAvgLineY(d) {\n          //If average lines go off the svg element, clamp them to the svg bounds.\n          var yVal = y(average(d));\n          if (yVal < 0) return 0;\n          if (yVal > availableHeight) return availableHeight;\n          return yVal;\n        };\n\n        avgLines.enter().append('line').style('stroke-width', 2).style('stroke-dasharray', '10,10').style('stroke', function (d, i) {\n          return lines.color()(d, d.seriesIndex);\n        }).attr('x1', 0).attr('x2', availableWidth).attr('y1', getAvgLineY).attr('y2', getAvgLineY);\n        avgLines.style('stroke-opacity', function (d) {\n          //If average lines go offscreen, make them transparent\n          var yVal = y(average(d));\n          if (yVal < 0 || yVal > availableHeight) return 0;\n          return 1;\n        }).attr('x1', 0).attr('x2', availableWidth).attr('y1', getAvgLineY).attr('y2', getAvgLineY);\n        avgLines.exit().remove(); //Create index line\n\n        var indexLine = linesWrap.selectAll('.nv-indexLine').data([index]);\n        indexLine.enter().append('rect').attr('class', 'nv-indexLine').attr('width', 3).attr('x', -2).attr('fill', 'red').attr('fill-opacity', .5).style(\"pointer-events\", \"all\").call(indexDrag);\n        indexLine.attr('transform', function (d) {\n          return 'translate(' + dx(d.i) + ',0)';\n        }).attr('height', availableHeight); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 70, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          g.select('.nv-x.nv-axis').call(xAxis);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        function updateZero() {\n          indexLine.data([index]); //When dragging the index line, turn off line transitions.\n          // Then turn them back on when done dragging.\n\n          var oldDuration = chart.duration();\n          chart.duration(0);\n          chart.update();\n          chart.duration(oldDuration);\n        }\n\n        g.select('.nv-background rect').on('click', function () {\n          index.x = d3.mouse(this)[0];\n          index.i = Math.round(dx.invert(index.x)); // update state and send stateChange with new index\n\n          state.index = index.i;\n          dispatch.stateChange(state);\n          updateZero();\n        });\n        lines.dispatch.on('elementClick', function (e) {\n          index.i = e.pointIndex;\n          index.x = dx(index.i); // update state and send stateChange with new index\n\n          state.index = index.i;\n          dispatch.stateChange(state);\n          updateZero();\n        });\n        controls.dispatch.on('legendClick', function (d, i) {\n          d.disabled = !d.disabled;\n          rescaleY = !d.disabled;\n          state.rescaleY = rescaleY;\n\n          if (!rescaleY) {\n            currentYDomain = getCurrentYDomain(data); // rescale is turned off, so set the currentYDomain\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        interactiveLayer.dispatch.on('elementMousemove', function (e) {\n          lines.clearHighlights();\n          var singlePoint,\n              pointIndex,\n              pointXLocation,\n              allData = [];\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !(series.disabled || series.tempDisabled);\n          }).forEach(function (series, i) {\n            pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n            lines.highlightPoint(i, pointIndex, true);\n            var point = series.values[pointIndex];\n            if (typeof point === 'undefined') return;\n            if (typeof singlePoint === 'undefined') singlePoint = point;\n            if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point, pointIndex));\n            allData.push({\n              key: series.key,\n              value: chart.y()(point, pointIndex),\n              color: color(series, series.seriesIndex)\n            });\n          }); //Highlight the tooltip entry based on which point the mouse is closest to.\n\n          if (allData.length > 2) {\n            var yValue = chart.yScale().invert(e.mouseY);\n            var domainExtent = Math.abs(chart.yScale().domain()[0] - chart.yScale().domain()[1]);\n            var threshold = 0.03 * domainExtent;\n            var indexToHighlight = nv.nearestValueIndex(allData.map(function (d) {\n              return d.value;\n            }), yValue, threshold);\n            if (indexToHighlight !== null) allData[indexToHighlight].highlight = true;\n          }\n\n          var xValue = xAxis.tickFormat()(chart.x()(singlePoint, pointIndex), pointIndex);\n          interactiveLayer.tooltip.valueFormatter(function (d, i) {\n            return yAxis.tickFormat()(d);\n          }).data({\n            value: xValue,\n            series: allData\n          })();\n          interactiveLayer.renderGuideLine(pointXLocation);\n        });\n        interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n          lines.clearHighlights();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          if (typeof e.index !== 'undefined') {\n            index.i = e.index;\n            index.x = dx(index.i);\n            state.index = e.index;\n            indexLine.data([index]);\n          }\n\n          if (typeof e.rescaleY !== 'undefined') {\n            rescaleY = e.rescaleY;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('cumulativeLineChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    lines.dispatch.on('elementMouseover.tooltip', function (evt) {\n      var point = {\n        x: chart.x()(evt.point),\n        y: chart.y()(evt.point),\n        color: evt.point.color\n      };\n      evt.point = point;\n      tooltip.data(evt).hidden(false);\n    });\n    lines.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    }); //============================================================\n    // Functions\n    //------------------------------------------------------------\n\n    var indexifyYGetter = null;\n    /* Normalize the data according to an index point. */\n\n    function indexify(idx, data) {\n      if (!indexifyYGetter) indexifyYGetter = lines.y();\n      return data.map(function (line, i) {\n        if (!line.values) {\n          return line;\n        }\n\n        var indexValue = line.values[idx];\n\n        if (indexValue == null) {\n          return line;\n        }\n\n        var v = indexifyYGetter(indexValue, idx); // avoid divide by zero\n\n        if (Math.abs(v) < 0.00001 && !noErrorCheck) {\n          line.tempDisabled = true;\n          return line;\n        }\n\n        line.tempDisabled = false;\n        line.values = line.values.map(function (point, pointIndex) {\n          point.display = {\n            'y': (indexifyYGetter(point, pointIndex) - v) / v\n          };\n          return point;\n        });\n        return line;\n      });\n    }\n\n    function getCurrentYDomain(data) {\n      var seriesDomains = data.filter(function (series) {\n        return !(series.disabled || series.tempDisabled);\n      }).map(function (series, i) {\n        return d3.extent(series.values, function (d) {\n          return d.display.y;\n        });\n      });\n      return [d3.min(seriesDomains, function (d) {\n        return d[0];\n      }), d3.max(seriesDomains, function (d) {\n        return d[1];\n      })];\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.lines = lines;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.state = state;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showControls: {\n        get: function get() {\n          return showControls;\n        },\n        set: function set(_) {\n          showControls = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      average: {\n        get: function get() {\n          return average;\n        },\n        set: function set(_) {\n          average = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      noErrorCheck: {\n        get: function get() {\n          return noErrorCheck;\n        },\n        set: function set(_) {\n          noErrorCheck = _;\n        }\n      },\n      // options that require extra logic in the setter\n      rescaleY: {\n        get: function get() {\n          return rescaleY;\n        },\n        set: function set(_) {\n          rescaleY = _;\n          chart.state.rescaleY = _; // also update state\n        }\n      },\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n\n          if (_ === true) {\n            chart.interactive(false);\n            chart.useVoronoi(false);\n          }\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          lines.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n          renderWatch.reset(duration);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, lines);\n    nv.utils.initOptions(chart);\n    return chart;\n  }; //TODO: consider deprecating by adding necessary features to multiBar model\n\n\n  nv.models.discreteBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container,\n        x = d3.scale.ordinal(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n    ,\n        color = nv.utils.defaultColor(),\n        showValues = false,\n        valueFormat = d3.format(',.2f'),\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'),\n        rectClass = 'discreteBar',\n        duration = 250; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x0, y0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container); //add series index to each data point for reference\n\n        data.forEach(function (series, i) {\n          series.values.forEach(function (point) {\n            point.series = i;\n          });\n        }); // Setup Scales\n        // remap and flatten the data for use in calculating the scales' domains\n\n        var seriesData = xDomain && yDomain ? [] : // if we know xDomain and yDomain, no need to calculate\n        data.map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i),\n              y0: d.y0\n            };\n          });\n        });\n        x.domain(xDomain || d3.merge(seriesData).map(function (d) {\n          return d.x;\n        })).rangeBands(xRange || [0, availableWidth], .1);\n        y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function (d) {\n          return d.y;\n        }).concat(forceY))); // If showValues, pad the Y axis range to account for label height\n\n        if (showValues) y.range(yRange || [availableHeight - (y.domain()[0] < 0 ? 12 : 0), y.domain()[1] > 0 ? 12 : 0]);else y.range(yRange || [availableHeight, 0]); //store old scales if they exist\n\n        x0 = x0 || x;\n        y0 = y0 || y.copy().range([y(0), y(0)]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-discretebar').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-discretebar');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-groups');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); //TODO: by definition, the discrete bar should not have multiple groups, will modify/remove later\n\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d) {\n          return d.key;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        groups.exit().watchTransition(renderWatch, 'discreteBar: exit groups').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6).remove();\n        groups.attr('class', function (d, i) {\n          return 'nv-group nv-series-' + i;\n        }).classed('hover', function (d) {\n          return d.hover;\n        });\n        groups.watchTransition(renderWatch, 'discreteBar: groups').style('stroke-opacity', 1).style('fill-opacity', .75);\n        var bars = groups.selectAll('g.nv-bar').data(function (d) {\n          return d.values;\n        });\n        bars.exit().remove();\n        var barsEnter = bars.enter().append('g').attr('transform', function (d, i, j) {\n          return 'translate(' + (x(getX(d, i)) + x.rangeBand() * .05) + ', ' + y(0) + ')';\n        }).on('mouseover', function (d, i) {\n          //TODO: figure out why j works above, but not here\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('click', function (d, i) {\n          var element = this;\n          dispatch.elementClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n          d3.event.stopPropagation();\n        }).on('dblclick', function (d, i) {\n          dispatch.elementDblClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n          d3.event.stopPropagation();\n        });\n        barsEnter.append('rect').attr('height', 0).attr('width', x.rangeBand() * .9 / data.length);\n\n        if (showValues) {\n          barsEnter.append('text').attr('text-anchor', 'middle');\n          bars.select('text').text(function (d, i) {\n            return valueFormat(getY(d, i));\n          }).watchTransition(renderWatch, 'discreteBar: bars text').attr('x', x.rangeBand() * .9 / 2).attr('y', function (d, i) {\n            return getY(d, i) < 0 ? y(getY(d, i)) - y(0) + 12 : -4;\n          });\n        } else {\n          bars.selectAll('text').remove();\n        }\n\n        bars.attr('class', function (d, i) {\n          return getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive';\n        }).style('fill', function (d, i) {\n          return d.color || color(d, i);\n        }).style('stroke', function (d, i) {\n          return d.color || color(d, i);\n        }).select('rect').attr('class', rectClass).watchTransition(renderWatch, 'discreteBar: bars rect').attr('width', x.rangeBand() * .9 / data.length);\n        bars.watchTransition(renderWatch, 'discreteBar: bars') //.delay(function(d,i) { return i * 1200 / data[0].values.length })\n        .attr('transform', function (d, i) {\n          var left = x(getX(d, i)) + x.rangeBand() * .05,\n              top = getY(d, i) < 0 ? y(0) : y(0) - y(getY(d, i)) < 1 ? y(0) - 1 : //make 1 px positive bars show up above y=0\n          y(getY(d, i));\n          return 'translate(' + left + ', ' + top + ')';\n        }).select('rect').attr('height', function (d, i) {\n          return Math.max(Math.abs(y(getY(d, i)) - y(0)), 1);\n        }); //store old scales for use in transitions on update\n\n        x0 = x.copy();\n        y0 = y.copy();\n      });\n      renderWatch.renderEnd('discreteBar immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      showValues: {\n        get: function get() {\n          return showValues;\n        },\n        set: function set(_) {\n          showValues = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      valueFormat: {\n        get: function get() {\n          return valueFormat;\n        },\n        set: function set(_) {\n          valueFormat = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      rectClass: {\n        get: function get() {\n          return rectClass;\n        },\n        set: function set(_) {\n          rectClass = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.discreteBarChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var discretebar = nv.models.discreteBar(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        tooltip = nv.models.tooltip();\n    var margin = {\n      top: 15,\n      right: 10,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        color = nv.utils.getColor(),\n        showLegend = false,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        staggerLabels = false,\n        wrapLabels = false,\n        rotateLabels = 0,\n        x,\n        y,\n        noData = null,\n        dispatch = d3.dispatch('beforeUpdate', 'renderEnd'),\n        duration = 250;\n    xAxis.orient('bottom').showMaxMin(false).tickFormat(function (d) {\n      return d;\n    });\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left').tickFormat(d3.format(',.1f'));\n    tooltip.duration(0).headerEnabled(false).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).keyFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(discretebar);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          dispatch.beforeUpdate();\n          container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this; // Display No Data message if there's nothing to show.\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = discretebar.xScale();\n        y = discretebar.yScale().clamp(true); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-discreteBarWithAxes').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-discreteBarWithAxes').append('g');\n        var defsEnter = gEnter.append('defs');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis').append('g').attr('class', 'nv-zeroLine').append('line');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n        }\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } // Main Chart Component(s)\n\n\n        discretebar.width(availableWidth).height(availableHeight);\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.transition().call(discretebar);\n        defsEnter.append('clipPath').attr('id', 'nv-x-label-clip-' + discretebar.id()).append('rect');\n        g.select('#nv-x-label-clip-' + discretebar.id() + ' rect').attr('width', x.rangeBand() * (staggerLabels ? 2 : 1)).attr('height', 16).attr('x', -x.rangeBand() / (staggerLabels ? 1 : 2)); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + (y.range()[0] + (discretebar.showValues() && y.domain()[0] < 0 ? 16 : 0)) + ')');\n          g.select('.nv-x.nv-axis').call(xAxis);\n          var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n\n          if (staggerLabels) {\n            xTicks.selectAll('text').attr('transform', function (d, i, j) {\n              return 'translate(0,' + (j % 2 == 0 ? '5' : '17') + ')';\n            });\n          }\n\n          if (rotateLabels) {\n            xTicks.selectAll('.tick text').attr('transform', 'rotate(' + rotateLabels + ' 0,0)').style('text-anchor', rotateLabels > 0 ? 'start' : 'end');\n          }\n\n          if (wrapLabels) {\n            g.selectAll('.tick text').call(nv.utils.wrapTicks, chart.xAxis.rangeBand());\n          }\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } // Zero line\n\n\n        g.select(\".nv-zeroLine line\").attr(\"x1\", 0).attr(\"x2\", rightAlignYAxis ? -availableWidth : availableWidth).attr(\"y1\", y(0)).attr(\"y2\", y(0));\n      });\n      renderWatch.renderEnd('discreteBar chart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    discretebar.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt['series'] = {\n        key: chart.x()(evt.data),\n        value: chart.y()(evt.data),\n        color: evt.color\n      };\n      tooltip.data(evt).hidden(false);\n    });\n    discretebar.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    discretebar.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.discretebar = discretebar;\n    chart.legend = legend;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      staggerLabels: {\n        get: function get() {\n          return staggerLabels;\n        },\n        set: function set(_) {\n          staggerLabels = _;\n        }\n      },\n      rotateLabels: {\n        get: function get() {\n          return rotateLabels;\n        },\n        set: function set(_) {\n          rotateLabels = _;\n        }\n      },\n      wrapLabels: {\n        get: function get() {\n          return wrapLabels;\n        },\n        set: function set(_) {\n          wrapLabels = !!_;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          discretebar.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          discretebar.color(color);\n          legend.color(color);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, discretebar);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.distribution = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 400 //technically width or height depending on x or y....\n    ,\n        size = 8,\n        axis = 'x' // 'x' or 'y'... horizontal or vertical\n    ,\n        getData = function getData(d) {\n      return d[axis];\n    } // defaults d.x or d.y\n    ,\n        color = nv.utils.defaultColor(),\n        scale = d3.scale.linear(),\n        domain,\n        duration = 250,\n        dispatch = d3.dispatch('renderEnd'); //============================================================\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var scale0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration); //============================================================\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableLength = width - (axis === 'x' ? margin.left + margin.right : margin.top + margin.bottom),\n            naxis = axis == 'x' ? 'y' : 'x',\n            container = d3.select(this);\n        nv.utils.initSVG(container); //------------------------------------------------------------\n        // Setup Scales\n\n        scale0 = scale0 || scale; //------------------------------------------------------------\n        //------------------------------------------------------------\n        // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-distribution').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-distribution');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); //------------------------------------------------------------\n\n        var distWrap = g.selectAll('g.nv-dist').data(function (d) {\n          return d;\n        }, function (d) {\n          return d.key;\n        });\n        distWrap.enter().append('g');\n        distWrap.attr('class', function (d, i) {\n          return 'nv-dist nv-series-' + i;\n        }).style('stroke', function (d, i) {\n          return color(d, i);\n        });\n        var dist = distWrap.selectAll('line.nv-dist' + axis).data(function (d) {\n          return d.values;\n        });\n        dist.enter().append('line').attr(axis + '1', function (d, i) {\n          return scale0(getData(d, i));\n        }).attr(axis + '2', function (d, i) {\n          return scale0(getData(d, i));\n        });\n        renderWatch.transition(distWrap.exit().selectAll('line.nv-dist' + axis), 'dist exit') // .transition()\n        .attr(axis + '1', function (d, i) {\n          return scale(getData(d, i));\n        }).attr(axis + '2', function (d, i) {\n          return scale(getData(d, i));\n        }).style('stroke-opacity', 0).remove();\n        dist.attr('class', function (d, i) {\n          return 'nv-dist' + axis + ' nv-dist' + axis + '-' + i;\n        }).attr(naxis + '1', 0).attr(naxis + '2', size);\n        renderWatch.transition(dist, 'dist') // .transition()\n        .attr(axis + '1', function (d, i) {\n          return scale(getData(d, i));\n        }).attr(axis + '2', function (d, i) {\n          return scale(getData(d, i));\n        });\n        scale0 = scale.copy();\n      });\n      renderWatch.renderEnd('distribution immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart.dispatch = dispatch;\n\n    chart.margin = function (_) {\n      if (!arguments.length) return margin;\n      margin.top = typeof _.top != 'undefined' ? _.top : margin.top;\n      margin.right = typeof _.right != 'undefined' ? _.right : margin.right;\n      margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : margin.bottom;\n      margin.left = typeof _.left != 'undefined' ? _.left : margin.left;\n      return chart;\n    };\n\n    chart.width = function (_) {\n      if (!arguments.length) return width;\n      width = _;\n      return chart;\n    };\n\n    chart.axis = function (_) {\n      if (!arguments.length) return axis;\n      axis = _;\n      return chart;\n    };\n\n    chart.size = function (_) {\n      if (!arguments.length) return size;\n      size = _;\n      return chart;\n    };\n\n    chart.getData = function (_) {\n      if (!arguments.length) return getData;\n      getData = d3.functor(_);\n      return chart;\n    };\n\n    chart.scale = function (_) {\n      if (!arguments.length) return scale;\n      scale = _;\n      return chart;\n    };\n\n    chart.color = function (_) {\n      if (!arguments.length) return color;\n      color = nv.utils.getColor(_);\n      return chart;\n    };\n\n    chart.duration = function (_) {\n      if (!arguments.length) return duration;\n      duration = _;\n      renderWatch.reset(duration);\n      return chart;\n    }; //============================================================\n\n\n    return chart;\n  };\n\n  nv.models.focus = function (content) {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var content = content || nv.models.line(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        brush = d3.svg.brush();\n    var margin = {\n      top: 10,\n      right: 0,\n      bottom: 30,\n      left: 0\n    },\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = 70,\n        showXAxis = true,\n        showYAxis = false,\n        rightAlignYAxis = false,\n        ticks = null,\n        x,\n        y,\n        brushExtent = null,\n        duration = 250,\n        dispatch = d3.dispatch('brush', 'onBrush', 'renderEnd'),\n        syncBrushing = true;\n    content.interactive(false);\n    content.pointActive(function (d) {\n      return false;\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(content);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = height - margin.top - margin.bottom;\n\n        chart.update = function () {\n          if (duration === 0) {\n            container.call(chart);\n          } else {\n            container.transition().duration(duration).call(chart);\n          }\n        };\n\n        chart.container = this; // Setup Scales\n\n        x = content.xScale();\n        y = content.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-focus').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-focus').append('g');\n        var g = wrap.select('g');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        gEnter.append('g').attr('class', 'nv-background').append('rect');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-contentWrap');\n        gEnter.append('g').attr('class', 'nv-brushBackground');\n        gEnter.append('g').attr('class', 'nv-x nv-brush');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        }\n\n        g.select('.nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n        content.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var contentWrap = g.select('.nv-contentWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        d3.transition(contentWrap).call(content); // Setup Brush\n\n        brush.x(x).on('brush', function () {\n          onBrush(syncBrushing);\n        });\n        brush.on('brushend', function () {\n          if (!syncBrushing) {\n            dispatch.onBrush(brush.empty() ? x.domain() : brush.extent());\n          }\n        });\n        if (brushExtent) brush.extent(brushExtent);\n        var brushBG = g.select('.nv-brushBackground').selectAll('g').data([brushExtent || brush.extent()]);\n        var brushBGenter = brushBG.enter().append('g');\n        brushBGenter.append('rect').attr('class', 'left').attr('x', 0).attr('y', 0).attr('height', availableHeight);\n        brushBGenter.append('rect').attr('class', 'right').attr('x', 0).attr('y', 0).attr('height', availableHeight);\n        var gBrush = g.select('.nv-x.nv-brush').call(brush);\n        gBrush.selectAll('rect').attr('height', availableHeight);\n        gBrush.selectAll('.resize').append('path').attr('d', resizePath);\n        onBrush(true);\n        g.select('.nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          d3.transition(g.select('.nv-x.nv-axis')).call(xAxis);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          d3.transition(g.select('.nv-y.nv-axis')).call(yAxis);\n        }\n\n        g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')'); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n        //============================================================\n        // Functions\n        //------------------------------------------------------------\n        // Taken from crossfilter (http://square.github.com/crossfilter/)\n\n        function resizePath(d) {\n          var e = +(d == 'e'),\n              x = e ? 1 : -1,\n              y = availableHeight / 3;\n          return 'M' + 0.5 * x + ',' + y + 'A6,6 0 0 ' + e + ' ' + 6.5 * x + ',' + (y + 6) + 'V' + (2 * y - 6) + 'A6,6 0 0 ' + e + ' ' + 0.5 * x + ',' + 2 * y + 'Z' + 'M' + 2.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8) + 'M' + 4.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8);\n        }\n\n        function updateBrushBG() {\n          if (!brush.empty()) brush.extent(brushExtent);\n          brushBG.data([brush.empty() ? x.domain() : brushExtent]).each(function (d, i) {\n            var leftWidth = x(d[0]) - x.range()[0],\n                rightWidth = availableWidth - x(d[1]);\n            d3.select(this).select('.left').attr('width', leftWidth < 0 ? 0 : leftWidth);\n            d3.select(this).select('.right').attr('x', x(d[1])).attr('width', rightWidth < 0 ? 0 : rightWidth);\n          });\n        }\n\n        function onBrush(shouldDispatch) {\n          brushExtent = brush.empty() ? null : brush.extent();\n          var extent = brush.empty() ? x.domain() : brush.extent();\n          dispatch.brush({\n            extent: extent,\n            brush: brush\n          });\n          updateBrushBG();\n\n          if (shouldDispatch) {\n            dispatch.onBrush(extent);\n          }\n        }\n      });\n      renderWatch.renderEnd('focus immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.content = content;\n    chart.brush = brush;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      brushExtent: {\n        get: function get() {\n          return brushExtent;\n        },\n        set: function set(_) {\n          brushExtent = _;\n        }\n      },\n      syncBrushing: {\n        get: function get() {\n          return syncBrushing;\n        },\n        set: function set(_) {\n          syncBrushing = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          content.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          content.color(color);\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return content.interpolate();\n        },\n        set: function set(_) {\n          content.interpolate(_);\n        }\n      },\n      xTickFormat: {\n        get: function get() {\n          return xAxis.tickFormat();\n        },\n        set: function set(_) {\n          xAxis.tickFormat(_);\n        }\n      },\n      yTickFormat: {\n        get: function get() {\n          return yAxis.tickFormat();\n        },\n        set: function set(_) {\n          yAxis.tickFormat(_);\n        }\n      },\n      x: {\n        get: function get() {\n          return content.x();\n        },\n        set: function set(_) {\n          content.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return content.y();\n        },\n        set: function set(_) {\n          content.y(_);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, content);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.forceDirectedGraph = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 2,\n      right: 0,\n      bottom: 2,\n      left: 0\n    },\n        width = 400,\n        height = 32,\n        container = null,\n        dispatch = d3.dispatch('renderEnd'),\n        color = nv.utils.getColor(['#000']),\n        tooltip = nv.models.tooltip(),\n        noData = null // Force directed graph specific parameters [default values]\n    ,\n        linkStrength = 0.1,\n        friction = 0.9,\n        linkDist = 30,\n        charge = -120,\n        gravity = 0.1,\n        theta = 0.8,\n        alpha = 0.1,\n        radius = 5 // These functions allow to add extra attributes to ndes and links\n    ,\n        nodeExtras = function nodeExtras(nodes) {\n      /* Do nothing */\n    },\n        linkExtras = function linkExtras(links) {\n      /* Do nothing */\n    },\n        getX = d3.functor(0.0),\n        getY = d3.functor(0.0); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        container.attr(\"width\", availableWidth).attr(\"height\", availableHeight); // Display No Data message if there's nothing to show.\n\n        if (!data || !data.links || !data.nodes) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        container.selectAll('*').remove(); // Collect names of all fields in the nodes\n\n        var nodeFieldSet = new Set();\n        data.nodes.forEach(function (node) {\n          var keys = Object.keys(node);\n          keys.forEach(function (key) {\n            nodeFieldSet.add(key);\n          });\n        });\n        var force = d3.layout.force().nodes(data.nodes).links(data.links).size([availableWidth, availableHeight]).linkStrength(linkStrength).friction(friction).linkDistance(linkDist).charge(charge).gravity(gravity).theta(theta).alpha(alpha).start();\n        var link = container.selectAll(\".link\").data(data.links).enter().append(\"line\").attr(\"class\", \"nv-force-link\").style(\"stroke-width\", function (d) {\n          return Math.sqrt(d.value);\n        });\n        var node = container.selectAll(\".node\").data(data.nodes).enter().append(\"g\").attr(\"class\", \"nv-force-node\").call(force.drag);\n        node.append(\"circle\").attr(\"r\", radius).style(\"fill\", function (d) {\n          return color(d);\n        }).on(\"mouseover\", function (evt) {\n          container.select('.nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex).attr('y1', evt.py);\n          container.select('.nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex).attr('x2', evt.px); // Add 'series' object to\n\n          var nodeColor = color(evt);\n          evt.series = [];\n          nodeFieldSet.forEach(function (field) {\n            evt.series.push({\n              color: nodeColor,\n              key: field,\n              value: evt[field]\n            });\n          });\n          tooltip.data(evt).hidden(false);\n        }).on(\"mouseout\", function (d) {\n          tooltip.hidden(true);\n        });\n        tooltip.headerFormatter(function (d) {\n          return \"Node\";\n        }); // Apply extra attributes to nodes and links (if any)\n\n        linkExtras(link);\n        nodeExtras(node);\n        force.on(\"tick\", function () {\n          link.attr(\"x1\", function (d) {\n            return d.source.x;\n          }).attr(\"y1\", function (d) {\n            return d.source.y;\n          }).attr(\"x2\", function (d) {\n            return d.target.x;\n          }).attr(\"y2\", function (d) {\n            return d.target.y;\n          });\n          node.attr(\"transform\", function (d) {\n            return \"translate(\" + d.x + \", \" + d.y + \")\";\n          });\n        });\n      });\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      // Force directed graph specific parameters\n      linkStrength: {\n        get: function get() {\n          return linkStrength;\n        },\n        set: function set(_) {\n          linkStrength = _;\n        }\n      },\n      friction: {\n        get: function get() {\n          return friction;\n        },\n        set: function set(_) {\n          friction = _;\n        }\n      },\n      linkDist: {\n        get: function get() {\n          return linkDist;\n        },\n        set: function set(_) {\n          linkDist = _;\n        }\n      },\n      charge: {\n        get: function get() {\n          return charge;\n        },\n        set: function set(_) {\n          charge = _;\n        }\n      },\n      gravity: {\n        get: function get() {\n          return gravity;\n        },\n        set: function set(_) {\n          gravity = _;\n        }\n      },\n      theta: {\n        get: function get() {\n          return theta;\n        },\n        set: function set(_) {\n          theta = _;\n        }\n      },\n      alpha: {\n        get: function get() {\n          return alpha;\n        },\n        set: function set(_) {\n          alpha = _;\n        }\n      },\n      radius: {\n        get: function get() {\n          return radius;\n        },\n        set: function set(_) {\n          radius = _;\n        }\n      },\n      //functor options\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = d3.functor(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      nodeExtras: {\n        get: function get() {\n          return nodeExtras;\n        },\n        set: function set(_) {\n          nodeExtras = _;\n        }\n      },\n      linkExtras: {\n        get: function get() {\n          return linkExtras;\n        },\n        set: function set(_) {\n          linkExtras = _;\n        }\n      }\n    });\n    chart.dispatch = dispatch;\n    chart.tooltip = tooltip;\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.furiousLegend = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 5,\n      right: 0,\n      bottom: 5,\n      left: 0\n    },\n        width = 400,\n        height = 20,\n        getKey = function getKey(d) {\n      return d.key;\n    },\n        keyFormatter = function keyFormatter(d) {\n      return d;\n    },\n        color = nv.utils.getColor(),\n        maxKeyLength = 20 //default value for key lengths\n    ,\n        align = true,\n        padding = 28 //define how much space between legend items. - recommend 32 for furious version\n    ,\n        rightAlign = true,\n        updateState = true //If true, legend will update data.disabled and trigger a 'stateChange' dispatch.\n    ,\n        radioButtonMode = false //If true, clicking legend items will cause it to behave like a radio button. (only one can be selected at a time)\n    ,\n        expanded = false,\n        dispatch = d3.dispatch('legendClick', 'legendDblclick', 'legendMouseover', 'legendMouseout', 'stateChange'),\n        vers = 'classic' //Options are \"classic\" and \"furious\"\n    ;\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            container = d3.select(this);\n        nv.utils.initSVG(container); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-legend').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-legend').append('g');\n        var g = wrap.select('g');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var series = g.selectAll('.nv-series').data(function (d) {\n          if (vers != 'furious') return d;\n          return d.filter(function (n) {\n            return expanded ? true : !n.disengaged;\n          });\n        });\n        var seriesEnter = series.enter().append('g').attr('class', 'nv-series');\n        var seriesShape;\n\n        if (vers == 'classic') {\n          seriesEnter.append('circle').style('stroke-width', 2).attr('class', 'nv-legend-symbol').attr('r', 5);\n          seriesShape = series.select('circle');\n        } else if (vers == 'furious') {\n          seriesEnter.append('rect').style('stroke-width', 2).attr('class', 'nv-legend-symbol').attr('rx', 3).attr('ry', 3);\n          seriesShape = series.select('rect');\n          seriesEnter.append('g').attr('class', 'nv-check-box').property('innerHTML', '<path d=\"M0.5,5 L22.5,5 L22.5,26.5 L0.5,26.5 L0.5,5 Z\" class=\"nv-box\"></path><path d=\"M5.5,12.8618467 L11.9185089,19.2803556 L31,0.198864511\" class=\"nv-check\"></path>').attr('transform', 'translate(-10,-8)scale(0.5)');\n          var seriesCheckbox = series.select('.nv-check-box');\n          seriesCheckbox.each(function (d, i) {\n            d3.select(this).selectAll('path').attr('stroke', setTextColor(d, i));\n          });\n        }\n\n        seriesEnter.append('text').attr('text-anchor', 'start').attr('class', 'nv-legend-text').attr('dy', '.32em').attr('dx', '8');\n        var seriesText = series.select('text.nv-legend-text');\n        series.on('mouseover', function (d, i) {\n          dispatch.legendMouseover(d, i); //TODO: Make consistent with other event objects\n        }).on('mouseout', function (d, i) {\n          dispatch.legendMouseout(d, i);\n        }).on('click', function (d, i) {\n          dispatch.legendClick(d, i); // make sure we re-get data in case it was modified\n\n          var data = series.data();\n\n          if (updateState) {\n            if (vers == 'classic') {\n              if (radioButtonMode) {\n                //Radio button mode: set every series to disabled,\n                //  and enable the clicked series.\n                data.forEach(function (series) {\n                  series.disabled = true;\n                });\n                d.disabled = false;\n              } else {\n                d.disabled = !d.disabled;\n\n                if (data.every(function (series) {\n                  return series.disabled;\n                })) {\n                  //the default behavior of NVD3 legends is, if every single series\n                  // is disabled, turn all series' back on.\n                  data.forEach(function (series) {\n                    series.disabled = false;\n                  });\n                }\n              }\n            } else if (vers == 'furious') {\n              if (expanded) {\n                d.disengaged = !d.disengaged;\n                d.userDisabled = d.userDisabled == undefined ? !!d.disabled : d.userDisabled;\n                d.disabled = d.disengaged || d.userDisabled;\n              } else if (!expanded) {\n                d.disabled = !d.disabled;\n                d.userDisabled = d.disabled;\n                var engaged = data.filter(function (d) {\n                  return !d.disengaged;\n                });\n\n                if (engaged.every(function (series) {\n                  return series.userDisabled;\n                })) {\n                  //the default behavior of NVD3 legends is, if every single series\n                  // is disabled, turn all series' back on.\n                  data.forEach(function (series) {\n                    series.disabled = series.userDisabled = false;\n                  });\n                }\n              }\n            }\n\n            dispatch.stateChange({\n              disabled: data.map(function (d) {\n                return !!d.disabled;\n              }),\n              disengaged: data.map(function (d) {\n                return !!d.disengaged;\n              })\n            });\n          }\n        }).on('dblclick', function (d, i) {\n          if (vers == 'furious' && expanded) return;\n          dispatch.legendDblclick(d, i);\n\n          if (updateState) {\n            // make sure we re-get data in case it was modified\n            var data = series.data(); //the default behavior of NVD3 legends, when double clicking one,\n            // is to set all other series' to false, and make the double clicked series enabled.\n\n            data.forEach(function (series) {\n              series.disabled = true;\n              if (vers == 'furious') series.userDisabled = series.disabled;\n            });\n            d.disabled = false;\n            if (vers == 'furious') d.userDisabled = d.disabled;\n            dispatch.stateChange({\n              disabled: data.map(function (d) {\n                return !!d.disabled;\n              })\n            });\n          }\n        });\n        series.classed('nv-disabled', function (d) {\n          return d.userDisabled;\n        });\n        series.exit().remove();\n        seriesText.attr('fill', setTextColor).text(function (d) {\n          return keyFormatter(getKey(d));\n        }); //TODO: implement fixed-width and max-width options (max-width is especially useful with the align option)\n        // NEW ALIGNING CODE, TODO: clean up\n\n        var versPadding;\n\n        switch (vers) {\n          case 'furious':\n            versPadding = 23;\n            break;\n\n          case 'classic':\n            versPadding = 20;\n        }\n\n        if (align) {\n          var seriesWidths = [];\n          series.each(function (d, i) {\n            var legendText;\n\n            if (keyFormatter(getKey(d)) && keyFormatter(getKey(d)).length > maxKeyLength) {\n              var trimmedKey = keyFormatter(getKey(d)).substring(0, maxKeyLength);\n              legendText = d3.select(this).select('text').text(trimmedKey + \"...\");\n              d3.select(this).append(\"svg:title\").text(keyFormatter(getKey(d)));\n            } else {\n              legendText = d3.select(this).select('text');\n            }\n\n            var nodeTextLength;\n\n            try {\n              nodeTextLength = legendText.node().getComputedTextLength(); // If the legendText is display:none'd (nodeTextLength == 0), simulate an error so we approximate, instead\n\n              if (nodeTextLength <= 0) throw Error();\n            } catch (e) {\n              nodeTextLength = nv.utils.calcApproxTextWidth(legendText);\n            }\n\n            seriesWidths.push(nodeTextLength + padding);\n          });\n          var seriesPerRow = 0;\n          var legendWidth = 0;\n          var columnWidths = [];\n\n          while (legendWidth < availableWidth && seriesPerRow < seriesWidths.length) {\n            columnWidths[seriesPerRow] = seriesWidths[seriesPerRow];\n            legendWidth += seriesWidths[seriesPerRow++];\n          }\n\n          if (seriesPerRow === 0) seriesPerRow = 1; //minimum of one series per row\n\n          while (legendWidth > availableWidth && seriesPerRow > 1) {\n            columnWidths = [];\n            seriesPerRow--;\n\n            for (var k = 0; k < seriesWidths.length; k++) {\n              if (seriesWidths[k] > (columnWidths[k % seriesPerRow] || 0)) columnWidths[k % seriesPerRow] = seriesWidths[k];\n            }\n\n            legendWidth = columnWidths.reduce(function (prev, cur, index, array) {\n              return prev + cur;\n            });\n          }\n\n          var xPositions = [];\n\n          for (var i = 0, curX = 0; i < seriesPerRow; i++) {\n            xPositions[i] = curX;\n            curX += columnWidths[i];\n          }\n\n          series.attr('transform', function (d, i) {\n            return 'translate(' + xPositions[i % seriesPerRow] + ',' + (5 + Math.floor(i / seriesPerRow) * versPadding) + ')';\n          }); //position legend as far right as possible within the total width\n\n          if (rightAlign) {\n            g.attr('transform', 'translate(' + (width - margin.right - legendWidth) + ',' + margin.top + ')');\n          } else {\n            g.attr('transform', 'translate(0' + ',' + margin.top + ')');\n          }\n\n          height = margin.top + margin.bottom + Math.ceil(seriesWidths.length / seriesPerRow) * versPadding;\n        } else {\n          var ypos = 5,\n              newxpos = 5,\n              maxwidth = 0,\n              xpos;\n          series.attr('transform', function (d, i) {\n            var length = d3.select(this).select('text').node().getComputedTextLength() + padding;\n            xpos = newxpos;\n\n            if (width < margin.left + margin.right + xpos + length) {\n              newxpos = xpos = 5;\n              ypos += versPadding;\n            }\n\n            newxpos += length;\n            if (newxpos > maxwidth) maxwidth = newxpos;\n            return 'translate(' + xpos + ',' + ypos + ')';\n          }); //position legend as far right as possible within the total width\n\n          g.attr('transform', 'translate(' + (width - margin.right - maxwidth) + ',' + margin.top + ')');\n          height = margin.top + margin.bottom + ypos + 15;\n        }\n\n        if (vers == 'furious') {\n          // Size rectangles after text is placed\n          seriesShape.attr('width', function (d, i) {\n            return seriesText[0][i].getComputedTextLength() + 27;\n          }).attr('height', 18).attr('y', -9).attr('x', -15);\n        }\n\n        seriesShape.style('fill', setBGColor).style('stroke', function (d, i) {\n          return d.color || color(d, i);\n        });\n      });\n\n      function setTextColor(d, i) {\n        if (vers != 'furious') return '#000';\n\n        if (expanded) {\n          return d.disengaged ? color(d, i) : '#fff';\n        } else if (!expanded) {\n          return !!d.disabled ? color(d, i) : '#fff';\n        }\n      }\n\n      function setBGColor(d, i) {\n        if (expanded && vers == 'furious') {\n          return d.disengaged ? '#fff' : color(d, i);\n        } else {\n          return !!d.disabled ? '#fff' : color(d, i);\n        }\n      }\n\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      key: {\n        get: function get() {\n          return getKey;\n        },\n        set: function set(_) {\n          getKey = _;\n        }\n      },\n      keyFormatter: {\n        get: function get() {\n          return keyFormatter;\n        },\n        set: function set(_) {\n          keyFormatter = _;\n        }\n      },\n      align: {\n        get: function get() {\n          return align;\n        },\n        set: function set(_) {\n          align = _;\n        }\n      },\n      rightAlign: {\n        get: function get() {\n          return rightAlign;\n        },\n        set: function set(_) {\n          rightAlign = _;\n        }\n      },\n      maxKeyLength: {\n        get: function get() {\n          return maxKeyLength;\n        },\n        set: function set(_) {\n          maxKeyLength = _;\n        }\n      },\n      padding: {\n        get: function get() {\n          return padding;\n        },\n        set: function set(_) {\n          padding = _;\n        }\n      },\n      updateState: {\n        get: function get() {\n          return updateState;\n        },\n        set: function set(_) {\n          updateState = _;\n        }\n      },\n      radioButtonMode: {\n        get: function get() {\n          return radioButtonMode;\n        },\n        set: function set(_) {\n          radioButtonMode = _;\n        }\n      },\n      expanded: {\n        get: function get() {\n          return expanded;\n        },\n        set: function set(_) {\n          expanded = _;\n        }\n      },\n      vers: {\n        get: function get() {\n          return vers;\n        },\n        set: function set(_) {\n          vers = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  }; //TODO: consider deprecating and using multibar with single series for this\n\n\n  nv.models.historicalBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = null,\n        height = null,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        forceX = [],\n        forceY = [0],\n        padData = false,\n        clipEdge = true,\n        color = nv.utils.defaultColor(),\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'),\n        interactive = true;\n\n    var renderWatch = nv.utils.renderWatch(dispatch, 0);\n\n    function chart(selection) {\n      selection.each(function (data) {\n        renderWatch.reset();\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); // Setup Scales\n\n        x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX)));\n        if (padData) x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5) / data[0].values.length]);else x.range(xRange || [0, availableWidth]);\n        y.domain(yDomain || d3.extent(data[0].values.map(getY).concat(forceY))).range(yRange || [availableHeight, 0]); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01]) : y.domain([-1, 1]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-historicalBar-' + id).data([data[0].values]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-historicalBar-' + id);\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-bars');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        defsEnter.append('clipPath').attr('id', 'nv-chart-clip-path-' + id).append('rect');\n        wrap.select('#nv-chart-clip-path-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n        var bars = wrap.select('.nv-bars').selectAll('.nv-bar').data(function (d) {\n          return d;\n        }, function (d, i) {\n          return getX(d, i);\n        });\n        bars.exit().remove();\n        bars.enter().append('rect').attr('x', 0).attr('y', function (d, i) {\n          return nv.utils.NaNtoZero(y(Math.max(0, getY(d, i))));\n        }).attr('height', function (d, i) {\n          return nv.utils.NaNtoZero(Math.abs(y(getY(d, i)) - y(0)));\n        }).attr('transform', function (d, i) {\n          return 'translate(' + (x(getX(d, i)) - availableWidth / data[0].values.length * .45) + ',0)';\n        }).on('mouseover', function (d, i) {\n          if (!interactive) return;\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          if (!interactive) return;\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function (d, i) {\n          if (!interactive) return;\n          dispatch.elementMousemove({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('click', function (d, i) {\n          if (!interactive) return;\n          var element = this;\n          dispatch.elementClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n          d3.event.stopPropagation();\n        }).on('dblclick', function (d, i) {\n          if (!interactive) return;\n          dispatch.elementDblClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n          d3.event.stopPropagation();\n        });\n        bars.attr('fill', function (d, i) {\n          return color(d, i);\n        }).attr('class', function (d, i, j) {\n          return (getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive') + ' nv-bar-' + j + '-' + i;\n        }).watchTransition(renderWatch, 'bars').attr('transform', function (d, i) {\n          return 'translate(' + (x(getX(d, i)) - availableWidth / data[0].values.length * .45) + ',0)';\n        }) //TODO: better width calculations that don't assume always uniform data spacing;w\n        .attr('width', availableWidth / data[0].values.length * .9);\n        bars.watchTransition(renderWatch, 'bars').attr('y', function (d, i) {\n          var rval = getY(d, i) < 0 ? y(0) : y(0) - y(getY(d, i)) < 1 ? y(0) - 1 : y(getY(d, i));\n          return nv.utils.NaNtoZero(rval);\n        }).attr('height', function (d, i) {\n          return nv.utils.NaNtoZero(Math.max(Math.abs(y(getY(d, i)) - y(0)), 1));\n        });\n      });\n      renderWatch.renderEnd('historicalBar immediate');\n      return chart;\n    } //Create methods to allow outside functions to highlight a specific bar.\n\n\n    chart.highlightPoint = function (pointIndex, isHoverOver) {\n      container.select(\".nv-bars .nv-bar-0-\" + pointIndex).classed(\"hover\", isHoverOver);\n    };\n\n    chart.clearHighlights = function () {\n      container.select(\".nv-bars .nv-bar.hover\").classed(\"hover\", false);\n    }; //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      padData: {\n        get: function get() {\n          return padData;\n        },\n        set: function set(_) {\n          padData = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      interactive: {\n        get: function get() {\n          return interactive;\n        },\n        set: function set(_) {\n          interactive = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.historicalBarChart = function (bar_model) {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var bars = bar_model || nv.models.historicalBar(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        interactiveLayer = nv.interactiveGuideline(),\n        tooltip = nv.models.tooltip();\n    var margin = {\n      top: 30,\n      right: 90,\n      bottom: 50,\n      left: 90\n    },\n        marginTop = null,\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = null,\n        showLegend = false,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        useInteractiveGuideline = false,\n        x,\n        y,\n        state = {},\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('tooltipHide', 'stateChange', 'changeState', 'renderEnd'),\n        transitionDuration = 250;\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n    tooltip.duration(0).headerEnabled(false).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, 0);\n\n    function chart(selection) {\n      selection.each(function (data) {\n        renderWatch.reset();\n        renderWatch.models(bars);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.transition().duration(transitionDuration).call(chart);\n        };\n\n        chart.container = this; //set state.disabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display noData message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = bars.xScale();\n        y = bars.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-historicalBarChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-historicalBarChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-interactive'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        }\n\n        bars.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.transition().call(bars); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          g.select('.nv-x.nv-axis').transition().call(xAxis);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').transition().call(yAxis);\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        interactiveLayer.dispatch.on('elementMousemove', function (e) {\n          bars.clearHighlights();\n          var singlePoint,\n              pointIndex,\n              pointXLocation,\n              allData = [];\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !series.disabled;\n          }).forEach(function (series, i) {\n            pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n            bars.highlightPoint(pointIndex, true);\n            var point = series.values[pointIndex];\n            if (point === undefined) return;\n            if (singlePoint === undefined) singlePoint = point;\n            if (pointXLocation === undefined) pointXLocation = chart.xScale()(chart.x()(point, pointIndex));\n            allData.push({\n              key: series.key,\n              value: chart.y()(point, pointIndex),\n              color: color(series, series.seriesIndex),\n              data: series.values[pointIndex]\n            });\n          });\n          var xValue = xAxis.tickFormat()(chart.x()(singlePoint, pointIndex));\n          interactiveLayer.tooltip.valueFormatter(function (d, i) {\n            return yAxis.tickFormat()(d);\n          }).data({\n            value: xValue,\n            index: pointIndex,\n            series: allData\n          })();\n          interactiveLayer.renderGuideLine(pointXLocation);\n        });\n        interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n          dispatch.tooltipHide();\n          bars.clearHighlights();\n        });\n        legend.dispatch.on('legendClick', function (d, i) {\n          d.disabled = !d.disabled;\n\n          if (!data.filter(function (d) {\n            return !d.disabled;\n          }).length) {\n            data.map(function (d) {\n              d.disabled = false;\n              wrap.selectAll('.nv-series').classed('disabled', false);\n              return d;\n            });\n          }\n\n          state.disabled = data.map(function (d) {\n            return !!d.disabled;\n          });\n          dispatch.stateChange(state);\n          selection.transition().call(chart);\n        });\n        legend.dispatch.on('legendDblclick', function (d) {\n          //Double clicking should always enable current series, and disabled all others.\n          data.forEach(function (d) {\n            d.disabled = true;\n          });\n          d.disabled = false;\n          state.disabled = data.map(function (d) {\n            return !!d.disabled;\n          });\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('historicalBarChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    bars.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt['series'] = {\n        key: chart.x()(evt.data),\n        value: chart.y()(evt.data),\n        color: evt.color\n      };\n      tooltip.data(evt).hidden(false);\n    });\n    bars.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    bars.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.bars = bars;\n    chart.legend = legend;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          bars.color(color);\n        }\n      },\n      duration: {\n        get: function get() {\n          return transitionDuration;\n        },\n        set: function set(_) {\n          transitionDuration = _;\n          renderWatch.reset(transitionDuration);\n          yAxis.duration(transitionDuration);\n          xAxis.duration(transitionDuration);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n\n          if (_ === true) {\n            chart.interactive(false);\n          }\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, bars);\n    nv.utils.initOptions(chart);\n    return chart;\n  }; // ohlcChart is just a historical chart with ohlc bars and some tweaks\n\n\n  nv.models.ohlcBarChart = function () {\n    var chart = nv.models.historicalBarChart(nv.models.ohlcBar()); // special default tooltip since we show multiple values per x\n\n    chart.useInteractiveGuideline(true);\n    chart.interactiveLayer.tooltip.contentGenerator(function (data) {\n      // we assume only one series exists for this chart\n      var d = data.series[0].data; // match line colors as defined in nv.d3.css\n\n      var color = d.open < d.close ? \"2ca02c\" : \"d62728\";\n      return '' + '<h3 style=\"color: #' + color + '\">' + data.value + '</h3>' + '<table>' + '<tr><td>open:</td><td>' + chart.yAxis.tickFormat()(d.open) + '</td></tr>' + '<tr><td>close:</td><td>' + chart.yAxis.tickFormat()(d.close) + '</td></tr>' + '<tr><td>high</td><td>' + chart.yAxis.tickFormat()(d.high) + '</td></tr>' + '<tr><td>low:</td><td>' + chart.yAxis.tickFormat()(d.low) + '</td></tr>' + '</table>';\n    });\n    return chart;\n  }; // candlestickChart is just a historical chart with candlestick bars and some tweaks\n\n\n  nv.models.candlestickBarChart = function () {\n    var chart = nv.models.historicalBarChart(nv.models.candlestickBar()); // special default tooltip since we show multiple values per x\n\n    chart.useInteractiveGuideline(true);\n    chart.interactiveLayer.tooltip.contentGenerator(function (data) {\n      // we assume only one series exists for this chart\n      var d = data.series[0].data; // match line colors as defined in nv.d3.css\n\n      var color = d.open < d.close ? \"2ca02c\" : \"d62728\";\n      return '' + '<h3 style=\"color: #' + color + '\">' + data.value + '</h3>' + '<table>' + '<tr><td>open:</td><td>' + chart.yAxis.tickFormat()(d.open) + '</td></tr>' + '<tr><td>close:</td><td>' + chart.yAxis.tickFormat()(d.close) + '</td></tr>' + '<tr><td>high</td><td>' + chart.yAxis.tickFormat()(d.high) + '</td></tr>' + '<tr><td>low:</td><td>' + chart.yAxis.tickFormat()(d.low) + '</td></tr>' + '</table>';\n    });\n    return chart;\n  };\n\n  nv.models.legend = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 5,\n      right: 0,\n      bottom: 5,\n      left: 0\n    },\n        width = 400,\n        height = 20,\n        getKey = function getKey(d) {\n      return d.key;\n    },\n        keyFormatter = function keyFormatter(d) {\n      return d;\n    },\n        color = nv.utils.getColor(),\n        maxKeyLength = 20 //default value for key lengths\n    ,\n        align = true,\n        padding = 32 //define how much space between legend items. - recommend 32 for furious version\n    ,\n        rightAlign = true,\n        updateState = true //If true, legend will update data.disabled and trigger a 'stateChange' dispatch.\n    ,\n        enableDoubleClick = true //If true, legend will enable double click handling\n    ,\n        radioButtonMode = false //If true, clicking legend items will cause it to behave like a radio button. (only one can be selected at a time)\n    ,\n        expanded = false,\n        dispatch = d3.dispatch('legendClick', 'legendDblclick', 'legendMouseover', 'legendMouseout', 'stateChange'),\n        vers = 'classic' //Options are \"classic\" and \"furious\"\n    ;\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            container = d3.select(this);\n        nv.utils.initSVG(container); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-legend').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-legend').append('g');\n        var g = wrap.select('g');\n        if (rightAlign) wrap.attr('transform', 'translate(' + -margin.right + ',' + margin.top + ')');else wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var series = g.selectAll('.nv-series').data(function (d) {\n          if (vers != 'furious') return d;\n          return d.filter(function (n) {\n            return expanded ? true : !n.disengaged;\n          });\n        });\n        var seriesEnter = series.enter().append('g').attr('class', 'nv-series');\n        var seriesShape;\n        var versPadding;\n\n        switch (vers) {\n          case 'furious':\n            versPadding = 23;\n            break;\n\n          case 'classic':\n            versPadding = 20;\n        }\n\n        if (vers == 'classic') {\n          seriesEnter.append('circle').style('stroke-width', 2).attr('class', 'nv-legend-symbol').attr('r', 5);\n          seriesShape = series.select('.nv-legend-symbol');\n        } else if (vers == 'furious') {\n          seriesEnter.append('rect').style('stroke-width', 2).attr('class', 'nv-legend-symbol').attr('rx', 3).attr('ry', 3);\n          seriesShape = series.select('.nv-legend-symbol');\n          seriesEnter.append('g').attr('class', 'nv-check-box').property('innerHTML', '<path d=\"M0.5,5 L22.5,5 L22.5,26.5 L0.5,26.5 L0.5,5 Z\" class=\"nv-box\"></path><path d=\"M5.5,12.8618467 L11.9185089,19.2803556 L31,0.198864511\" class=\"nv-check\"></path>').attr('transform', 'translate(-10,-8)scale(0.5)');\n          var seriesCheckbox = series.select('.nv-check-box');\n          seriesCheckbox.each(function (d, i) {\n            d3.select(this).selectAll('path').attr('stroke', setTextColor(d, i));\n          });\n        }\n\n        seriesEnter.append('text').attr('text-anchor', 'start').attr('class', 'nv-legend-text').attr('dy', '.32em').attr('dx', '8');\n        var seriesText = series.select('text.nv-legend-text');\n        series.on('mouseover', function (d, i) {\n          dispatch.legendMouseover(d, i); //TODO: Make consistent with other event objects\n        }).on('mouseout', function (d, i) {\n          dispatch.legendMouseout(d, i);\n        }).on('click', function (d, i) {\n          dispatch.legendClick(d, i); // make sure we re-get data in case it was modified\n\n          var data = series.data();\n\n          if (updateState) {\n            if (vers == 'classic') {\n              if (radioButtonMode) {\n                //Radio button mode: set every series to disabled,\n                //  and enable the clicked series.\n                data.forEach(function (series) {\n                  series.disabled = true;\n                });\n                d.disabled = false;\n              } else {\n                d.disabled = !d.disabled;\n\n                if (data.every(function (series) {\n                  return series.disabled;\n                })) {\n                  //the default behavior of NVD3 legends is, if every single series\n                  // is disabled, turn all series' back on.\n                  data.forEach(function (series) {\n                    series.disabled = false;\n                  });\n                }\n              }\n            } else if (vers == 'furious') {\n              if (expanded) {\n                d.disengaged = !d.disengaged;\n                d.userDisabled = d.userDisabled == undefined ? !!d.disabled : d.userDisabled;\n                d.disabled = d.disengaged || d.userDisabled;\n              } else if (!expanded) {\n                d.disabled = !d.disabled;\n                d.userDisabled = d.disabled;\n                var engaged = data.filter(function (d) {\n                  return !d.disengaged;\n                });\n\n                if (engaged.every(function (series) {\n                  return series.userDisabled;\n                })) {\n                  //the default behavior of NVD3 legends is, if every single series\n                  // is disabled, turn all series' back on.\n                  data.forEach(function (series) {\n                    series.disabled = series.userDisabled = false;\n                  });\n                }\n              }\n            }\n\n            dispatch.stateChange({\n              disabled: data.map(function (d) {\n                return !!d.disabled;\n              }),\n              disengaged: data.map(function (d) {\n                return !!d.disengaged;\n              })\n            });\n          }\n        }).on('dblclick', function (d, i) {\n          if (enableDoubleClick) {\n            if (vers == 'furious' && expanded) return;\n            dispatch.legendDblclick(d, i);\n\n            if (updateState) {\n              // make sure we re-get data in case it was modified\n              var data = series.data(); //the default behavior of NVD3 legends, when double clicking one,\n              // is to set all other series' to false, and make the double clicked series enabled.\n\n              data.forEach(function (series) {\n                series.disabled = true;\n                if (vers == 'furious') series.userDisabled = series.disabled;\n              });\n              d.disabled = false;\n              if (vers == 'furious') d.userDisabled = d.disabled;\n              dispatch.stateChange({\n                disabled: data.map(function (d) {\n                  return !!d.disabled;\n                })\n              });\n            }\n          }\n        });\n        series.classed('nv-disabled', function (d) {\n          return d.userDisabled;\n        });\n        series.exit().remove();\n        seriesText.attr('fill', setTextColor).text(function (d) {\n          return keyFormatter(getKey(d));\n        }); //TODO: implement fixed-width and max-width options (max-width is especially useful with the align option)\n        // NEW ALIGNING CODE, TODO: clean up\n\n        var legendWidth = 0;\n\n        if (align) {\n          var seriesWidths = [];\n          series.each(function (d, i) {\n            var legendText;\n\n            if (keyFormatter(getKey(d)) && keyFormatter(getKey(d)).length > maxKeyLength) {\n              var trimmedKey = keyFormatter(getKey(d)).substring(0, maxKeyLength);\n              legendText = d3.select(this).select('text').text(trimmedKey + \"...\");\n              d3.select(this).append(\"svg:title\").text(keyFormatter(getKey(d)));\n            } else {\n              legendText = d3.select(this).select('text');\n            }\n\n            var nodeTextLength;\n\n            try {\n              nodeTextLength = legendText.node().getComputedTextLength(); // If the legendText is display:none'd (nodeTextLength == 0), simulate an error so we approximate, instead\n\n              if (nodeTextLength <= 0) throw Error();\n            } catch (e) {\n              nodeTextLength = nv.utils.calcApproxTextWidth(legendText);\n            }\n\n            seriesWidths.push(nodeTextLength + padding);\n          });\n          var seriesPerRow = 0;\n          var columnWidths = [];\n          legendWidth = 0;\n\n          while (legendWidth < availableWidth && seriesPerRow < seriesWidths.length) {\n            columnWidths[seriesPerRow] = seriesWidths[seriesPerRow];\n            legendWidth += seriesWidths[seriesPerRow++];\n          }\n\n          if (seriesPerRow === 0) seriesPerRow = 1; //minimum of one series per row\n\n          while (legendWidth > availableWidth && seriesPerRow > 1) {\n            columnWidths = [];\n            seriesPerRow--;\n\n            for (var k = 0; k < seriesWidths.length; k++) {\n              if (seriesWidths[k] > (columnWidths[k % seriesPerRow] || 0)) columnWidths[k % seriesPerRow] = seriesWidths[k];\n            }\n\n            legendWidth = columnWidths.reduce(function (prev, cur, index, array) {\n              return prev + cur;\n            });\n          }\n\n          var xPositions = [];\n\n          for (var i = 0, curX = 0; i < seriesPerRow; i++) {\n            xPositions[i] = curX;\n            curX += columnWidths[i];\n          }\n\n          series.attr('transform', function (d, i) {\n            return 'translate(' + xPositions[i % seriesPerRow] + ',' + (5 + Math.floor(i / seriesPerRow) * versPadding) + ')';\n          }); //position legend as far right as possible within the total width\n\n          if (rightAlign) {\n            g.attr('transform', 'translate(' + (width - margin.right - legendWidth) + ',' + margin.top + ')');\n          } else {\n            g.attr('transform', 'translate(0' + ',' + margin.top + ')');\n          }\n\n          height = margin.top + margin.bottom + Math.ceil(seriesWidths.length / seriesPerRow) * versPadding;\n        } else {\n          var ypos = 5,\n              newxpos = 5,\n              maxwidth = 0,\n              xpos;\n          series.attr('transform', function (d, i) {\n            var length = d3.select(this).select('text').node().getComputedTextLength() + padding;\n            xpos = newxpos;\n\n            if (width < margin.left + margin.right + xpos + length) {\n              newxpos = xpos = 5;\n              ypos += versPadding;\n            }\n\n            newxpos += length;\n            if (newxpos > maxwidth) maxwidth = newxpos;\n\n            if (legendWidth < xpos + maxwidth) {\n              legendWidth = xpos + maxwidth;\n            }\n\n            return 'translate(' + xpos + ',' + ypos + ')';\n          }); //position legend as far right as possible within the total width\n\n          g.attr('transform', 'translate(' + (width - margin.right - maxwidth) + ',' + margin.top + ')');\n          height = margin.top + margin.bottom + ypos + 15;\n        }\n\n        if (vers == 'furious') {\n          // Size rectangles after text is placed\n          seriesShape.attr('width', function (d, i) {\n            return seriesText[0][i].getComputedTextLength() + 27;\n          }).attr('height', 18).attr('y', -9).attr('x', -15); // The background for the expanded legend (UI)\n\n          gEnter.insert('rect', ':first-child').attr('class', 'nv-legend-bg').attr('fill', '#eee') // .attr('stroke', '#444')\n          .attr('opacity', 0);\n          var seriesBG = g.select('.nv-legend-bg');\n          seriesBG.transition().duration(300).attr('x', -versPadding).attr('width', legendWidth + versPadding - 12).attr('height', height + 10).attr('y', -margin.top - 10).attr('opacity', expanded ? 1 : 0);\n        }\n\n        seriesShape.style('fill', setBGColor).style('fill-opacity', setBGOpacity).style('stroke', setBGColor);\n      });\n\n      function setTextColor(d, i) {\n        if (vers != 'furious') return '#000';\n\n        if (expanded) {\n          return d.disengaged ? '#000' : '#fff';\n        } else if (!expanded) {\n          if (!d.color) d.color = color(d, i);\n          return !!d.disabled ? d.color : '#fff';\n        }\n      }\n\n      function setBGColor(d, i) {\n        if (expanded && vers == 'furious') {\n          return d.disengaged ? '#eee' : d.color || color(d, i);\n        } else {\n          return d.color || color(d, i);\n        }\n      }\n\n      function setBGOpacity(d, i) {\n        if (expanded && vers == 'furious') {\n          return 1;\n        } else {\n          return !!d.disabled ? 0 : 1;\n        }\n      }\n\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      key: {\n        get: function get() {\n          return getKey;\n        },\n        set: function set(_) {\n          getKey = _;\n        }\n      },\n      keyFormatter: {\n        get: function get() {\n          return keyFormatter;\n        },\n        set: function set(_) {\n          keyFormatter = _;\n        }\n      },\n      align: {\n        get: function get() {\n          return align;\n        },\n        set: function set(_) {\n          align = _;\n        }\n      },\n      maxKeyLength: {\n        get: function get() {\n          return maxKeyLength;\n        },\n        set: function set(_) {\n          maxKeyLength = _;\n        }\n      },\n      rightAlign: {\n        get: function get() {\n          return rightAlign;\n        },\n        set: function set(_) {\n          rightAlign = _;\n        }\n      },\n      padding: {\n        get: function get() {\n          return padding;\n        },\n        set: function set(_) {\n          padding = _;\n        }\n      },\n      updateState: {\n        get: function get() {\n          return updateState;\n        },\n        set: function set(_) {\n          updateState = _;\n        }\n      },\n      enableDoubleClick: {\n        get: function get() {\n          return enableDoubleClick;\n        },\n        set: function set(_) {\n          enableDoubleClick = _;\n        }\n      },\n      radioButtonMode: {\n        get: function get() {\n          return radioButtonMode;\n        },\n        set: function set(_) {\n          radioButtonMode = _;\n        }\n      },\n      expanded: {\n        get: function get() {\n          return expanded;\n        },\n        set: function set(_) {\n          expanded = _;\n        }\n      },\n      vers: {\n        get: function get() {\n          return vers;\n        },\n        set: function set(_) {\n          vers = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.line = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var scatter = nv.models.scatter();\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        container = null,\n        strokeWidth = 1.5,\n        color = nv.utils.defaultColor() // a function that returns a color\n    ,\n        getX = function getX(d) {\n      return d.x;\n    } // accessor to get the x value from a data point\n    ,\n        getY = function getY(d) {\n      return d.y;\n    } // accessor to get the y value from a data point\n    ,\n        defined = function defined(d, i) {\n      return !isNaN(getY(d, i)) && getY(d, i) !== null;\n    } // allows a line to be not continuous when it is not defined\n    ,\n        isArea = function isArea(d) {\n      return d.area;\n    } // decides if a line is an area or just a line\n    ,\n        clipEdge = false // if true, masks lines within x and y scale\n    ,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        interpolate = \"linear\" // controls the line interpolation\n    ,\n        duration = 250,\n        dispatch = d3.dispatch('elementClick', 'elementMouseover', 'elementMouseout', 'renderEnd');\n\n    scatter.pointSize(16) // default size\n    .pointDomain([16, 256]) //set to speed up calculation, needs to be unset if there is a custom size accessor\n    ; //============================================================\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0,\n        y0 //used to store previous scales\n    ,\n        renderWatch = nv.utils.renderWatch(dispatch, duration); //============================================================\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(scatter);\n      selection.each(function (data) {\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); // Setup Scales\n\n        x = scatter.xScale();\n        y = scatter.yScale();\n        x0 = x0 || x;\n        y0 = y0 || y; // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-line').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-line');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-groups');\n        gEnter.append('g').attr('class', 'nv-scatterWrap');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        scatter.width(availableWidth).height(availableHeight);\n        var scatterWrap = wrap.select('.nv-scatterWrap');\n        scatterWrap.call(scatter);\n        defsEnter.append('clipPath').attr('id', 'nv-edge-clip-' + scatter.id()).append('rect');\n        wrap.select('#nv-edge-clip-' + scatter.id() + ' rect').attr('width', availableWidth).attr('height', availableHeight > 0 ? availableHeight : 0);\n        g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + scatter.id() + ')' : '');\n        scatterWrap.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + scatter.id() + ')' : '');\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d) {\n          return d.key;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('stroke-width', function (d) {\n          return d.strokeWidth || strokeWidth;\n        }).style('fill-opacity', 1e-6);\n        groups.exit().remove();\n        groups.attr('class', function (d, i) {\n          return (d.classed || '') + ' nv-group nv-series-' + i;\n        }).classed('hover', function (d) {\n          return d.hover;\n        }).style('fill', function (d, i) {\n          return color(d, i);\n        }).style('stroke', function (d, i) {\n          return color(d, i);\n        });\n        groups.watchTransition(renderWatch, 'line: groups').style('stroke-opacity', 1).style('fill-opacity', function (d) {\n          return d.fillOpacity || .5;\n        });\n        var areaPaths = groups.selectAll('path.nv-area').data(function (d) {\n          return isArea(d) ? [d] : [];\n        }); // this is done differently than lines because I need to check if series is an area\n\n        areaPaths.enter().append('path').attr('class', 'nv-area').attr('d', function (d) {\n          return d3.svg.area().interpolate(interpolate).defined(defined).x(function (d, i) {\n            return nv.utils.NaNtoZero(x0(getX(d, i)));\n          }).y0(function (d, i) {\n            return nv.utils.NaNtoZero(y0(getY(d, i)));\n          }).y1(function (d, i) {\n            return y0(y.domain()[0] <= 0 ? y.domain()[1] >= 0 ? 0 : y.domain()[1] : y.domain()[0]);\n          }) //.y1(function(d,i) { return y0(0) }) //assuming 0 is within y domain.. may need to tweak this\n          .apply(this, [d.values]);\n        });\n        groups.exit().selectAll('path.nv-area').remove();\n        areaPaths.watchTransition(renderWatch, 'line: areaPaths').attr('d', function (d) {\n          return d3.svg.area().interpolate(interpolate).defined(defined).x(function (d, i) {\n            return nv.utils.NaNtoZero(x(getX(d, i)));\n          }).y0(function (d, i) {\n            return nv.utils.NaNtoZero(y(getY(d, i)));\n          }).y1(function (d, i) {\n            return y(y.domain()[0] <= 0 ? y.domain()[1] >= 0 ? 0 : y.domain()[1] : y.domain()[0]);\n          }) //.y1(function(d,i) { return y0(0) }) //assuming 0 is within y domain.. may need to tweak this\n          .apply(this, [d.values]);\n        });\n        var linePaths = groups.selectAll('path.nv-line').data(function (d) {\n          return [d.values];\n        });\n        linePaths.enter().append('path').attr('class', 'nv-line').attr('d', d3.svg.line().interpolate(interpolate).defined(defined).x(function (d, i) {\n          return nv.utils.NaNtoZero(x0(getX(d, i)));\n        }).y(function (d, i) {\n          return nv.utils.NaNtoZero(y0(getY(d, i)));\n        }));\n        linePaths.watchTransition(renderWatch, 'line: linePaths').attr('d', d3.svg.line().interpolate(interpolate).defined(defined).x(function (d, i) {\n          return nv.utils.NaNtoZero(x(getX(d, i)));\n        }).y(function (d, i) {\n          return nv.utils.NaNtoZero(y(getY(d, i)));\n        })); //store old scales for use in transitions on update\n\n        x0 = x.copy();\n        y0 = y.copy();\n      });\n      renderWatch.renderEnd('line immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter; // Pass through events\n\n    scatter.dispatch.on('elementClick', function () {\n      dispatch.elementClick.apply(this, arguments);\n    });\n    scatter.dispatch.on('elementMouseover', function () {\n      dispatch.elementMouseover.apply(this, arguments);\n    });\n    scatter.dispatch.on('elementMouseout', function () {\n      dispatch.elementMouseout.apply(this, arguments);\n    });\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      defined: {\n        get: function get() {\n          return defined;\n        },\n        set: function set(_) {\n          defined = _;\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return interpolate;\n        },\n        set: function set(_) {\n          interpolate = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          scatter.duration(duration);\n        }\n      },\n      isArea: {\n        get: function get() {\n          return isArea;\n        },\n        set: function set(_) {\n          isArea = d3.functor(_);\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n          scatter.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n          scatter.y(_);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          scatter.color(color);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, scatter);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.lineChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var lines = nv.models.line(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        interactiveLayer = nv.interactiveGuideline(),\n        tooltip = nv.models.tooltip(),\n        focus = nv.models.focus(nv.models.line());\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = null,\n        showLegend = true,\n        legendPosition = 'top',\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        useInteractiveGuideline = false,\n        x,\n        y,\n        focusEnable = false,\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        duration = 250; // set options on sub-objects for this chart\n\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n    lines.clipEdge(true).duration(0);\n    tooltip.valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(lines);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n\n        chart.update = function () {\n          if (duration === 0) {\n            container.call(chart);\n          } else {\n            container.transition().duration(duration).call(chart);\n          }\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display noData message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n        /* Update `main' graph on brush update. */\n\n\n        focus.dispatch.on(\"onBrush\", function (extent) {\n          onBrush(extent);\n        }); // Setup Scales\n\n        x = lines.xScale();\n        y = lines.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-lineChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-lineChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n        focusEnter.append('g').attr('class', 'nv-background').append('rect');\n        focusEnter.append('g').attr('class', 'nv-x nv-axis');\n        focusEnter.append('g').attr('class', 'nv-y nv-axis');\n        focusEnter.append('g').attr('class', 'nv-linesWrap');\n        focusEnter.append('g').attr('class', 'nv-interactive');\n        var contextEnter = gEnter.append('g').attr('class', 'nv-focusWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (legendPosition === 'bottom') {\n            margin.bottom = xAxis.height() + legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            g.select('.nv-legendWrap').attr('transform', 'translate(0,' + (availableHeight + xAxis.height()) + ')');\n          } else if (legendPosition === 'top') {\n            if (!marginTop && legend.height() !== margin.top) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n            }\n\n            wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n          }\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        }\n\n        g.select('.nv-focus .nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n        lines.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var linesWrap = g.select('.nv-linesWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        })); // Setup Main (Focus) Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n        } //============================================================\n        // Update Axes\n        //============================================================\n\n\n        function updateXAxis() {\n          if (showXAxis) {\n            g.select('.nv-focus .nv-x.nv-axis').transition().duration(duration).call(xAxis);\n          }\n        }\n\n        function updateYAxis() {\n          if (showYAxis) {\n            g.select('.nv-focus .nv-y.nv-axis').transition().duration(duration).call(yAxis);\n          }\n        }\n\n        g.select('.nv-focus .nv-x.nv-axis').attr('transform', 'translate(0,' + availableHeight + ')'); //============================================================\n        // Update Focus\n        //============================================================\n\n        if (!focusEnable && focus.brush.extent() === null) {\n          linesWrap.call(lines);\n          updateXAxis();\n          updateYAxis();\n        } else {\n          focus.width(availableWidth);\n          g.select('.nv-focusWrap').style('display', focusEnable ? 'initial' : 'none').attr('transform', 'translate(0,' + (availableHeight + margin.bottom + focus.margin().top) + ')').call(focus);\n          var extent = focus.brush.empty() ? focus.xDomain() : focus.brush.extent();\n\n          if (extent !== null) {\n            onBrush(extent);\n          }\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        interactiveLayer.dispatch.on('elementMousemove', function (e) {\n          lines.clearHighlights();\n          var singlePoint,\n              pointIndex,\n              pointXLocation,\n              allData = [];\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !series.disabled && !series.disableTooltip;\n          }).forEach(function (series, i) {\n            var extent = focus.brush.extent() !== null ? focus.brush.empty() ? focus.xScale().domain() : focus.brush.extent() : x.domain();\n            var currentValues = series.values.filter(function (d, i) {\n              // Checks if the x point is between the extents, handling case where extent[0] is greater than extent[1]\n              // (e.g. x domain is manually set to reverse the x-axis)\n              if (extent[0] <= extent[1]) {\n                return lines.x()(d, i) >= extent[0] && lines.x()(d, i) <= extent[1];\n              } else {\n                return lines.x()(d, i) >= extent[1] && lines.x()(d, i) <= extent[0];\n              }\n            });\n            pointIndex = nv.interactiveBisect(currentValues, e.pointXValue, lines.x());\n            var point = currentValues[pointIndex];\n            var pointYValue = chart.y()(point, pointIndex);\n\n            if (pointYValue !== null) {\n              lines.highlightPoint(i, pointIndex, true);\n            }\n\n            if (point === undefined) return;\n            if (singlePoint === undefined) singlePoint = point;\n            if (pointXLocation === undefined) pointXLocation = chart.xScale()(chart.x()(point, pointIndex));\n            allData.push({\n              key: series.key,\n              value: pointYValue,\n              color: color(series, series.seriesIndex),\n              data: point\n            });\n          }); //Highlight the tooltip entry based on which point the mouse is closest to.\n\n          if (allData.length > 2) {\n            var yValue = chart.yScale().invert(e.mouseY);\n            var domainExtent = Math.abs(chart.yScale().domain()[0] - chart.yScale().domain()[1]);\n            var threshold = 0.03 * domainExtent;\n            var indexToHighlight = nv.nearestValueIndex(allData.map(function (d) {\n              return d.value;\n            }), yValue, threshold);\n            if (indexToHighlight !== null) allData[indexToHighlight].highlight = true;\n          }\n\n          var defaultValueFormatter = function defaultValueFormatter(d, i) {\n            return d == null ? \"N/A\" : yAxis.tickFormat()(d);\n          };\n\n          interactiveLayer.tooltip.valueFormatter(interactiveLayer.tooltip.valueFormatter() || defaultValueFormatter).data({\n            value: chart.x()(singlePoint, pointIndex),\n            index: pointIndex,\n            series: allData\n          })();\n          interactiveLayer.renderGuideLine(pointXLocation);\n        });\n        interactiveLayer.dispatch.on('elementClick', function (e) {\n          var pointXLocation,\n              allData = [];\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !series.disabled;\n          }).forEach(function (series) {\n            var pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n            var point = series.values[pointIndex];\n            if (typeof point === 'undefined') return;\n            if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point, pointIndex));\n            var yPos = chart.yScale()(chart.y()(point, pointIndex));\n            allData.push({\n              point: point,\n              pointIndex: pointIndex,\n              pos: [pointXLocation, yPos],\n              seriesIndex: series.seriesIndex,\n              series: series\n            });\n          });\n          lines.dispatch.elementClick(allData);\n        });\n        interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n          lines.clearHighlights();\n        });\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined' && data.length === e.disabled.length) {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        }); //============================================================\n        // Functions\n        //------------------------------------------------------------\n        // Taken from crossfilter (http://square.github.com/crossfilter/)\n\n        function resizePath(d) {\n          var e = +(d == 'e'),\n              x = e ? 1 : -1,\n              y = availableHeight / 3;\n          return 'M' + 0.5 * x + ',' + y + 'A6,6 0 0 ' + e + ' ' + 6.5 * x + ',' + (y + 6) + 'V' + (2 * y - 6) + 'A6,6 0 0 ' + e + ' ' + 0.5 * x + ',' + 2 * y + 'Z' + 'M' + 2.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8) + 'M' + 4.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8);\n        }\n\n        function onBrush(extent) {\n          // Update Main (Focus)\n          var focusLinesWrap = g.select('.nv-focus .nv-linesWrap').datum(data.filter(function (d) {\n            return !d.disabled;\n          }).map(function (d, i) {\n            return {\n              key: d.key,\n              area: d.area,\n              classed: d.classed,\n              values: d.values.filter(function (d, i) {\n                return lines.x()(d, i) >= extent[0] && lines.x()(d, i) <= extent[1];\n              }),\n              disableTooltip: d.disableTooltip\n            };\n          }));\n          focusLinesWrap.transition().duration(duration).call(lines); // Update Main (Focus) Axes\n\n          updateXAxis();\n          updateYAxis();\n        }\n      });\n      renderWatch.renderEnd('lineChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    lines.dispatch.on('elementMouseover.tooltip', function (evt) {\n      if (!evt.series.disableTooltip) {\n        tooltip.data(evt).hidden(false);\n      }\n    });\n    lines.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.lines = lines;\n    chart.legend = legend;\n    chart.focus = focus;\n    chart.xAxis = xAxis;\n    chart.x2Axis = focus.xAxis;\n    chart.yAxis = yAxis;\n    chart.y2Axis = focus.yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.tooltip = tooltip;\n    chart.state = state;\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // Focus options, mostly passed onto focus model.\n      focusEnable: {\n        get: function get() {\n          return focusEnable;\n        },\n        set: function set(_) {\n          focusEnable = _;\n        }\n      },\n      focusHeight: {\n        get: function get() {\n          return focus.height();\n        },\n        set: function set(_) {\n          focus.height(_);\n        }\n      },\n      focusShowAxisX: {\n        get: function get() {\n          return focus.showXAxis();\n        },\n        set: function set(_) {\n          focus.showXAxis(_);\n        }\n      },\n      focusShowAxisY: {\n        get: function get() {\n          return focus.showYAxis();\n        },\n        set: function set(_) {\n          focus.showYAxis(_);\n        }\n      },\n      brushExtent: {\n        get: function get() {\n          return focus.brushExtent();\n        },\n        set: function set(_) {\n          focus.brushExtent(_);\n        }\n      },\n      // options that require extra logic in the setter\n      focusMargin: {\n        get: function get() {\n          return focus.margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          focus.margin.right = _.right !== undefined ? _.right : focus.margin.right;\n          focus.margin.bottom = _.bottom !== undefined ? _.bottom : focus.margin.bottom;\n          focus.margin.left = _.left !== undefined ? _.left : focus.margin.left;\n        }\n      },\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          lines.duration(duration);\n          focus.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          lines.color(color);\n          focus.color(color);\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return lines.interpolate();\n        },\n        set: function set(_) {\n          lines.interpolate(_);\n          focus.interpolate(_);\n        }\n      },\n      xTickFormat: {\n        get: function get() {\n          return xAxis.tickFormat();\n        },\n        set: function set(_) {\n          xAxis.tickFormat(_);\n          focus.xTickFormat(_);\n        }\n      },\n      yTickFormat: {\n        get: function get() {\n          return yAxis.tickFormat();\n        },\n        set: function set(_) {\n          yAxis.tickFormat(_);\n          focus.yTickFormat(_);\n        }\n      },\n      x: {\n        get: function get() {\n          return lines.x();\n        },\n        set: function set(_) {\n          lines.x(_);\n          focus.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return lines.y();\n        },\n        set: function set(_) {\n          lines.y(_);\n          focus.y(_);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n\n          if (useInteractiveGuideline) {\n            lines.interactive(false);\n            lines.useVoronoi(false);\n          }\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, lines);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.lineWithFocusChart = function () {\n    return nv.models.lineChart().margin({\n      bottom: 30\n    }).focusEnable(true);\n  };\n\n  nv.models.linePlusBarChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var lines = nv.models.line(),\n        lines2 = nv.models.line(),\n        bars = nv.models.historicalBar(),\n        bars2 = nv.models.historicalBar(),\n        xAxis = nv.models.axis(),\n        x2Axis = nv.models.axis(),\n        y1Axis = nv.models.axis(),\n        y2Axis = nv.models.axis(),\n        y3Axis = nv.models.axis(),\n        y4Axis = nv.models.axis(),\n        legend = nv.models.legend(),\n        brush = d3.svg.brush(),\n        tooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 30,\n      right: 30,\n      bottom: 30,\n      left: 60\n    },\n        marginTop = null,\n        margin2 = {\n      top: 0,\n      right: 30,\n      bottom: 20,\n      left: 60\n    },\n        width = null,\n        height = null,\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        color = nv.utils.defaultColor(),\n        showLegend = true,\n        focusEnable = true,\n        focusShowAxisY = false,\n        focusShowAxisX = true,\n        focusHeight = 50,\n        extent,\n        brushExtent = null,\n        x,\n        x2,\n        y1,\n        y2,\n        y3,\n        y4,\n        noData = null,\n        dispatch = d3.dispatch('brush', 'stateChange', 'changeState'),\n        transitionDuration = 0,\n        state = nv.utils.state(),\n        defaultState = null,\n        legendLeftAxisHint = ' (left axis)',\n        legendRightAxisHint = ' (right axis)',\n        switchYAxisOrder = false;\n\n    lines.clipEdge(true);\n    lines2.interactive(false); // We don't want any points emitted for the focus chart's scatter graph.\n\n    lines2.pointActive(function (d) {\n      return false;\n    });\n    xAxis.orient('bottom').tickPadding(5);\n    y1Axis.orient('left');\n    y2Axis.orient('right');\n    x2Axis.orient('bottom').tickPadding(5);\n    y3Axis.orient('left');\n    y4Axis.orient('right');\n    tooltip.headerEnabled(true).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var getBarsAxis = function getBarsAxis() {\n      return switchYAxisOrder ? {\n        main: y2Axis,\n        focus: y4Axis\n      } : {\n        main: y1Axis,\n        focus: y3Axis\n      };\n    };\n\n    var getLinesAxis = function getLinesAxis() {\n      return switchYAxisOrder ? {\n        main: y1Axis,\n        focus: y3Axis\n      } : {\n        main: y2Axis,\n        focus: y4Axis\n      };\n    };\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    var allDisabled = function allDisabled(data) {\n      return data.every(function (series) {\n        return series.disabled;\n      });\n    };\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight1 = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focusHeight : 0),\n            availableHeight2 = focusHeight - margin2.top - margin2.bottom;\n\n        chart.update = function () {\n          container.transition().duration(transitionDuration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        var dataBars = data.filter(function (d) {\n          return !d.disabled && d.bar;\n        });\n        var dataLines = data.filter(function (d) {\n          return !d.bar;\n        }); // removed the !d.disabled clause here to fix Issue #240\n\n        if (dataBars.length && !switchYAxisOrder) {\n          x = bars.xScale();\n        } else {\n          x = lines.xScale();\n        }\n\n        x2 = x2Axis.scale(); // select the scales and series based on the position of the yAxis\n\n        y1 = switchYAxisOrder ? lines.yScale() : bars.yScale();\n        y2 = switchYAxisOrder ? bars.yScale() : lines.yScale();\n        y3 = switchYAxisOrder ? lines2.yScale() : bars2.yScale();\n        y4 = switchYAxisOrder ? bars2.yScale() : lines2.yScale();\n        var series1 = data.filter(function (d) {\n          return !d.disabled && (switchYAxisOrder ? !d.bar : d.bar);\n        }).map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i)\n            };\n          });\n        });\n        var series2 = data.filter(function (d) {\n          return !d.disabled && (switchYAxisOrder ? d.bar : !d.bar);\n        }).map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i)\n            };\n          });\n        });\n        x.range([0, availableWidth]);\n        x2.domain(d3.extent(d3.merge(series1.concat(series2)), function (d) {\n          return d.x;\n        })).range([0, availableWidth]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-linePlusBar').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-linePlusBar').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-legendWrap'); // this is the main chart\n\n        var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n        focusEnter.append('g').attr('class', 'nv-x nv-axis');\n        focusEnter.append('g').attr('class', 'nv-y1 nv-axis');\n        focusEnter.append('g').attr('class', 'nv-y2 nv-axis');\n        focusEnter.append('g').attr('class', 'nv-barsWrap');\n        focusEnter.append('g').attr('class', 'nv-linesWrap'); // context chart is where you can focus in\n\n        var contextEnter = gEnter.append('g').attr('class', 'nv-context');\n        contextEnter.append('g').attr('class', 'nv-x nv-axis');\n        contextEnter.append('g').attr('class', 'nv-y1 nv-axis');\n        contextEnter.append('g').attr('class', 'nv-y2 nv-axis');\n        contextEnter.append('g').attr('class', 'nv-barsWrap');\n        contextEnter.append('g').attr('class', 'nv-linesWrap');\n        contextEnter.append('g').attr('class', 'nv-brushBackground');\n        contextEnter.append('g').attr('class', 'nv-x nv-brush'); //============================================================\n        // Legend\n        //------------------------------------------------------------\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          var legendWidth = legend.align() ? availableWidth / 2 : availableWidth;\n          var legendXPosition = legend.align() ? legendWidth : 0;\n          legend.width(legendWidth);\n          g.select('.nv-legendWrap').datum(data.map(function (series) {\n            series.originalKey = series.originalKey === undefined ? series.key : series.originalKey;\n\n            if (switchYAxisOrder) {\n              series.key = series.originalKey + (series.bar ? legendRightAxisHint : legendLeftAxisHint);\n            } else {\n              series.key = series.originalKey + (series.bar ? legendLeftAxisHint : legendRightAxisHint);\n            }\n\n            return series;\n          })).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height(); // FIXME: shouldn't this be \"- (focusEnabled ? focusHeight : 0)\"?\n\n            availableHeight1 = nv.utils.availableHeight(height, container, margin) - focusHeight;\n          }\n\n          g.select('.nv-legendWrap').attr('transform', 'translate(' + legendXPosition + ',' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); //============================================================\n        // Context chart (focus chart) components\n        //------------------------------------------------------------\n        // hide or show the focus context chart\n\n        g.select('.nv-context').style('display', focusEnable ? 'initial' : 'none');\n        bars2.width(availableWidth).height(availableHeight2).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled && data[i].bar;\n        }));\n        lines2.width(availableWidth).height(availableHeight2).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled && !data[i].bar;\n        }));\n        var bars2Wrap = g.select('.nv-context .nv-barsWrap').datum(dataBars.length ? dataBars : [{\n          values: []\n        }]);\n        var lines2Wrap = g.select('.nv-context .nv-linesWrap').datum(allDisabled(dataLines) ? [{\n          values: []\n        }] : dataLines.filter(function (dataLine) {\n          return !dataLine.disabled;\n        }));\n        g.select('.nv-context').attr('transform', 'translate(0,' + (availableHeight1 + margin.bottom + margin2.top) + ')');\n        bars2Wrap.transition().call(bars2);\n        lines2Wrap.transition().call(lines2); // context (focus chart) axis controls\n\n        if (focusShowAxisX) {\n          x2Axis._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight2, 0);\n\n          g.select('.nv-context .nv-x.nv-axis').attr('transform', 'translate(0,' + y3.range()[0] + ')');\n          g.select('.nv-context .nv-x.nv-axis').transition().call(x2Axis);\n        }\n\n        if (focusShowAxisY) {\n          y3Axis.scale(y3)._ticks(availableHeight2 / 36).tickSize(-availableWidth, 0);\n\n          y4Axis.scale(y4)._ticks(availableHeight2 / 36).tickSize(dataBars.length ? 0 : -availableWidth, 0); // Show the y2 rules only if y1 has none\n\n\n          g.select('.nv-context .nv-y3.nv-axis').style('opacity', dataBars.length ? 1 : 0).attr('transform', 'translate(0,' + x2.range()[0] + ')');\n          g.select('.nv-context .nv-y2.nv-axis').style('opacity', dataLines.length ? 1 : 0).attr('transform', 'translate(' + x2.range()[1] + ',0)');\n          g.select('.nv-context .nv-y1.nv-axis').transition().call(y3Axis);\n          g.select('.nv-context .nv-y2.nv-axis').transition().call(y4Axis);\n        } // Setup Brush\n\n\n        brush.x(x2).on('brush', onBrush);\n        if (brushExtent) brush.extent(brushExtent);\n        var brushBG = g.select('.nv-brushBackground').selectAll('g').data([brushExtent || brush.extent()]);\n        var brushBGenter = brushBG.enter().append('g');\n        brushBGenter.append('rect').attr('class', 'left').attr('x', 0).attr('y', 0).attr('height', availableHeight2);\n        brushBGenter.append('rect').attr('class', 'right').attr('x', 0).attr('y', 0).attr('height', availableHeight2);\n        var gBrush = g.select('.nv-x.nv-brush').call(brush);\n        gBrush.selectAll('rect') //.attr('y', -5)\n        .attr('height', availableHeight2);\n        gBrush.selectAll('.resize').append('path').attr('d', resizePath); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        }); //============================================================\n        // Functions\n        //------------------------------------------------------------\n        // Taken from crossfilter (http://square.github.com/crossfilter/)\n\n        function resizePath(d) {\n          var e = +(d == 'e'),\n              x = e ? 1 : -1,\n              y = availableHeight2 / 3;\n          return 'M' + .5 * x + ',' + y + 'A6,6 0 0 ' + e + ' ' + 6.5 * x + ',' + (y + 6) + 'V' + (2 * y - 6) + 'A6,6 0 0 ' + e + ' ' + .5 * x + ',' + 2 * y + 'Z' + 'M' + 2.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8) + 'M' + 4.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8);\n        }\n\n        function updateBrushBG() {\n          if (!brush.empty()) brush.extent(brushExtent);\n          brushBG.data([brush.empty() ? x2.domain() : brushExtent]).each(function (d, i) {\n            var leftWidth = x2(d[0]) - x2.range()[0],\n                rightWidth = x2.range()[1] - x2(d[1]);\n            d3.select(this).select('.left').attr('width', leftWidth < 0 ? 0 : leftWidth);\n            d3.select(this).select('.right').attr('x', x2(d[1])).attr('width', rightWidth < 0 ? 0 : rightWidth);\n          });\n        }\n\n        function onBrush() {\n          brushExtent = brush.empty() ? null : brush.extent();\n          extent = brush.empty() ? x2.domain() : brush.extent();\n          dispatch.brush({\n            extent: extent,\n            brush: brush\n          });\n          updateBrushBG(); // Prepare Main (Focus) Bars and Lines\n\n          bars.width(availableWidth).height(availableHeight1).color(data.map(function (d, i) {\n            return d.color || color(d, i);\n          }).filter(function (d, i) {\n            return !data[i].disabled && data[i].bar;\n          }));\n          lines.width(availableWidth).height(availableHeight1).color(data.map(function (d, i) {\n            return d.color || color(d, i);\n          }).filter(function (d, i) {\n            return !data[i].disabled && !data[i].bar;\n          }));\n          var focusBarsWrap = g.select('.nv-focus .nv-barsWrap').datum(!dataBars.length ? [{\n            values: []\n          }] : dataBars.map(function (d, i) {\n            return {\n              key: d.key,\n              values: d.values.filter(function (d, i) {\n                return bars.x()(d, i) >= extent[0] && bars.x()(d, i) <= extent[1];\n              })\n            };\n          }));\n          var focusLinesWrap = g.select('.nv-focus .nv-linesWrap').datum(allDisabled(dataLines) ? [{\n            values: []\n          }] : dataLines.filter(function (dataLine) {\n            return !dataLine.disabled;\n          }).map(function (d, i) {\n            return {\n              area: d.area,\n              fillOpacity: d.fillOpacity,\n              strokeWidth: d.strokeWidth,\n              key: d.key,\n              values: d.values.filter(function (d, i) {\n                return lines.x()(d, i) >= extent[0] && lines.x()(d, i) <= extent[1];\n              })\n            };\n          })); // Update Main (Focus) X Axis\n\n          if (dataBars.length && !switchYAxisOrder) {\n            x = bars.xScale();\n          } else {\n            x = lines.xScale();\n          }\n\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight1, 0);\n\n          xAxis.domain([Math.ceil(extent[0]), Math.floor(extent[1])]);\n          g.select('.nv-x.nv-axis').transition().duration(transitionDuration).call(xAxis); // Update Main (Focus) Bars and Lines\n\n          focusBarsWrap.transition().duration(transitionDuration).call(bars);\n          focusLinesWrap.transition().duration(transitionDuration).call(lines); // Setup and Update Main (Focus) Y Axes\n\n          g.select('.nv-focus .nv-x.nv-axis').attr('transform', 'translate(0,' + y1.range()[0] + ')');\n\n          y1Axis.scale(y1)._ticks(nv.utils.calcTicksY(availableHeight1 / 36, data)).tickSize(-availableWidth, 0);\n\n          y2Axis.scale(y2)._ticks(nv.utils.calcTicksY(availableHeight1 / 36, data)); // Show the y2 rules only if y1 has none\n\n\n          if (!switchYAxisOrder) {\n            y2Axis.tickSize(dataBars.length ? 0 : -availableWidth, 0);\n          } else {\n            y2Axis.tickSize(dataLines.length ? 0 : -availableWidth, 0);\n          } // Calculate opacity of the axis\n\n\n          var barsOpacity = dataBars.length ? 1 : 0;\n          var linesOpacity = dataLines.length && !allDisabled(dataLines) ? 1 : 0;\n          var y1Opacity = switchYAxisOrder ? linesOpacity : barsOpacity;\n          var y2Opacity = switchYAxisOrder ? barsOpacity : linesOpacity;\n          g.select('.nv-focus .nv-y1.nv-axis').style('opacity', y1Opacity);\n          g.select('.nv-focus .nv-y2.nv-axis').style('opacity', y2Opacity).attr('transform', 'translate(' + x.range()[1] + ',0)');\n          g.select('.nv-focus .nv-y1.nv-axis').transition().duration(transitionDuration).call(y1Axis);\n          g.select('.nv-focus .nv-y2.nv-axis').transition().duration(transitionDuration).call(y2Axis);\n        }\n\n        onBrush();\n      });\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    lines.dispatch.on('elementMouseover.tooltip', function (evt) {\n      tooltip.duration(100).valueFormatter(function (d, i) {\n        return getLinesAxis().main.tickFormat()(d, i);\n      }).data(evt).hidden(false);\n    });\n    lines.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    bars.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt.value = chart.x()(evt.data);\n      evt['series'] = {\n        value: chart.y()(evt.data),\n        color: evt.color\n      };\n      tooltip.duration(0).valueFormatter(function (d, i) {\n        return getBarsAxis().main.tickFormat()(d, i);\n      }).data(evt).hidden(false);\n    });\n    bars.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    bars.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.legend = legend;\n    chart.lines = lines;\n    chart.lines2 = lines2;\n    chart.bars = bars;\n    chart.bars2 = bars2;\n    chart.xAxis = xAxis;\n    chart.x2Axis = x2Axis;\n    chart.y1Axis = y1Axis;\n    chart.y2Axis = y2Axis;\n    chart.y3Axis = y3Axis;\n    chart.y4Axis = y4Axis;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      brushExtent: {\n        get: function get() {\n          return brushExtent;\n        },\n        set: function set(_) {\n          brushExtent = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      focusEnable: {\n        get: function get() {\n          return focusEnable;\n        },\n        set: function set(_) {\n          focusEnable = _;\n        }\n      },\n      focusHeight: {\n        get: function get() {\n          return focusHeight;\n        },\n        set: function set(_) {\n          focusHeight = _;\n        }\n      },\n      focusShowAxisX: {\n        get: function get() {\n          return focusShowAxisX;\n        },\n        set: function set(_) {\n          focusShowAxisX = _;\n        }\n      },\n      focusShowAxisY: {\n        get: function get() {\n          return focusShowAxisY;\n        },\n        set: function set(_) {\n          focusShowAxisY = _;\n        }\n      },\n      legendLeftAxisHint: {\n        get: function get() {\n          return legendLeftAxisHint;\n        },\n        set: function set(_) {\n          legendLeftAxisHint = _;\n        }\n      },\n      legendRightAxisHint: {\n        get: function get() {\n          return legendRightAxisHint;\n        },\n        set: function set(_) {\n          legendRightAxisHint = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      focusMargin: {\n        get: function get() {\n          return margin2;\n        },\n        set: function set(_) {\n          margin2.top = _.top !== undefined ? _.top : margin2.top;\n          margin2.right = _.right !== undefined ? _.right : margin2.right;\n          margin2.bottom = _.bottom !== undefined ? _.bottom : margin2.bottom;\n          margin2.left = _.left !== undefined ? _.left : margin2.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return transitionDuration;\n        },\n        set: function set(_) {\n          transitionDuration = _;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n          lines.x(_);\n          lines2.x(_);\n          bars.x(_);\n          bars2.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n          lines.y(_);\n          lines2.y(_);\n          bars.y(_);\n          bars2.y(_);\n        }\n      },\n      switchYAxisOrder: {\n        get: function get() {\n          return switchYAxisOrder;\n        },\n        set: function set(_) {\n          // Switch the tick format for the yAxis\n          if (switchYAxisOrder !== _) {\n            var y1 = y1Axis;\n            y1Axis = y2Axis;\n            y2Axis = y1;\n            var y3 = y3Axis;\n            y3Axis = y4Axis;\n            y4Axis = y3;\n          }\n\n          switchYAxisOrder = _;\n          y1Axis.orient('left');\n          y2Axis.orient('right');\n          y3Axis.orient('left');\n          y4Axis.orient('right');\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, lines);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        x = d3.scale.ordinal(),\n        y = d3.scale.linear(),\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n    ,\n        clipEdge = true,\n        stacked = false,\n        stackOffset = 'zero' // options include 'silhouette', 'wiggle', 'expand', 'zero', or a custom function\n    ,\n        color = nv.utils.defaultColor(),\n        hideable = false,\n        barColor = null // adding the ability to set the color for each rather than the whole group\n    ,\n        disabled // used in conjunction with barColor to communicate from multiBarHorizontalChart what series are disabled\n    ,\n        duration = 500,\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        groupSpacing = 0.1,\n        fillOpacity = 0.75,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x0,\n        y0 //used to store previous scales\n    ,\n        renderWatch = nv.utils.renderWatch(dispatch, duration);\n    var last_datalength = 0;\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        var nonStackableCount = 0; // This function defines the requirements for render complete\n\n        var endFn = function endFn(d, i) {\n          if (d.series === data.length - 1 && i === data[0].values.length - 1) return true;\n          return false;\n        };\n\n        if (hideable && data.length) hideable = [{\n          values: data[0].values.map(function (d) {\n            return {\n              x: d.x,\n              y: 0,\n              series: d.series,\n              size: 0.01\n            };\n          })\n        }];\n\n        if (stacked) {\n          var parsed = d3.layout.stack().offset(stackOffset).values(function (d) {\n            return d.values;\n          }).y(getY)(!data.length && hideable ? hideable : data);\n          parsed.forEach(function (series, i) {\n            // if series is non-stackable, use un-parsed data\n            if (series.nonStackable) {\n              data[i].nonStackableSeries = nonStackableCount++;\n              parsed[i] = data[i];\n            } else {\n              // don't stack this seires on top of the nonStackable seriees\n              if (i > 0 && parsed[i - 1].nonStackable) {\n                parsed[i].values.map(function (d, j) {\n                  d.y0 -= parsed[i - 1].values[j].y;\n                  d.y1 = d.y0 + d.y;\n                });\n              }\n            }\n          });\n          data = parsed;\n        } //add series index and key to each data point for reference\n\n\n        data.forEach(function (series, i) {\n          series.values.forEach(function (point) {\n            point.series = i;\n            point.key = series.key;\n          });\n        }); // HACK for negative value stacking\n\n        if (stacked && data.length > 0) {\n          data[0].values.map(function (d, i) {\n            var posBase = 0,\n                negBase = 0;\n            data.map(function (d, idx) {\n              if (!data[idx].nonStackable) {\n                var f = d.values[i];\n                f.size = Math.abs(f.y);\n\n                if (f.y < 0) {\n                  f.y1 = negBase;\n                  negBase = negBase - f.size;\n                } else {\n                  f.y1 = f.size + posBase;\n                  posBase = posBase + f.size;\n                }\n              }\n            });\n          });\n        } // Setup Scales\n        // remap and flatten the data for use in calculating the scales' domains\n\n\n        var seriesData = xDomain && yDomain ? [] : // if we know xDomain and yDomain, no need to calculate\n        data.map(function (d, idx) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i),\n              y0: d.y0,\n              y1: d.y1,\n              idx: idx\n            };\n          });\n        });\n        x.domain(xDomain || d3.merge(seriesData).map(function (d) {\n          return d.x;\n        })).rangeBands(xRange || [0, availableWidth], groupSpacing);\n        y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function (d) {\n          var domain = d.y; // increase the domain range if this series is stackable\n\n          if (stacked && !data[d.idx].nonStackable) {\n            if (d.y > 0) {\n              domain = d.y1;\n            } else {\n              domain = d.y1 + d.y;\n            }\n          }\n\n          return domain;\n        }).concat(forceY))).range(yRange || [availableHeight, 0]); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01]) : y.domain([-1, 1]);\n        x0 = x0 || x;\n        y0 = y0 || y; // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-multibar').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multibar');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-groups');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        defsEnter.append('clipPath').attr('id', 'nv-edge-clip-' + id).append('rect');\n        wrap.select('#nv-edge-clip-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d, i) {\n          return i;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        var exitTransition = renderWatch.transition(groups.exit().selectAll('rect.nv-bar'), 'multibarExit', Math.min(100, duration)).attr('y', function (d, i, j) {\n          var yVal = y0(0) || 0;\n\n          if (stacked) {\n            if (data[d.series] && !data[d.series].nonStackable) {\n              yVal = y0(d.y0);\n            }\n          }\n\n          return yVal;\n        }).attr('height', 0).remove();\n        if (exitTransition.delay) exitTransition.delay(function (d, i) {\n          var delay = i * (duration / (last_datalength + 1)) - i;\n          return delay;\n        });\n        groups.attr('class', function (d, i) {\n          return 'nv-group nv-series-' + i;\n        }).classed('hover', function (d) {\n          return d.hover;\n        }).style('fill', function (d, i) {\n          return color(d, i);\n        }).style('stroke', function (d, i) {\n          return color(d, i);\n        });\n        groups.style('stroke-opacity', 1).style('fill-opacity', fillOpacity);\n        var bars = groups.selectAll('rect.nv-bar').data(function (d) {\n          return hideable && !data.length ? hideable.values : d.values;\n        });\n        bars.exit().remove();\n        var barsEnter = bars.enter().append('rect').attr('class', function (d, i) {\n          return getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive';\n        }).attr('x', function (d, i, j) {\n          return stacked && !data[j].nonStackable ? 0 : j * x.rangeBand() / data.length;\n        }).attr('y', function (d, i, j) {\n          return y0(stacked && !data[j].nonStackable ? d.y0 : 0) || 0;\n        }).attr('height', 0).attr('width', function (d, i, j) {\n          return x.rangeBand() / (stacked && !data[j].nonStackable ? 1 : data.length);\n        }).attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',0)';\n        });\n        bars.style('fill', function (d, i, j) {\n          return color(d, j, i);\n        }).style('stroke', function (d, i, j) {\n          return color(d, j, i);\n        }).on('mouseover', function (d, i, j) {\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i, j) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function (d, i, j) {\n          dispatch.elementMousemove({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('click', function (d, i, j) {\n          var element = this;\n          dispatch.elementClick({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n          d3.event.stopPropagation();\n        }).on('dblclick', function (d, i, j) {\n          dispatch.elementDblClick({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\")\n          });\n          d3.event.stopPropagation();\n        });\n        bars.attr('class', function (d, i) {\n          return getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive';\n        }).attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',0)';\n        });\n\n        if (barColor) {\n          if (!disabled) disabled = data.map(function () {\n            return true;\n          });\n          bars.style('fill', function (d, i, j) {\n            return d3.rgb(barColor(d, i)).darker(disabled.map(function (d, i) {\n              return i;\n            }).filter(function (d, i) {\n              return !disabled[i];\n            })[j]).toString();\n          }).style('stroke', function (d, i, j) {\n            return d3.rgb(barColor(d, i)).darker(disabled.map(function (d, i) {\n              return i;\n            }).filter(function (d, i) {\n              return !disabled[i];\n            })[j]).toString();\n          });\n        }\n\n        var barSelection = bars.watchTransition(renderWatch, 'multibar', Math.min(250, duration)).delay(function (d, i) {\n          return i * duration / data[0].values.length;\n        });\n\n        if (stacked) {\n          barSelection.attr('y', function (d, i, j) {\n            var yVal = 0; // if stackable, stack it on top of the previous series\n\n            if (!data[j].nonStackable) {\n              yVal = y(d.y1);\n            } else {\n              if (getY(d, i) < 0) {\n                yVal = y(0);\n              } else {\n                if (y(0) - y(getY(d, i)) < -1) {\n                  yVal = y(0) - 1;\n                } else {\n                  yVal = y(getY(d, i)) || 0;\n                }\n              }\n            }\n\n            return yVal;\n          }).attr('height', function (d, i, j) {\n            if (!data[j].nonStackable) {\n              return Math.max(Math.abs(y(d.y + d.y0) - y(d.y0)), 0);\n            } else {\n              return Math.max(Math.abs(y(getY(d, i)) - y(0)), 0) || 0;\n            }\n          }).attr('x', function (d, i, j) {\n            var width = 0;\n\n            if (data[j].nonStackable) {\n              width = d.series * x.rangeBand() / data.length;\n\n              if (data.length !== nonStackableCount) {\n                width = data[j].nonStackableSeries * x.rangeBand() / (nonStackableCount * 2);\n              }\n            }\n\n            return width;\n          }).attr('width', function (d, i, j) {\n            if (!data[j].nonStackable) {\n              return x.rangeBand();\n            } else {\n              // if all series are nonStacable, take the full width\n              var width = x.rangeBand() / nonStackableCount; // otherwise, nonStackable graph will be only taking the half-width\n              // of the x rangeBand\n\n              if (data.length !== nonStackableCount) {\n                width = x.rangeBand() / (nonStackableCount * 2);\n              }\n\n              return width;\n            }\n          });\n        } else {\n          barSelection.attr('x', function (d, i) {\n            return d.series * x.rangeBand() / data.length;\n          }).attr('width', x.rangeBand() / data.length).attr('y', function (d, i) {\n            return getY(d, i) < 0 ? y(0) : y(0) - y(getY(d, i)) < 1 ? y(0) - 1 : y(getY(d, i)) || 0;\n          }).attr('height', function (d, i) {\n            return Math.max(Math.abs(y(getY(d, i)) - y(0)), 1) || 0;\n          });\n        } //store old scales for use in transitions on update\n\n\n        x0 = x.copy();\n        y0 = y.copy(); // keep track of the last data value length for transition calculations\n\n        if (data[0] && data[0].values) {\n          last_datalength = data[0].values.length;\n        }\n      });\n      renderWatch.renderEnd('multibar immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      stacked: {\n        get: function get() {\n          return stacked;\n        },\n        set: function set(_) {\n          stacked = _;\n        }\n      },\n      stackOffset: {\n        get: function get() {\n          return stackOffset;\n        },\n        set: function set(_) {\n          stackOffset = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      disabled: {\n        get: function get() {\n          return disabled;\n        },\n        set: function set(_) {\n          disabled = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      hideable: {\n        get: function get() {\n          return hideable;\n        },\n        set: function set(_) {\n          hideable = _;\n        }\n      },\n      groupSpacing: {\n        get: function get() {\n          return groupSpacing;\n        },\n        set: function set(_) {\n          groupSpacing = _;\n        }\n      },\n      fillOpacity: {\n        get: function get() {\n          return fillOpacity;\n        },\n        set: function set(_) {\n          fillOpacity = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      barColor: {\n        get: function get() {\n          return barColor;\n        },\n        set: function set(_) {\n          barColor = _ ? nv.utils.getColor(_) : null;\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiBarChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var multibar = nv.models.multiBar(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        interactiveLayer = nv.interactiveGuideline(),\n        legend = nv.models.legend(),\n        controls = nv.models.legend(),\n        tooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor(),\n        showControls = true,\n        controlLabels = {},\n        showLegend = true,\n        legendPosition = null,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        reduceXTicks = true // if false a tick will show for every data point\n    ,\n        staggerLabels = false,\n        wrapLabels = false,\n        rotateLabels = 0,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        controlWidth = function controlWidth() {\n      return showControls ? 180 : 0;\n    },\n        duration = 250,\n        useInteractiveGuideline = false;\n\n    state.stacked = false; // DEPRECATED Maintained for backward compatibility\n\n    multibar.stacked(false);\n    xAxis.orient('bottom').tickPadding(7).showMaxMin(false).tickFormat(function (d) {\n      return d;\n    });\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left').tickFormat(d3.format(',.1f'));\n    tooltip.duration(0).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.valueFormatter(function (d, i) {\n      return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.valueFormatter(function (d, i) {\n      return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.duration(0).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    controls.updateState(false); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n    var stacked = false;\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          }),\n          stacked: stacked\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.stacked !== undefined) stacked = state.stacked;\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(multibar);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          if (duration === 0) container.call(chart);else container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display noData message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = multibar.xScale();\n        y = multibar.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-multiBarWithLegend').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multiBarWithLegend').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-controlsWrap');\n        gEnter.append('g').attr('class', 'nv-interactive'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          if (legendPosition === 'bottom') {\n            legend.width(availableWidth - margin.right);\n            g.select('.nv-legendWrap').datum(data).call(legend);\n            margin.bottom = xAxis.height() + legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            g.select('.nv-legendWrap').attr('transform', 'translate(0,' + (availableHeight + xAxis.height()) + ')');\n          } else {\n            legend.width(availableWidth - controlWidth());\n            g.select('.nv-legendWrap').datum(data).call(legend);\n\n            if (!marginTop && legend.height() !== margin.top) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin);\n            }\n\n            g.select('.nv-legendWrap').attr('transform', 'translate(' + controlWidth() + ',' + -margin.top + ')');\n          }\n        } // Controls\n\n\n        if (!showControls) {\n          g.select('.nv-controlsWrap').selectAll('*').remove();\n        } else {\n          var controlsData = [{\n            key: controlLabels.grouped || 'Grouped',\n            disabled: multibar.stacked()\n          }, {\n            key: controlLabels.stacked || 'Stacked',\n            disabled: !multibar.stacked()\n          }];\n          controls.width(controlWidth()).color(['#444', '#444', '#444']);\n          g.select('.nv-controlsWrap').datum(controlsData).attr('transform', 'translate(0,' + -margin.top + ')').call(controls);\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } // Main Chart Component(s)\n\n\n        multibar.disabled(data.map(function (series) {\n          return series.disabled;\n        })).width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.call(multibar); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          g.select('.nv-x.nv-axis').call(xAxis);\n          var xTicks = g.select('.nv-x.nv-axis > g').selectAll('g');\n          xTicks.selectAll('line, text').style('opacity', 1);\n\n          if (staggerLabels) {\n            var getTranslate = function getTranslate(x, y) {\n              return \"translate(\" + x + \",\" + y + \")\";\n            };\n\n            var staggerUp = 5,\n                staggerDown = 17; //pixels to stagger by\n            // Issue #140\n\n            xTicks.selectAll(\"text\").attr('transform', function (d, i, j) {\n              return getTranslate(0, j % 2 == 0 ? staggerUp : staggerDown);\n            });\n            var totalInBetweenTicks = d3.selectAll(\".nv-x.nv-axis .nv-wrap g g text\")[0].length;\n            g.selectAll(\".nv-x.nv-axis .nv-axisMaxMin text\").attr(\"transform\", function (d, i) {\n              return getTranslate(0, i === 0 || totalInBetweenTicks % 2 !== 0 ? staggerDown : staggerUp);\n            });\n          }\n\n          if (wrapLabels) {\n            g.selectAll('.tick text').call(nv.utils.wrapTicks, chart.xAxis.rangeBand());\n          }\n\n          if (reduceXTicks) xTicks.filter(function (d, i) {\n            return i % Math.ceil(data[0].values.length / (availableWidth / 100)) !== 0;\n          }).selectAll('text, line').style('opacity', 0);\n          if (rotateLabels) xTicks.selectAll('.tick text').attr('transform', 'rotate(' + rotateLabels + ' 0,0)').style('text-anchor', rotateLabels > 0 ? 'start' : 'end');\n          g.select('.nv-x.nv-axis').selectAll('g.nv-axisMaxMin text').style('opacity', 1);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        controls.dispatch.on('legendClick', function (d, i) {\n          if (!d.disabled) return;\n          controlsData = controlsData.map(function (s) {\n            s.disabled = true;\n            return s;\n          });\n          d.disabled = false;\n\n          switch (d.key) {\n            case 'Grouped':\n            case controlLabels.grouped:\n              multibar.stacked(false);\n              break;\n\n            case 'Stacked':\n            case controlLabels.stacked:\n              multibar.stacked(true);\n              break;\n          }\n\n          state.stacked = multibar.stacked();\n          dispatch.stateChange(state);\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          if (typeof e.stacked !== 'undefined') {\n            multibar.stacked(e.stacked);\n            state.stacked = e.stacked;\n            stacked = e.stacked;\n          }\n\n          chart.update();\n        });\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.dispatch.on('elementMousemove', function (e) {\n            if (e.pointXValue == undefined) return;\n            var singlePoint,\n                pointIndex,\n                pointXLocation,\n                xValue,\n                allData = [];\n            data.filter(function (series, i) {\n              series.seriesIndex = i;\n              return !series.disabled;\n            }).forEach(function (series, i) {\n              pointIndex = x.domain().indexOf(e.pointXValue);\n              var point = series.values[pointIndex];\n              if (point === undefined) return;\n              xValue = point.x;\n              if (singlePoint === undefined) singlePoint = point;\n              if (pointXLocation === undefined) pointXLocation = e.mouseX;\n              allData.push({\n                key: series.key,\n                value: chart.y()(point, pointIndex),\n                color: color(series, series.seriesIndex),\n                data: series.values[pointIndex]\n              });\n            });\n            interactiveLayer.tooltip.data({\n              value: xValue,\n              index: pointIndex,\n              series: allData\n            })();\n            interactiveLayer.renderGuideLine(pointXLocation);\n          });\n          interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n            interactiveLayer.tooltip.hidden(true);\n          });\n        } else {\n          multibar.dispatch.on('elementMouseover.tooltip', function (evt) {\n            evt.value = chart.x()(evt.data);\n            evt['series'] = {\n              key: evt.data.key,\n              value: chart.y()(evt.data),\n              color: evt.color\n            };\n            tooltip.data(evt).hidden(false);\n          });\n          multibar.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          multibar.dispatch.on('elementMousemove.tooltip', function (evt) {\n            tooltip();\n          });\n        }\n      });\n      renderWatch.renderEnd('multibarchart immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.multibar = multibar;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.state = state;\n    chart.tooltip = tooltip;\n    chart.interactiveLayer = interactiveLayer;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      showControls: {\n        get: function get() {\n          return showControls;\n        },\n        set: function set(_) {\n          showControls = _;\n        }\n      },\n      controlLabels: {\n        get: function get() {\n          return controlLabels;\n        },\n        set: function set(_) {\n          controlLabels = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      reduceXTicks: {\n        get: function get() {\n          return reduceXTicks;\n        },\n        set: function set(_) {\n          reduceXTicks = _;\n        }\n      },\n      rotateLabels: {\n        get: function get() {\n          return rotateLabels;\n        },\n        set: function set(_) {\n          rotateLabels = _;\n        }\n      },\n      staggerLabels: {\n        get: function get() {\n          return staggerLabels;\n        },\n        set: function set(_) {\n          staggerLabels = _;\n        }\n      },\n      wrapLabels: {\n        get: function get() {\n          return wrapLabels;\n        },\n        set: function set(_) {\n          wrapLabels = !!_;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          multibar.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n          renderWatch.reset(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n        }\n      },\n      barColor: {\n        get: function get() {\n          return multibar.barColor;\n        },\n        set: function set(_) {\n          multibar.barColor(_);\n          legend.color(function (d, i) {\n            return d3.rgb('#ccc').darker(i * 1.5).toString();\n          });\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, multibar);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiBarHorizontal = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        x = d3.scale.ordinal(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        getYerr = function getYerr(d) {\n      return d.yErr;\n    },\n        forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n    ,\n        color = nv.utils.defaultColor(),\n        barColor = null // adding the ability to set the color for each rather than the whole group\n    ,\n        disabled // used in conjunction with barColor to communicate from multiBarHorizontalChart what series are disabled\n    ,\n        stacked = false,\n        showValues = false,\n        showBarLabels = false,\n        valuePadding = 60,\n        groupSpacing = 0.1,\n        fillOpacity = 0.75,\n        valueFormat = d3.format(',.2f'),\n        delay = 1200,\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        duration = 250,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x0, y0; //used to store previous scales\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        if (stacked) data = d3.layout.stack().offset('zero').values(function (d) {\n          return d.values;\n        }).y(getY)(data); //add series index and key to each data point for reference\n\n        data.forEach(function (series, i) {\n          series.values.forEach(function (point) {\n            point.series = i;\n            point.key = series.key;\n          });\n        }); // HACK for negative value stacking\n\n        if (stacked) data[0].values.map(function (d, i) {\n          var posBase = 0,\n              negBase = 0;\n          data.map(function (d) {\n            var f = d.values[i];\n            f.size = Math.abs(f.y);\n\n            if (f.y < 0) {\n              f.y1 = negBase - f.size;\n              negBase = negBase - f.size;\n            } else {\n              f.y1 = posBase;\n              posBase = posBase + f.size;\n            }\n          });\n        }); // Setup Scales\n        // remap and flatten the data for use in calculating the scales' domains\n\n        var seriesData = xDomain && yDomain ? [] : // if we know xDomain and yDomain, no need to calculate\n        data.map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i),\n              y0: d.y0,\n              y1: d.y1\n            };\n          });\n        });\n        x.domain(xDomain || d3.merge(seriesData).map(function (d) {\n          return d.x;\n        })).rangeBands(xRange || [0, availableHeight], groupSpacing);\n        y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function (d) {\n          return stacked ? d.y > 0 ? d.y1 + d.y : d.y1 : d.y;\n        }).concat(forceY)));\n        if (showValues && !stacked) y.range(yRange || [y.domain()[0] < 0 ? valuePadding : 0, availableWidth - (y.domain()[1] > 0 ? valuePadding : 0)]);else y.range(yRange || [0, availableWidth]);\n        x0 = x0 || x;\n        y0 = y0 || d3.scale.linear().domain(y.domain()).range([y(0), y(0)]); // Setup containers and skeleton of chart\n\n        var wrap = d3.select(this).selectAll('g.nv-wrap.nv-multibarHorizontal').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multibarHorizontal');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-groups');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d, i) {\n          return i;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        groups.exit().watchTransition(renderWatch, 'multibarhorizontal: exit groups').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6).remove();\n        groups.attr('class', function (d, i) {\n          return 'nv-group nv-series-' + i;\n        }).classed('hover', function (d) {\n          return d.hover;\n        }).style('fill', function (d, i) {\n          return color(d, i);\n        }).style('stroke', function (d, i) {\n          return color(d, i);\n        });\n        groups.watchTransition(renderWatch, 'multibarhorizontal: groups').style('stroke-opacity', 1).style('fill-opacity', fillOpacity);\n        var bars = groups.selectAll('g.nv-bar').data(function (d) {\n          return d.values;\n        });\n        bars.exit().remove();\n        var barsEnter = bars.enter().append('g').attr('transform', function (d, i, j) {\n          return 'translate(' + y0(stacked ? d.y0 : 0) + ',' + (stacked ? 0 : j * x.rangeBand() / data.length + x(getX(d, i))) + ')';\n        });\n        barsEnter.append('rect').attr('width', 0).attr('height', x.rangeBand() / (stacked ? 1 : data.length));\n        bars.on('mouseover', function (d, i) {\n          //TODO: figure out why j works above, but not here\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('click', function (d, i) {\n          var element = this;\n          dispatch.elementClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n          d3.event.stopPropagation();\n        }).on('dblclick', function (d, i) {\n          dispatch.elementDblClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n          d3.event.stopPropagation();\n        });\n\n        if (getYerr(data[0], 0)) {\n          barsEnter.append('polyline');\n          bars.select('polyline').attr('fill', 'none').attr('points', function (d, i) {\n            var xerr = getYerr(d, i),\n                mid = 0.8 * x.rangeBand() / ((stacked ? 1 : data.length) * 2);\n            xerr = xerr.length ? xerr : [-Math.abs(xerr), Math.abs(xerr)];\n            xerr = xerr.map(function (e) {\n              return y(e + (getY(d, i) < 0 ? 0 : getY(d, i))) - y(0);\n            });\n            var a = [[xerr[0], -mid], [xerr[0], mid], [xerr[0], 0], [xerr[1], 0], [xerr[1], -mid], [xerr[1], mid]];\n            return a.map(function (path) {\n              return path.join(',');\n            }).join(' ');\n          }).attr('transform', function (d, i) {\n            var mid = x.rangeBand() / ((stacked ? 1 : data.length) * 2);\n            return 'translate(0, ' + mid + ')';\n          });\n        }\n\n        barsEnter.append('text');\n\n        if (showValues && !stacked) {\n          bars.select('text').attr('text-anchor', function (d, i) {\n            return getY(d, i) < 0 ? 'end' : 'start';\n          }).attr('y', x.rangeBand() / (data.length * 2)).attr('dy', '.32em').text(function (d, i) {\n            var t = valueFormat(getY(d, i)),\n                yerr = getYerr(d, i);\n            if (yerr === undefined) return t;\n            if (!yerr.length) return t + '±' + valueFormat(Math.abs(yerr));\n            return t + '+' + valueFormat(Math.abs(yerr[1])) + '-' + valueFormat(Math.abs(yerr[0]));\n          });\n          bars.watchTransition(renderWatch, 'multibarhorizontal: bars').select('text').attr('x', function (d, i) {\n            return getY(d, i) < 0 ? -4 : y(getY(d, i)) - y(0) + 4;\n          });\n        } else {\n          bars.selectAll('text').text('');\n        }\n\n        if (showBarLabels && !stacked) {\n          barsEnter.append('text').classed('nv-bar-label', true);\n          bars.select('text.nv-bar-label').attr('text-anchor', function (d, i) {\n            return getY(d, i) < 0 ? 'start' : 'end';\n          }).attr('y', x.rangeBand() / (data.length * 2)).attr('dy', '.32em').text(function (d, i) {\n            return getX(d, i);\n          });\n          bars.watchTransition(renderWatch, 'multibarhorizontal: bars').select('text.nv-bar-label').attr('x', function (d, i) {\n            return getY(d, i) < 0 ? y(0) - y(getY(d, i)) + 4 : -4;\n          });\n        } else {\n          bars.selectAll('text.nv-bar-label').text('');\n        }\n\n        bars.attr('class', function (d, i) {\n          return getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive';\n        });\n\n        if (barColor) {\n          if (!disabled) disabled = data.map(function () {\n            return true;\n          });\n          bars.style('fill', function (d, i, j) {\n            return d3.rgb(barColor(d, i)).darker(disabled.map(function (d, i) {\n              return i;\n            }).filter(function (d, i) {\n              return !disabled[i];\n            })[j]).toString();\n          }).style('stroke', function (d, i, j) {\n            return d3.rgb(barColor(d, i)).darker(disabled.map(function (d, i) {\n              return i;\n            }).filter(function (d, i) {\n              return !disabled[i];\n            })[j]).toString();\n          });\n        }\n\n        if (stacked) bars.watchTransition(renderWatch, 'multibarhorizontal: bars').attr('transform', function (d, i) {\n          return 'translate(' + y(d.y1) + ',' + x(getX(d, i)) + ')';\n        }).select('rect').attr('width', function (d, i) {\n          return Math.abs(y(getY(d, i) + d.y0) - y(d.y0)) || 0;\n        }).attr('height', x.rangeBand());else bars.watchTransition(renderWatch, 'multibarhorizontal: bars').attr('transform', function (d, i) {\n          //TODO: stacked must be all positive or all negative, not both?\n          return 'translate(' + (getY(d, i) < 0 ? y(getY(d, i)) : y(0)) + ',' + (d.series * x.rangeBand() / data.length + x(getX(d, i))) + ')';\n        }).select('rect').attr('height', x.rangeBand() / data.length).attr('width', function (d, i) {\n          return Math.max(Math.abs(y(getY(d, i)) - y(0)), 1) || 0;\n        }); //store old scales for use in transitions on update\n\n        x0 = x.copy();\n        y0 = y.copy();\n      });\n      renderWatch.renderEnd('multibarHorizontal immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      yErr: {\n        get: function get() {\n          return getYerr;\n        },\n        set: function set(_) {\n          getYerr = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      stacked: {\n        get: function get() {\n          return stacked;\n        },\n        set: function set(_) {\n          stacked = _;\n        }\n      },\n      showValues: {\n        get: function get() {\n          return showValues;\n        },\n        set: function set(_) {\n          showValues = _;\n        }\n      },\n      // this shows the group name, seems pointless?\n      //showBarLabels:    {get: function(){return showBarLabels;}, set: function(_){showBarLabels=_;}},\n      disabled: {\n        get: function get() {\n          return disabled;\n        },\n        set: function set(_) {\n          disabled = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      valueFormat: {\n        get: function get() {\n          return valueFormat;\n        },\n        set: function set(_) {\n          valueFormat = _;\n        }\n      },\n      valuePadding: {\n        get: function get() {\n          return valuePadding;\n        },\n        set: function set(_) {\n          valuePadding = _;\n        }\n      },\n      groupSpacing: {\n        get: function get() {\n          return groupSpacing;\n        },\n        set: function set(_) {\n          groupSpacing = _;\n        }\n      },\n      fillOpacity: {\n        get: function get() {\n          return fillOpacity;\n        },\n        set: function set(_) {\n          fillOpacity = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      barColor: {\n        get: function get() {\n          return barColor;\n        },\n        set: function set(_) {\n          barColor = _ ? nv.utils.getColor(_) : null;\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiBarHorizontalChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var multibar = nv.models.multiBarHorizontal(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend().height(30),\n        controls = nv.models.legend().height(30),\n        tooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor(),\n        showControls = true,\n        controlsPosition = 'top',\n        controlLabels = {},\n        showLegend = true,\n        legendPosition = 'top',\n        showXAxis = true,\n        showYAxis = true,\n        stacked = false,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        controlWidth = function controlWidth() {\n      return showControls ? 180 : 0;\n    },\n        duration = 250;\n\n    state.stacked = false; // DEPRECATED Maintained for backward compatibility\n\n    multibar.stacked(stacked);\n    xAxis.orient('left').tickPadding(5).showMaxMin(false).tickFormat(function (d) {\n      return d;\n    });\n    yAxis.orient('bottom').tickFormat(d3.format(',.1f'));\n    tooltip.duration(0).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    controls.updateState(false); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          }),\n          stacked: stacked\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.stacked !== undefined) stacked = state.stacked;\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(multibar);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        stacked = multibar.stacked();\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = multibar.xScale();\n        y = multibar.yScale().clamp(true); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-multiBarHorizontalChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multiBarHorizontalChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis').append('g').attr('class', 'nv-zeroLine').append('line');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-controlsWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth - controlWidth());\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (legendPosition === 'bottom') {\n            margin.bottom = xAxis.height() + legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            g.select('.nv-legendWrap').attr('transform', 'translate(' + controlWidth() + ',' + (availableHeight + xAxis.height()) + ')');\n          } else if (legendPosition === 'top') {\n            if (!marginTop && legend.height() !== margin.top) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin);\n            }\n\n            g.select('.nv-legendWrap').attr('transform', 'translate(' + controlWidth() + ',' + -margin.top + ')');\n          }\n        } // Controls\n\n\n        if (!showControls) {\n          g.select('.nv-controlsWrap').selectAll('*').remove();\n        } else {\n          var controlsData = [{\n            key: controlLabels.grouped || 'Grouped',\n            disabled: multibar.stacked()\n          }, {\n            key: controlLabels.stacked || 'Stacked',\n            disabled: !multibar.stacked()\n          }];\n          controls.width(controlWidth()).color(['#444', '#444', '#444']);\n\n          if (controlsPosition === 'bottom') {\n            margin.bottom = xAxis.height() + legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            g.select('.nv-controlsWrap').datum(controlsData).attr('transform', 'translate(0,' + (availableHeight + xAxis.height()) + ')').call(controls);\n          } else if (controlsPosition === 'top') {\n            g.select('.nv-controlsWrap').datum(controlsData).attr('transform', 'translate(0,' + -margin.top + ')').call(controls);\n          }\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        multibar.disabled(data.map(function (series) {\n          return series.disabled;\n        })).width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.transition().call(multibar); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksY(availableHeight / 24, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-x.nv-axis').call(xAxis);\n          var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n          xTicks.selectAll('line, text');\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-y.nv-axis').attr('transform', 'translate(0,' + availableHeight + ')');\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } // Zero line\n\n\n        g.select(\".nv-zeroLine line\").attr(\"x1\", y(0)).attr(\"x2\", y(0)).attr(\"y1\", 0).attr(\"y2\", -availableHeight); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        controls.dispatch.on('legendClick', function (d, i) {\n          if (!d.disabled) return;\n          controlsData = controlsData.map(function (s) {\n            s.disabled = true;\n            return s;\n          });\n          d.disabled = false;\n\n          switch (d.key) {\n            case 'Grouped':\n            case controlLabels.grouped:\n              multibar.stacked(false);\n              break;\n\n            case 'Stacked':\n            case controlLabels.stacked:\n              multibar.stacked(true);\n              break;\n          }\n\n          state.stacked = multibar.stacked();\n          dispatch.stateChange(state);\n          stacked = multibar.stacked();\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          if (typeof e.stacked !== 'undefined') {\n            multibar.stacked(e.stacked);\n            state.stacked = e.stacked;\n            stacked = e.stacked;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('multibar horizontal chart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    multibar.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt.value = chart.x()(evt.data);\n      evt['series'] = {\n        key: evt.data.key,\n        value: chart.y()(evt.data),\n        color: evt.color\n      };\n      tooltip.data(evt).hidden(false);\n    });\n    multibar.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    multibar.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.multibar = multibar;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.state = state;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      controlsPosition: {\n        get: function get() {\n          return controlsPosition;\n        },\n        set: function set(_) {\n          controlsPosition = _;\n        }\n      },\n      showControls: {\n        get: function get() {\n          return showControls;\n        },\n        set: function set(_) {\n          showControls = _;\n        }\n      },\n      controlLabels: {\n        get: function get() {\n          return controlLabels;\n        },\n        set: function set(_) {\n          controlLabels = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          multibar.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n        }\n      },\n      barColor: {\n        get: function get() {\n          return multibar.barColor;\n        },\n        set: function set(_) {\n          multibar.barColor(_);\n          legend.color(function (d, i) {\n            return d3.rgb('#ccc').darker(i * 1.5).toString();\n          });\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, multibar);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = null,\n        showLegend = true,\n        noData = null,\n        yDomain1,\n        yDomain2,\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        interpolate = 'linear',\n        useVoronoi = true,\n        interactiveLayer = nv.interactiveGuideline(),\n        useInteractiveGuideline = false,\n        legendRightAxisHint = ' (right axis)',\n        duration = 250; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x = d3.scale.linear(),\n        yScale1 = d3.scale.linear(),\n        yScale2 = d3.scale.linear(),\n        lines1 = nv.models.line().yScale(yScale1).duration(duration),\n        lines2 = nv.models.line().yScale(yScale2).duration(duration),\n        scatters1 = nv.models.scatter().yScale(yScale1).duration(duration),\n        scatters2 = nv.models.scatter().yScale(yScale2).duration(duration),\n        bars1 = nv.models.multiBar().stacked(false).yScale(yScale1).duration(duration),\n        bars2 = nv.models.multiBar().stacked(false).yScale(yScale2).duration(duration),\n        stack1 = nv.models.stackedArea().yScale(yScale1).duration(duration),\n        stack2 = nv.models.stackedArea().yScale(yScale2).duration(duration),\n        xAxis = nv.models.axis().scale(x).orient('bottom').tickPadding(5).duration(duration),\n        yAxis1 = nv.models.axis().scale(yScale1).orient('left').duration(duration),\n        yAxis2 = nv.models.axis().scale(yScale2).orient('right').duration(duration),\n        legend = nv.models.legend().height(30),\n        tooltip = nv.models.tooltip(),\n        dispatch = d3.dispatch();\n    var charts = [lines1, lines2, scatters1, scatters2, bars1, bars2, stack1, stack2];\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n\n        chart.update = function () {\n          container.transition().call(chart);\n        };\n\n        chart.container = this;\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        var dataLines1 = data.filter(function (d) {\n          return d.type == 'line' && d.yAxis == 1;\n        });\n        var dataLines2 = data.filter(function (d) {\n          return d.type == 'line' && d.yAxis == 2;\n        });\n        var dataScatters1 = data.filter(function (d) {\n          return d.type == 'scatter' && d.yAxis == 1;\n        });\n        var dataScatters2 = data.filter(function (d) {\n          return d.type == 'scatter' && d.yAxis == 2;\n        });\n        var dataBars1 = data.filter(function (d) {\n          return d.type == 'bar' && d.yAxis == 1;\n        });\n        var dataBars2 = data.filter(function (d) {\n          return d.type == 'bar' && d.yAxis == 2;\n        });\n        var dataStack1 = data.filter(function (d) {\n          return d.type == 'area' && d.yAxis == 1;\n        });\n        var dataStack2 = data.filter(function (d) {\n          return d.type == 'area' && d.yAxis == 2;\n        }); // Display noData message if there's nothing to show.\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        var series1 = data.filter(function (d) {\n          return !d.disabled && d.yAxis == 1;\n        }).map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d),\n              y: getY(d)\n            };\n          });\n        });\n        var series2 = data.filter(function (d) {\n          return !d.disabled && d.yAxis == 2;\n        }).map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d),\n              y: getY(d)\n            };\n          });\n        });\n        x.domain(d3.extent(d3.merge(series1.concat(series2)), function (d) {\n          return d.x;\n        })).range([0, availableWidth]);\n        var wrap = container.selectAll('g.wrap.multiChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'wrap nvd3 multiChart').append('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y1 nv-axis');\n        gEnter.append('g').attr('class', 'nv-y2 nv-axis');\n        gEnter.append('g').attr('class', 'stack1Wrap');\n        gEnter.append('g').attr('class', 'stack2Wrap');\n        gEnter.append('g').attr('class', 'bars1Wrap');\n        gEnter.append('g').attr('class', 'bars2Wrap');\n        gEnter.append('g').attr('class', 'scatters1Wrap');\n        gEnter.append('g').attr('class', 'scatters2Wrap');\n        gEnter.append('g').attr('class', 'lines1Wrap');\n        gEnter.append('g').attr('class', 'lines2Wrap');\n        gEnter.append('g').attr('class', 'legendWrap');\n        gEnter.append('g').attr('class', 'nv-interactive');\n        var g = wrap.select('g');\n        var color_array = data.map(function (d, i) {\n          return data[i].color || color(d, i);\n        }); // Legend\n\n        if (!showLegend) {\n          g.select('.legendWrap').selectAll('*').remove();\n        } else {\n          var legendWidth = legend.align() ? availableWidth / 2 : availableWidth;\n          var legendXPosition = legend.align() ? legendWidth : 0;\n          legend.width(legendWidth);\n          legend.color(color_array);\n          g.select('.legendWrap').datum(data.map(function (series) {\n            series.originalKey = series.originalKey === undefined ? series.key : series.originalKey;\n            series.key = series.originalKey + (series.yAxis == 1 ? '' : legendRightAxisHint);\n            return series;\n          })).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          g.select('.legendWrap').attr('transform', 'translate(' + legendXPosition + ',' + -margin.top + ')');\n        }\n\n        lines1.width(availableWidth).height(availableHeight).interpolate(interpolate).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'line';\n        }));\n        lines2.width(availableWidth).height(availableHeight).interpolate(interpolate).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'line';\n        }));\n        scatters1.width(availableWidth).height(availableHeight).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'scatter';\n        }));\n        scatters2.width(availableWidth).height(availableHeight).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'scatter';\n        }));\n        bars1.width(availableWidth).height(availableHeight).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'bar';\n        }));\n        bars2.width(availableWidth).height(availableHeight).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'bar';\n        }));\n        stack1.width(availableWidth).height(availableHeight).interpolate(interpolate).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'area';\n        }));\n        stack2.width(availableWidth).height(availableHeight).interpolate(interpolate).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'area';\n        }));\n        g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var lines1Wrap = g.select('.lines1Wrap').datum(dataLines1.filter(function (d) {\n          return !d.disabled;\n        }));\n        var scatters1Wrap = g.select('.scatters1Wrap').datum(dataScatters1.filter(function (d) {\n          return !d.disabled;\n        }));\n        var bars1Wrap = g.select('.bars1Wrap').datum(dataBars1.filter(function (d) {\n          return !d.disabled;\n        }));\n        var stack1Wrap = g.select('.stack1Wrap').datum(dataStack1.filter(function (d) {\n          return !d.disabled;\n        }));\n        var lines2Wrap = g.select('.lines2Wrap').datum(dataLines2.filter(function (d) {\n          return !d.disabled;\n        }));\n        var scatters2Wrap = g.select('.scatters2Wrap').datum(dataScatters2.filter(function (d) {\n          return !d.disabled;\n        }));\n        var bars2Wrap = g.select('.bars2Wrap').datum(dataBars2.filter(function (d) {\n          return !d.disabled;\n        }));\n        var stack2Wrap = g.select('.stack2Wrap').datum(dataStack2.filter(function (d) {\n          return !d.disabled;\n        }));\n        var extraValue1BarStacked = [];\n\n        if (bars1.stacked() && dataBars1.length) {\n          var extraValue1BarStacked = dataBars1.filter(function (d) {\n            return !d.disabled;\n          }).map(function (a) {\n            return a.values;\n          });\n          if (extraValue1BarStacked.length > 0) extraValue1BarStacked = extraValue1BarStacked.reduce(function (a, b) {\n            return a.map(function (aVal, i) {\n              return {\n                x: aVal.x,\n                y: aVal.y + b[i].y\n              };\n            });\n          });\n        }\n\n        if (dataBars1.length) {\n          extraValue1BarStacked.push({\n            x: 0,\n            y: 0\n          });\n        }\n\n        var extraValue2BarStacked = [];\n\n        if (bars2.stacked() && dataBars2.length) {\n          var extraValue2BarStacked = dataBars2.filter(function (d) {\n            return !d.disabled;\n          }).map(function (a) {\n            return a.values;\n          });\n          if (extraValue2BarStacked.length > 0) extraValue2BarStacked = extraValue2BarStacked.reduce(function (a, b) {\n            return a.map(function (aVal, i) {\n              return {\n                x: aVal.x,\n                y: aVal.y + b[i].y\n              };\n            });\n          });\n        }\n\n        if (dataBars2.length) {\n          extraValue2BarStacked.push({\n            x: 0,\n            y: 0\n          });\n        }\n\n        yScale1.domain(yDomain1 || d3.extent(d3.merge(series1).concat(extraValue1BarStacked), function (d) {\n          return d.y;\n        })).range([0, availableHeight]);\n        yScale2.domain(yDomain2 || d3.extent(d3.merge(series2).concat(extraValue2BarStacked), function (d) {\n          return d.y;\n        })).range([0, availableHeight]);\n        lines1.yDomain(yScale1.domain());\n        scatters1.yDomain(yScale1.domain());\n        bars1.yDomain(yScale1.domain());\n        stack1.yDomain(yScale1.domain());\n        lines2.yDomain(yScale2.domain());\n        scatters2.yDomain(yScale2.domain());\n        bars2.yDomain(yScale2.domain());\n        stack2.yDomain(yScale2.domain());\n\n        if (dataStack1.length) {\n          d3.transition(stack1Wrap).call(stack1);\n        }\n\n        if (dataStack2.length) {\n          d3.transition(stack2Wrap).call(stack2);\n        }\n\n        if (dataBars1.length) {\n          d3.transition(bars1Wrap).call(bars1);\n        }\n\n        if (dataBars2.length) {\n          d3.transition(bars2Wrap).call(bars2);\n        }\n\n        if (dataLines1.length) {\n          d3.transition(lines1Wrap).call(lines1);\n        }\n\n        if (dataLines2.length) {\n          d3.transition(lines2Wrap).call(lines2);\n        }\n\n        if (dataScatters1.length) {\n          d3.transition(scatters1Wrap).call(scatters1);\n        }\n\n        if (dataScatters2.length) {\n          d3.transition(scatters2Wrap).call(scatters2);\n        }\n\n        xAxis._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n        g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + availableHeight + ')');\n        d3.transition(g.select('.nv-x.nv-axis')).call(xAxis);\n\n        yAxis1._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n        d3.transition(g.select('.nv-y1.nv-axis')).call(yAxis1);\n\n        yAxis2._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n        d3.transition(g.select('.nv-y2.nv-axis')).call(yAxis2);\n        g.select('.nv-y1.nv-axis').classed('nv-disabled', series1.length ? false : true).attr('transform', 'translate(' + x.range()[0] + ',0)');\n        g.select('.nv-y2.nv-axis').classed('nv-disabled', series2.length ? false : true).attr('transform', 'translate(' + x.range()[1] + ',0)');\n        legend.dispatch.on('stateChange', function (newState) {\n          chart.update();\n        });\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        } //============================================================\n        // Event Handling/Dispatching\n        //------------------------------------------------------------\n\n\n        function mouseover_line(evt) {\n          var yaxis = evt.series.yAxis === 2 ? yAxis2 : yAxis1;\n          evt.value = evt.point.x;\n          evt.series = {\n            value: evt.point.y,\n            color: evt.point.color,\n            key: evt.series.key\n          };\n          tooltip.duration(0).headerFormatter(function (d, i) {\n            return xAxis.tickFormat()(d, i);\n          }).valueFormatter(function (d, i) {\n            return yaxis.tickFormat()(d, i);\n          }).data(evt).hidden(false);\n        }\n\n        function mouseover_scatter(evt) {\n          var yaxis = evt.series.yAxis === 2 ? yAxis2 : yAxis1;\n          evt.value = evt.point.x;\n          evt.series = {\n            value: evt.point.y,\n            color: evt.point.color,\n            key: evt.series.key\n          };\n          tooltip.duration(100).headerFormatter(function (d, i) {\n            return xAxis.tickFormat()(d, i);\n          }).valueFormatter(function (d, i) {\n            return yaxis.tickFormat()(d, i);\n          }).data(evt).hidden(false);\n        }\n\n        function mouseover_stack(evt) {\n          var yaxis = evt.series.yAxis === 2 ? yAxis2 : yAxis1;\n          evt.point['x'] = stack1.x()(evt.point);\n          evt.point['y'] = stack1.y()(evt.point);\n          tooltip.duration(0).headerFormatter(function (d, i) {\n            return xAxis.tickFormat()(d, i);\n          }).valueFormatter(function (d, i) {\n            return yaxis.tickFormat()(d, i);\n          }).data(evt).hidden(false);\n        }\n\n        function mouseover_bar(evt) {\n          var yaxis = evt.series.yAxis === 2 ? yAxis2 : yAxis1;\n          evt.value = bars1.x()(evt.data);\n          evt['series'] = {\n            value: bars1.y()(evt.data),\n            color: evt.color,\n            key: evt.data.key\n          };\n          tooltip.duration(0).headerFormatter(function (d, i) {\n            return xAxis.tickFormat()(d, i);\n          }).valueFormatter(function (d, i) {\n            return yaxis.tickFormat()(d, i);\n          }).data(evt).hidden(false);\n        }\n\n        function clearHighlights() {\n          for (var i = 0, il = charts.length; i < il; i++) {\n            var chart = charts[i];\n\n            try {\n              chart.clearHighlights();\n            } catch (e) {}\n          }\n        }\n\n        function highlightPoint(serieIndex, pointIndex, b) {\n          for (var i = 0, il = charts.length; i < il; i++) {\n            var chart = charts[i];\n\n            try {\n              chart.highlightPoint(serieIndex, pointIndex, b);\n            } catch (e) {}\n          }\n        }\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.dispatch.on('elementMousemove', function (e) {\n            clearHighlights();\n            var singlePoint,\n                pointIndex,\n                pointXLocation,\n                allData = [];\n            data.filter(function (series, i) {\n              series.seriesIndex = i;\n              return !series.disabled;\n            }).forEach(function (series, i) {\n              var extent = x.domain();\n              var currentValues = series.values.filter(function (d, i) {\n                return chart.x()(d, i) >= extent[0] && chart.x()(d, i) <= extent[1];\n              });\n              pointIndex = nv.interactiveBisect(currentValues, e.pointXValue, chart.x());\n              var point = currentValues[pointIndex];\n              var pointYValue = chart.y()(point, pointIndex);\n\n              if (pointYValue !== null) {\n                highlightPoint(i, pointIndex, true);\n              }\n\n              if (point === undefined) return;\n              if (singlePoint === undefined) singlePoint = point;\n              if (pointXLocation === undefined) pointXLocation = x(chart.x()(point, pointIndex));\n              allData.push({\n                key: series.key,\n                value: pointYValue,\n                color: color(series, series.seriesIndex),\n                data: point,\n                yAxis: series.yAxis == 2 ? yAxis2 : yAxis1\n              });\n            });\n\n            var defaultValueFormatter = function defaultValueFormatter(d, i) {\n              var yAxis = allData[i].yAxis;\n              return d == null ? \"N/A\" : yAxis.tickFormat()(d);\n            };\n\n            interactiveLayer.tooltip.headerFormatter(function (d, i) {\n              return xAxis.tickFormat()(d, i);\n            }).valueFormatter(interactiveLayer.tooltip.valueFormatter() || defaultValueFormatter).data({\n              value: chart.x()(singlePoint, pointIndex),\n              index: pointIndex,\n              series: allData\n            })();\n            interactiveLayer.renderGuideLine(pointXLocation);\n          });\n          interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n            clearHighlights();\n          });\n        } else {\n          lines1.dispatch.on('elementMouseover.tooltip', mouseover_line);\n          lines2.dispatch.on('elementMouseover.tooltip', mouseover_line);\n          lines1.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          lines2.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          scatters1.dispatch.on('elementMouseover.tooltip', mouseover_scatter);\n          scatters2.dispatch.on('elementMouseover.tooltip', mouseover_scatter);\n          scatters1.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          scatters2.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          stack1.dispatch.on('elementMouseover.tooltip', mouseover_stack);\n          stack2.dispatch.on('elementMouseover.tooltip', mouseover_stack);\n          stack1.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          stack2.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          bars1.dispatch.on('elementMouseover.tooltip', mouseover_bar);\n          bars2.dispatch.on('elementMouseover.tooltip', mouseover_bar);\n          bars1.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          bars2.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          bars1.dispatch.on('elementMousemove.tooltip', function (evt) {\n            tooltip();\n          });\n          bars2.dispatch.on('elementMousemove.tooltip', function (evt) {\n            tooltip();\n          });\n        }\n      });\n      return chart;\n    } //============================================================\n    // Global getters and setters\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.legend = legend;\n    chart.lines1 = lines1;\n    chart.lines2 = lines2;\n    chart.scatters1 = scatters1;\n    chart.scatters2 = scatters2;\n    chart.bars1 = bars1;\n    chart.bars2 = bars2;\n    chart.stack1 = stack1;\n    chart.stack2 = stack2;\n    chart.xAxis = xAxis;\n    chart.yAxis1 = yAxis1;\n    chart.yAxis2 = yAxis2;\n    chart.tooltip = tooltip;\n    chart.interactiveLayer = interactiveLayer;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      yDomain1: {\n        get: function get() {\n          return yDomain1;\n        },\n        set: function set(_) {\n          yDomain1 = _;\n        }\n      },\n      yDomain2: {\n        get: function get() {\n          return yDomain2;\n        },\n        set: function set(_) {\n          yDomain2 = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return interpolate;\n        },\n        set: function set(_) {\n          interpolate = _;\n        }\n      },\n      legendRightAxisHint: {\n        get: function get() {\n          return legendRightAxisHint;\n        },\n        set: function set(_) {\n          legendRightAxisHint = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n          lines1.x(_);\n          lines2.x(_);\n          scatters1.x(_);\n          scatters2.x(_);\n          bars1.x(_);\n          bars2.x(_);\n          stack1.x(_);\n          stack2.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n          lines1.y(_);\n          lines2.y(_);\n          scatters1.y(_);\n          scatters2.y(_);\n          stack1.y(_);\n          stack2.y(_);\n          bars1.y(_);\n          bars2.y(_);\n        }\n      },\n      useVoronoi: {\n        get: function get() {\n          return useVoronoi;\n        },\n        set: function set(_) {\n          useVoronoi = _;\n          lines1.useVoronoi(_);\n          lines2.useVoronoi(_);\n          stack1.useVoronoi(_);\n          stack2.useVoronoi(_);\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n\n          if (useInteractiveGuideline) {\n            lines1.interactive(false);\n            lines1.useVoronoi(false);\n            lines2.interactive(false);\n            lines2.useVoronoi(false);\n            stack1.interactive(false);\n            stack1.useVoronoi(false);\n            stack2.interactive(false);\n            stack2.useVoronoi(false);\n            scatters1.interactive(false);\n            scatters2.interactive(false);\n          }\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          [lines1, lines2, stack1, stack2, scatters1, scatters2, xAxis, yAxis1, yAxis2].forEach(function (model) {\n            model.duration(duration);\n          });\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.ohlcBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = null,\n        height = null,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        getOpen = function getOpen(d) {\n      return d.open;\n    },\n        getClose = function getClose(d) {\n      return d.close;\n    },\n        getHigh = function getHigh(d) {\n      return d.high;\n    },\n        getLow = function getLow(d) {\n      return d.low;\n    },\n        forceX = [],\n        forceY = [],\n        padData = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n    ,\n        clipEdge = true,\n        color = nv.utils.defaultColor(),\n        interactive = false,\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd', 'chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    function chart(selection) {\n      selection.each(function (data) {\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); // ohlc bar width.\n\n        var w = availableWidth / data[0].values.length * .9; // Setup Scales\n\n        x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX)));\n        if (padData) x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5) / data[0].values.length]);else x.range(xRange || [5 + w / 2, availableWidth - w / 2 - 5]);\n        y.domain(yDomain || [d3.min(data[0].values.map(getLow).concat(forceY)), d3.max(data[0].values.map(getHigh).concat(forceY))]).range(yRange || [availableHeight, 0]); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01]) : y.domain([-1, 1]); // Setup containers and skeleton of chart\n\n        var wrap = d3.select(this).selectAll('g.nv-wrap.nv-ohlcBar').data([data[0].values]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-ohlcBar');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-ticks');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        defsEnter.append('clipPath').attr('id', 'nv-chart-clip-path-' + id).append('rect');\n        wrap.select('#nv-chart-clip-path-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n        var ticks = wrap.select('.nv-ticks').selectAll('.nv-tick').data(function (d) {\n          return d;\n        });\n        ticks.exit().remove();\n        ticks.enter().append('path').attr('class', function (d, i, j) {\n          return (getOpen(d, i) > getClose(d, i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i;\n        }).attr('d', function (d, i) {\n          return 'm0,0l0,' + (y(getOpen(d, i)) - y(getHigh(d, i))) + 'l' + -w / 2 + ',0l' + w / 2 + ',0l0,' + (y(getLow(d, i)) - y(getOpen(d, i))) + 'l0,' + (y(getClose(d, i)) - y(getLow(d, i))) + 'l' + w / 2 + ',0l' + -w / 2 + ',0z';\n        }).attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',' + y(getHigh(d, i)) + ')';\n        }).attr('fill', function (d, i) {\n          return color[0];\n        }).attr('stroke', function (d, i) {\n          return color[0];\n        }).attr('x', 0).attr('y', function (d, i) {\n          return y(Math.max(0, getY(d, i)));\n        }).attr('height', function (d, i) {\n          return Math.abs(y(getY(d, i)) - y(0));\n        }); // the bar colors are controlled by CSS currently\n\n        ticks.attr('class', function (d, i, j) {\n          return (getOpen(d, i) > getClose(d, i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i;\n        });\n        d3.transition(ticks).attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',' + y(getHigh(d, i)) + ')';\n        }).attr('d', function (d, i) {\n          var w = availableWidth / data[0].values.length * .9;\n          return 'm0,0l0,' + (y(getOpen(d, i)) - y(getHigh(d, i))) + 'l' + -w / 2 + ',0l' + w / 2 + ',0l0,' + (y(getLow(d, i)) - y(getOpen(d, i))) + 'l0,' + (y(getClose(d, i)) - y(getLow(d, i))) + 'l' + w / 2 + ',0l' + -w / 2 + ',0z';\n        });\n      });\n      return chart;\n    } //Create methods to allow outside functions to highlight a specific bar.\n\n\n    chart.highlightPoint = function (pointIndex, isHoverOver) {\n      chart.clearHighlights();\n      container.select(\".nv-ohlcBar .nv-tick-0-\" + pointIndex).classed(\"hover\", isHoverOver);\n    };\n\n    chart.clearHighlights = function () {\n      container.select(\".nv-ohlcBar .nv-tick.hover\").classed(\"hover\", false);\n    }; //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      padData: {\n        get: function get() {\n          return padData;\n        },\n        set: function set(_) {\n          padData = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      interactive: {\n        get: function get() {\n          return interactive;\n        },\n        set: function set(_) {\n          interactive = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      open: {\n        get: function get() {\n          return getOpen();\n        },\n        set: function set(_) {\n          getOpen = _;\n        }\n      },\n      close: {\n        get: function get() {\n          return getClose();\n        },\n        set: function set(_) {\n          getClose = _;\n        }\n      },\n      high: {\n        get: function get() {\n          return getHigh;\n        },\n        set: function set(_) {\n          getHigh = _;\n        }\n      },\n      low: {\n        get: function get() {\n          return getLow;\n        },\n        set: function set(_) {\n          getLow = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top != undefined ? _.top : margin.top;\n          margin.right = _.right != undefined ? _.right : margin.right;\n          margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n          margin.left = _.left != undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  }; // Code adapted from Jason Davies' \"Parallel Coordinates\"\n  // http://bl.ocks.org/jasondavies/1341281\n\n\n  nv.models.parallelCoordinates = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 30,\n      right: 0,\n      bottom: 10,\n      left: 0\n    },\n        width = null,\n        height = null,\n        availableWidth = null,\n        availableHeight = null,\n        x = d3.scale.ordinal(),\n        y = {},\n        undefinedValuesLabel = \"undefined values\",\n        dimensionData = [],\n        enabledDimensions = [],\n        dimensionNames = [],\n        displayBrush = true,\n        color = nv.utils.defaultColor(),\n        filters = [],\n        active = [],\n        dragging = [],\n        axisWithUndefinedValues = [],\n        lineTension = 1,\n        foreground,\n        background,\n        dimensions,\n        line = d3.svg.line(),\n        axis = d3.svg.axis(),\n        dispatch = d3.dispatch('brushstart', 'brush', 'brushEnd', 'dimensionsOrder', \"stateChange\", 'elementClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd', 'activeChanged'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var container = d3.select(this);\n        availableWidth = nv.utils.availableWidth(width, container, margin);\n        availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); //Convert old data to new format (name, values)\n\n        if (data[0].values === undefined) {\n          var newData = [];\n          data.forEach(function (d) {\n            var val = {};\n            var key = Object.keys(d);\n            key.forEach(function (k) {\n              if (k !== \"name\") val[k] = d[k];\n            });\n            newData.push({\n              key: d.name,\n              values: val\n            });\n          });\n          data = newData;\n        }\n\n        var dataValues = data.map(function (d) {\n          return d.values;\n        });\n\n        if (active.length === 0) {\n          active = data;\n        }\n\n        ; //set all active before first brush call\n\n        dimensionNames = dimensionData.sort(function (a, b) {\n          return a.currentPosition - b.currentPosition;\n        }).map(function (d) {\n          return d.key;\n        });\n        enabledDimensions = dimensionData.filter(function (d) {\n          return !d.disabled;\n        }); // Setup Scales\n\n        x.rangePoints([0, availableWidth], 1).domain(enabledDimensions.map(function (d) {\n          return d.key;\n        })); //Set as true if all values on an axis are missing.\n        // Extract the list of dimensions and create a scale for each.\n\n        var oldDomainMaxValue = {};\n        var displayMissingValuesline = false;\n        var currentTicks = [];\n        dimensionNames.forEach(function (d) {\n          var extent = d3.extent(dataValues, function (p) {\n            return +p[d];\n          });\n          var min = extent[0];\n          var max = extent[1];\n          var onlyUndefinedValues = false; //If there is no values to display on an axis, set the extent to 0\n\n          if (isNaN(min) || isNaN(max)) {\n            onlyUndefinedValues = true;\n            min = 0;\n            max = 0;\n          } //Scale axis if there is only one value\n\n\n          if (min === max) {\n            min = min - 1;\n            max = max + 1;\n          }\n\n          var f = filters.filter(function (k) {\n            return k.dimension == d;\n          });\n\n          if (f.length !== 0) {\n            //If there is only NaN values, keep the existing domain.\n            if (onlyUndefinedValues) {\n              min = y[d].domain()[0];\n              max = y[d].domain()[1];\n            } //If the brush extent is > max (< min), keep the extent value.\n            else if (!f[0].hasOnlyNaN && displayBrush) {\n                min = min > f[0].extent[0] ? f[0].extent[0] : min;\n                max = max < f[0].extent[1] ? f[0].extent[1] : max;\n              } //If there is NaN values brushed be sure the brush extent is on the domain.\n              else if (f[0].hasNaN) {\n                  max = max < f[0].extent[1] ? f[0].extent[1] : max;\n                  oldDomainMaxValue[d] = y[d].domain()[1];\n                  displayMissingValuesline = true;\n                }\n          } //Use 90% of (availableHeight - 12) for the axis range, 12 reprensenting the space necessary to display \"undefined values\" text.\n          //The remaining 10% are used to display the missingValue line.\n\n\n          y[d] = d3.scale.linear().domain([min, max]).range([(availableHeight - 12) * 0.9, 0]);\n          axisWithUndefinedValues = [];\n          y[d].brush = d3.svg.brush().y(y[d]).on('brushstart', brushstart).on('brush', brush).on('brushend', brushend);\n        }); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-parallelCoordinates').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-parallelCoordinates');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-parallelCoordinates background');\n        gEnter.append('g').attr('class', 'nv-parallelCoordinates foreground');\n        gEnter.append('g').attr('class', 'nv-parallelCoordinates missingValuesline');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        line.interpolate('cardinal').tension(lineTension);\n        axis.orient('left');\n        var axisDrag = d3.behavior.drag().on('dragstart', dragStart).on('drag', dragMove).on('dragend', dragEnd); //Add missing value line at the bottom of the chart\n\n        var missingValuesline, missingValueslineText;\n        var step = x.range()[1] - x.range()[0];\n        step = isNaN(step) ? x.range()[0] : step;\n\n        if (!isNaN(step)) {\n          var lineData = [0 + step / 2, availableHeight - 12, availableWidth - step / 2, availableHeight - 12];\n          missingValuesline = wrap.select('.missingValuesline').selectAll('line').data([lineData]);\n          missingValuesline.enter().append('line');\n          missingValuesline.exit().remove();\n          missingValuesline.attr(\"x1\", function (d) {\n            return d[0];\n          }).attr(\"y1\", function (d) {\n            return d[1];\n          }).attr(\"x2\", function (d) {\n            return d[2];\n          }).attr(\"y2\", function (d) {\n            return d[3];\n          }); //Add the text \"undefined values\" under the missing value line\n\n          missingValueslineText = wrap.select('.missingValuesline').selectAll('text').data([undefinedValuesLabel]);\n          missingValueslineText.append('text').data([undefinedValuesLabel]);\n          missingValueslineText.enter().append('text');\n          missingValueslineText.exit().remove();\n          missingValueslineText.attr(\"y\", availableHeight) //To have the text right align with the missingValues line, substract 92 representing the text size.\n          .attr(\"x\", availableWidth - 92 - step / 2).text(function (d) {\n            return d;\n          });\n        } // Add grey background lines for context.\n\n\n        background = wrap.select('.background').selectAll('path').data(data);\n        background.enter().append('path');\n        background.exit().remove();\n        background.attr('d', path); // Add blue foreground lines for focus.\n\n        foreground = wrap.select('.foreground').selectAll('path').data(data);\n        foreground.enter().append('path');\n        foreground.exit().remove();\n        foreground.attr('d', path).style(\"stroke-width\", function (d, i) {\n          if (isNaN(d.strokeWidth)) {\n            d.strokeWidth = 1;\n          }\n\n          return d.strokeWidth;\n        }).attr('stroke', function (d, i) {\n          return d.color || color(d, i);\n        });\n        foreground.on(\"mouseover\", function (d, i) {\n          d3.select(this).classed('hover', true).style(\"stroke-width\", d.strokeWidth + 2 + \"px\").style(\"stroke-opacity\", 1);\n          dispatch.elementMouseover({\n            label: d.name,\n            color: d.color || color(d, i),\n            values: d.values,\n            dimensions: enabledDimensions\n          });\n        });\n        foreground.on(\"mouseout\", function (d, i) {\n          d3.select(this).classed('hover', false).style(\"stroke-width\", d.strokeWidth + \"px\").style(\"stroke-opacity\", 0.7);\n          dispatch.elementMouseout({\n            label: d.name,\n            index: i\n          });\n        });\n        foreground.on('mousemove', function (d, i) {\n          dispatch.elementMousemove();\n        });\n        foreground.on('click', function (d) {\n          dispatch.elementClick({\n            id: d.id\n          });\n        }); // Add a group element for each dimension.\n\n        dimensions = g.selectAll('.dimension').data(enabledDimensions);\n        var dimensionsEnter = dimensions.enter().append('g').attr('class', 'nv-parallelCoordinates dimension');\n        dimensions.attr('transform', function (d) {\n          return 'translate(' + x(d.key) + ',0)';\n        });\n        dimensionsEnter.append('g').attr('class', 'nv-axis'); // Add an axis and title.\n\n        dimensionsEnter.append('text').attr('class', 'nv-label').style(\"cursor\", \"move\").attr('dy', '-1em').attr('text-anchor', 'middle').on(\"mouseover\", function (d, i) {\n          dispatch.elementMouseover({\n            label: d.tooltip || d.key,\n            color: d.color\n          });\n        }).on(\"mouseout\", function (d, i) {\n          dispatch.elementMouseout({\n            label: d.tooltip\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove();\n        }).call(axisDrag);\n        dimensionsEnter.append('g').attr('class', 'nv-brushBackground');\n        dimensions.exit().remove();\n        dimensions.select('.nv-label').text(function (d) {\n          return d.key;\n        }); // Add and store a brush for each axis.\n\n        restoreBrush(displayBrush);\n        var actives = dimensionNames.filter(function (p) {\n          return !y[p].brush.empty();\n        }),\n            extents = actives.map(function (p) {\n          return y[p].brush.extent();\n        });\n        var formerActive = active.slice(0); //Restore active values\n\n        active = [];\n        foreground.style(\"display\", function (d) {\n          var isActive = actives.every(function (p, i) {\n            if ((isNaN(d.values[p]) || isNaN(parseFloat(d.values[p]))) && extents[i][0] == y[p].brush.y().domain()[0]) {\n              return true;\n            }\n\n            return extents[i][0] <= d.values[p] && d.values[p] <= extents[i][1] && !isNaN(parseFloat(d.values[p]));\n          });\n          if (isActive) active.push(d);\n          return !isActive ? \"none\" : null;\n        });\n\n        if (filters.length > 0 || !nv.utils.arrayEquals(active, formerActive)) {\n          dispatch.activeChanged(active);\n        } // Returns the path for a given data point.\n\n\n        function path(d) {\n          return line(enabledDimensions.map(function (p) {\n            //If value if missing, put the value on the missing value line\n            if (isNaN(d.values[p.key]) || isNaN(parseFloat(d.values[p.key])) || displayMissingValuesline) {\n              var domain = y[p.key].domain();\n              var range = y[p.key].range();\n              var min = domain[0] - (domain[1] - domain[0]) / 9; //If it's not already the case, allow brush to select undefined values\n\n              if (axisWithUndefinedValues.indexOf(p.key) < 0) {\n                var newscale = d3.scale.linear().domain([min, domain[1]]).range([availableHeight - 12, range[1]]);\n                y[p.key].brush.y(newscale);\n                axisWithUndefinedValues.push(p.key);\n              }\n\n              if (isNaN(d.values[p.key]) || isNaN(parseFloat(d.values[p.key]))) {\n                return [x(p.key), y[p.key](min)];\n              }\n            } //If parallelCoordinate contain missing values show the missing values line otherwise, hide it.\n\n\n            if (missingValuesline !== undefined) {\n              if (axisWithUndefinedValues.length > 0 || displayMissingValuesline) {\n                missingValuesline.style(\"display\", \"inline\");\n                missingValueslineText.style(\"display\", \"inline\");\n              } else {\n                missingValuesline.style(\"display\", \"none\");\n                missingValueslineText.style(\"display\", \"none\");\n              }\n            }\n\n            return [x(p.key), y[p.key](d.values[p.key])];\n          }));\n        }\n\n        function restoreBrush(visible) {\n          filters.forEach(function (f) {\n            //If filter brushed NaN values, keep the brush on the bottom of the axis.\n            var brushDomain = y[f.dimension].brush.y().domain();\n\n            if (f.hasOnlyNaN) {\n              f.extent[1] = (y[f.dimension].domain()[1] - brushDomain[0]) * (f.extent[1] - f.extent[0]) / (oldDomainMaxValue[f.dimension] - f.extent[0]) + brushDomain[0];\n            }\n\n            if (f.hasNaN) {\n              f.extent[0] = brushDomain[0];\n            }\n\n            if (visible) y[f.dimension].brush.extent(f.extent);\n          });\n          dimensions.select('.nv-brushBackground').each(function (d) {\n            d3.select(this).call(y[d.key].brush);\n          }).selectAll('rect').attr('x', -8).attr('width', 16);\n          updateTicks();\n        } // Handles a brush event, toggling the display of foreground lines.\n\n\n        function brushstart() {\n          //If brush aren't visible, show it before brushing again.\n          if (displayBrush === false) {\n            displayBrush = true;\n            restoreBrush(true);\n          }\n        } // Handles a brush event, toggling the display of foreground lines.\n\n\n        function brush() {\n          actives = dimensionNames.filter(function (p) {\n            return !y[p].brush.empty();\n          });\n          extents = actives.map(function (p) {\n            return y[p].brush.extent();\n          });\n          filters = []; //erase current filters\n\n          actives.forEach(function (d, i) {\n            filters[i] = {\n              dimension: d,\n              extent: extents[i],\n              hasNaN: false,\n              hasOnlyNaN: false\n            };\n          });\n          active = []; //erase current active list\n\n          foreground.style('display', function (d) {\n            var isActive = actives.every(function (p, i) {\n              if ((isNaN(d.values[p]) || isNaN(parseFloat(d.values[p]))) && extents[i][0] == y[p].brush.y().domain()[0]) return true;\n              return extents[i][0] <= d.values[p] && d.values[p] <= extents[i][1] && !isNaN(parseFloat(d.values[p]));\n            });\n            if (isActive) active.push(d);\n            return isActive ? null : 'none';\n          });\n          updateTicks();\n          dispatch.brush({\n            filters: filters,\n            active: active\n          });\n        }\n\n        function brushend() {\n          var hasActiveBrush = actives.length > 0 ? true : false;\n          filters.forEach(function (f) {\n            if (f.extent[0] === y[f.dimension].brush.y().domain()[0] && axisWithUndefinedValues.indexOf(f.dimension) >= 0) f.hasNaN = true;\n            if (f.extent[1] < y[f.dimension].domain()[0]) f.hasOnlyNaN = true;\n          });\n          dispatch.brushEnd(active, hasActiveBrush);\n        }\n\n        function updateTicks() {\n          dimensions.select('.nv-axis').each(function (d, i) {\n            var f = filters.filter(function (k) {\n              return k.dimension == d.key;\n            });\n            currentTicks[d.key] = y[d.key].domain(); //If brush are available, display brush extent\n\n            if (f.length != 0 && displayBrush) {\n              currentTicks[d.key] = [];\n              if (f[0].extent[1] > y[d.key].domain()[0]) currentTicks[d.key] = [f[0].extent[1]];\n              if (f[0].extent[0] >= y[d.key].domain()[0]) currentTicks[d.key].push(f[0].extent[0]);\n            }\n\n            d3.select(this).call(axis.scale(y[d.key]).tickFormat(d.format).tickValues(currentTicks[d.key]));\n          });\n        }\n\n        function dragStart(d) {\n          dragging[d.key] = this.parentNode.__origin__ = x(d.key);\n          background.attr(\"visibility\", \"hidden\");\n        }\n\n        function dragMove(d) {\n          dragging[d.key] = Math.min(availableWidth, Math.max(0, this.parentNode.__origin__ += d3.event.x));\n          foreground.attr(\"d\", path);\n          enabledDimensions.sort(function (a, b) {\n            return dimensionPosition(a.key) - dimensionPosition(b.key);\n          });\n          enabledDimensions.forEach(function (d, i) {\n            return d.currentPosition = i;\n          });\n          x.domain(enabledDimensions.map(function (d) {\n            return d.key;\n          }));\n          dimensions.attr(\"transform\", function (d) {\n            return \"translate(\" + dimensionPosition(d.key) + \")\";\n          });\n        }\n\n        function dragEnd(d, i) {\n          delete this.parentNode.__origin__;\n          delete dragging[d.key];\n          d3.select(this.parentNode).attr(\"transform\", \"translate(\" + x(d.key) + \")\");\n          foreground.attr(\"d\", path);\n          background.attr(\"d\", path).attr(\"visibility\", null);\n          dispatch.dimensionsOrder(enabledDimensions);\n        }\n\n        function dimensionPosition(d) {\n          var v = dragging[d];\n          return v == null ? x(d) : v;\n        }\n      });\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      dimensionData: {\n        get: function get() {\n          return dimensionData;\n        },\n        set: function set(_) {\n          dimensionData = _;\n        }\n      },\n      displayBrush: {\n        get: function get() {\n          return displayBrush;\n        },\n        set: function set(_) {\n          displayBrush = _;\n        }\n      },\n      filters: {\n        get: function get() {\n          return filters;\n        },\n        set: function set(_) {\n          filters = _;\n        }\n      },\n      active: {\n        get: function get() {\n          return active;\n        },\n        set: function set(_) {\n          active = _;\n        }\n      },\n      lineTension: {\n        get: function get() {\n          return lineTension;\n        },\n        set: function set(_) {\n          lineTension = _;\n        }\n      },\n      undefinedValuesLabel: {\n        get: function get() {\n          return undefinedValuesLabel;\n        },\n        set: function set(_) {\n          undefinedValuesLabel = _;\n        }\n      },\n      // deprecated options\n      dimensions: {\n        get: function get() {\n          return dimensionData.map(function (d) {\n            return d.key;\n          });\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('dimensions', 'use dimensionData instead');\n\n          if (dimensionData.length === 0) {\n            _.forEach(function (k) {\n              dimensionData.push({\n                key: k\n              });\n            });\n          } else {\n            _.forEach(function (k, i) {\n              dimensionData[i].key = k;\n            });\n          }\n        }\n      },\n      dimensionNames: {\n        get: function get() {\n          return dimensionData.map(function (d) {\n            return d.key;\n          });\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('dimensionNames', 'use dimensionData instead');\n          dimensionNames = [];\n\n          if (dimensionData.length === 0) {\n            _.forEach(function (k) {\n              dimensionData.push({\n                key: k\n              });\n            });\n          } else {\n            _.forEach(function (k, i) {\n              dimensionData[i].key = k;\n            });\n          }\n        }\n      },\n      dimensionFormats: {\n        get: function get() {\n          return dimensionData.map(function (d) {\n            return d.format;\n          });\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('dimensionFormats', 'use dimensionData instead');\n\n          if (dimensionData.length === 0) {\n            _.forEach(function (f) {\n              dimensionData.push({\n                format: f\n              });\n            });\n          } else {\n            _.forEach(function (f, i) {\n              dimensionData[i].format = f;\n            });\n          }\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.parallelCoordinatesChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var parallelCoordinates = nv.models.parallelCoordinates();\n    var legend = nv.models.legend();\n    var tooltip = nv.models.tooltip();\n    var dimensionTooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        showLegend = true,\n        color = nv.utils.defaultColor(),\n        state = nv.utils.state(),\n        dimensionData = [],\n        displayBrush = true,\n        defaultState = null,\n        noData = null,\n        nanValue = \"undefined\",\n        dispatch = d3.dispatch('dimensionsOrder', 'brushEnd', 'stateChange', 'changeState', 'renderEnd'),\n        controlWidth = function controlWidth() {\n      return showControls ? 180 : 0;\n    }; //============================================================\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) {\n          data.forEach(function (series, i) {\n            series.disabled = !state.active[i];\n          });\n        }\n      };\n    };\n\n    tooltip.contentGenerator(function (data) {\n      var str = '<table><thead><tr><td class=\"legend-color-guide\"><div style=\"background-color:' + data.color + '\"></div></td><td><strong>' + data.key + '</strong></td></tr></thead>';\n\n      if (data.series.length !== 0) {\n        str = str + '<tbody><tr><td height =\"10px\"></td></tr>';\n        data.series.forEach(function (d) {\n          str = str + '<tr><td class=\"legend-color-guide\"><div style=\"background-color:' + d.color + '\"></div></td><td class=\"key\">' + d.key + '</td><td class=\"value\">' + d.value + '</td></tr>';\n        });\n        str = str + '</tbody>';\n      }\n\n      str = str + '</table>';\n      return str;\n    }); //============================================================\n    // Chart function\n    //------------------------------------------------------------\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(parallelCoordinates);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var that = this;\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(dimensionData), chart.update).getter(stateGetter(dimensionData)).update(); //set state.disabled\n\n        state.disabled = dimensionData.map(function (d) {\n          return !!d.disabled;\n        }); //Keep dimensions position in memory\n\n        dimensionData = dimensionData.map(function (d) {\n          d.disabled = !!d.disabled;\n          return d;\n        });\n        dimensionData.forEach(function (d, i) {\n          d.originalPosition = isNaN(d.originalPosition) ? i : d.originalPosition;\n          d.currentPosition = isNaN(d.currentPosition) ? i : d.currentPosition;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } //------------------------------------------------------------\n        // Setup containers and skeleton of chart\n\n\n        var wrap = container.selectAll('g.nv-wrap.nv-parallelCoordinatesChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-parallelCoordinatesChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-parallelCoordinatesWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        g.select(\"rect\").attr(\"width\", availableWidth).attr(\"height\", availableHeight > 0 ? availableHeight : 0); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth).color(function (d) {\n            return \"rgb(188,190,192)\";\n          });\n          g.select('.nv-legendWrap').datum(dimensionData.sort(function (a, b) {\n            return a.originalPosition - b.originalPosition;\n          })).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          wrap.select('.nv-legendWrap').attr('transform', 'translate( 0 ,' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        parallelCoordinates.width(availableWidth).height(availableHeight).dimensionData(dimensionData).displayBrush(displayBrush);\n        var parallelCoordinatesWrap = g.select('.nv-parallelCoordinatesWrap ').datum(data);\n        parallelCoordinatesWrap.transition().call(parallelCoordinates); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n        //Display reset brush button\n\n        parallelCoordinates.dispatch.on('brushEnd', function (active, hasActiveBrush) {\n          if (hasActiveBrush) {\n            displayBrush = true;\n            dispatch.brushEnd(active);\n          } else {\n            displayBrush = false;\n          }\n        });\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        }); //Update dimensions order and display reset sorting button\n\n        parallelCoordinates.dispatch.on('dimensionsOrder', function (e) {\n          dimensionData.sort(function (a, b) {\n            return a.currentPosition - b.currentPosition;\n          });\n          var isSorted = false;\n          dimensionData.forEach(function (d, i) {\n            d.currentPosition = i;\n            if (d.currentPosition !== d.originalPosition) isSorted = true;\n          });\n          dispatch.dimensionsOrder(dimensionData, isSorted);\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            dimensionData.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('parraleleCoordinateChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    parallelCoordinates.dispatch.on('elementMouseover.tooltip', function (evt) {\n      var tp = {\n        key: evt.label,\n        color: evt.color,\n        series: []\n      };\n\n      if (evt.values) {\n        Object.keys(evt.values).forEach(function (d) {\n          var dim = evt.dimensions.filter(function (dd) {\n            return dd.key === d;\n          })[0];\n\n          if (dim) {\n            var v;\n\n            if (isNaN(evt.values[d]) || isNaN(parseFloat(evt.values[d]))) {\n              v = nanValue;\n            } else {\n              v = dim.format(evt.values[d]);\n            }\n\n            tp.series.push({\n              idx: dim.currentPosition,\n              key: d,\n              value: v,\n              color: dim.color\n            });\n          }\n        });\n        tp.series.sort(function (a, b) {\n          return a.idx - b.idx;\n        });\n      }\n\n      tooltip.data(tp).hidden(false);\n    });\n    parallelCoordinates.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    parallelCoordinates.dispatch.on('elementMousemove.tooltip', function () {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.parallelCoordinates = parallelCoordinates;\n    chart.legend = legend;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      dimensionData: {\n        get: function get() {\n          return dimensionData;\n        },\n        set: function set(_) {\n          dimensionData = _;\n        }\n      },\n      displayBrush: {\n        get: function get() {\n          return displayBrush;\n        },\n        set: function set(_) {\n          displayBrush = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      nanValue: {\n        get: function get() {\n          return nanValue;\n        },\n        set: function set(_) {\n          nanValue = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          parallelCoordinates.color(color);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, parallelCoordinates);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.pie = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 500,\n        height = 500,\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        color = nv.utils.defaultColor(),\n        valueFormat = d3.format(',.2f'),\n        showLabels = true,\n        labelsOutside = false,\n        labelType = \"key\",\n        labelThreshold = .02 //if slice percentage is under this, don't show label\n    ,\n        hideOverlapLabels = false //Hide labels that don't fit in slice\n    ,\n        donut = false,\n        title = false,\n        growOnHover = true,\n        titleOffset = 0,\n        labelSunbeamLayout = false,\n        startAngle = false,\n        padAngle = false,\n        endAngle = false,\n        cornerRadius = 0,\n        donutRatio = 0.5,\n        duration = 250,\n        arcsRadius = [],\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd');\n\n    var arcs = [];\n    var arcsOver = []; //============================================================\n    // chart function\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom,\n            radius = Math.min(availableWidth, availableHeight) / 2,\n            arcsRadiusOuter = [],\n            arcsRadiusInner = [];\n        container = d3.select(this);\n\n        if (arcsRadius.length === 0) {\n          var outer = radius - radius / 10;\n          var inner = donutRatio * radius;\n\n          for (var i = 0; i < data[0].length; i++) {\n            arcsRadiusOuter.push(outer);\n            arcsRadiusInner.push(inner);\n          }\n        } else {\n          if (growOnHover) {\n            arcsRadiusOuter = arcsRadius.map(function (d) {\n              return (d.outer - d.outer / 10) * radius;\n            });\n            arcsRadiusInner = arcsRadius.map(function (d) {\n              return (d.inner - d.inner / 10) * radius;\n            });\n            donutRatio = d3.min(arcsRadius.map(function (d) {\n              return d.inner - d.inner / 10;\n            }));\n          } else {\n            arcsRadiusOuter = arcsRadius.map(function (d) {\n              return d.outer * radius;\n            });\n            arcsRadiusInner = arcsRadius.map(function (d) {\n              return d.inner * radius;\n            });\n            donutRatio = d3.min(arcsRadius.map(function (d) {\n              return d.inner;\n            }));\n          }\n        }\n\n        nv.utils.initSVG(container); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('.nv-wrap.nv-pie').data(data);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-pie nv-chart-' + id);\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        var g_pie = gEnter.append('g').attr('class', 'nv-pie');\n        gEnter.append('g').attr('class', 'nv-pieLabels');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        g.select('.nv-pie').attr('transform', 'translate(' + availableWidth / 2 + ',' + availableHeight / 2 + ')');\n        g.select('.nv-pieLabels').attr('transform', 'translate(' + availableWidth / 2 + ',' + availableHeight / 2 + ')'); //\n\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        arcs = [];\n        arcsOver = [];\n\n        for (var i = 0; i < data[0].length; i++) {\n          var arc = d3.svg.arc().outerRadius(arcsRadiusOuter[i]);\n          var arcOver = d3.svg.arc().outerRadius(arcsRadiusOuter[i] + 5);\n\n          if (startAngle !== false) {\n            arc.startAngle(startAngle);\n            arcOver.startAngle(startAngle);\n          }\n\n          if (endAngle !== false) {\n            arc.endAngle(endAngle);\n            arcOver.endAngle(endAngle);\n          }\n\n          if (donut) {\n            arc.innerRadius(arcsRadiusInner[i]);\n            arcOver.innerRadius(arcsRadiusInner[i]);\n          }\n\n          if (arc.cornerRadius && cornerRadius) {\n            arc.cornerRadius(cornerRadius);\n            arcOver.cornerRadius(cornerRadius);\n          }\n\n          arcs.push(arc);\n          arcsOver.push(arcOver);\n        } // Setup the Pie chart and choose the data element\n\n\n        var pie = d3.layout.pie().sort(null).value(function (d) {\n          return d.disabled ? 0 : getY(d);\n        }); // padAngle added in d3 3.5\n\n        if (pie.padAngle && padAngle) {\n          pie.padAngle(padAngle);\n        } // if title is specified and donut, put it in the middle\n\n\n        if (donut && title) {\n          g_pie.append(\"text\").attr('class', 'nv-pie-title');\n          wrap.select('.nv-pie-title').style(\"text-anchor\", \"middle\").text(function (d) {\n            return title;\n          }).style(\"font-size\", Math.min(availableWidth, availableHeight) * donutRatio * 2 / (title.length + 2) + \"px\").attr(\"dy\", \"0.35em\") // trick to vertically center text\n          .attr('transform', function (d, i) {\n            return 'translate(0, ' + titleOffset + ')';\n          });\n        }\n\n        var slices = wrap.select('.nv-pie').selectAll('.nv-slice').data(pie);\n        var pieLabels = wrap.select('.nv-pieLabels').selectAll('.nv-label').data(pie);\n        slices.exit().remove();\n        pieLabels.exit().remove();\n        var ae = slices.enter().append('g');\n        ae.attr('class', 'nv-slice');\n        ae.on('mouseover', function (d, i) {\n          d3.select(this).classed('hover', true);\n\n          if (growOnHover) {\n            d3.select(this).select(\"path\").transition().duration(70).attr(\"d\", arcsOver[i]);\n          }\n\n          dispatch.elementMouseover({\n            data: d.data,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            percent: (d.endAngle - d.startAngle) / (2 * Math.PI)\n          });\n        });\n        ae.on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n\n          if (growOnHover) {\n            d3.select(this).select(\"path\").transition().duration(50).attr(\"d\", arcs[i]);\n          }\n\n          dispatch.elementMouseout({\n            data: d.data,\n            index: i\n          });\n        });\n        ae.on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            data: d.data,\n            index: i\n          });\n        });\n        ae.on('click', function (d, i) {\n          var element = this;\n          dispatch.elementClick({\n            data: d.data,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n        });\n        ae.on('dblclick', function (d, i) {\n          dispatch.elementDblClick({\n            data: d.data,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        });\n        slices.attr('fill', function (d, i) {\n          return color(d.data, i);\n        });\n        slices.attr('stroke', function (d, i) {\n          return color(d.data, i);\n        });\n        var paths = ae.append('path').each(function (d) {\n          this._current = d;\n        });\n        slices.select('path').transition().duration(duration).attr('d', function (d, i) {\n          return arcs[i](d);\n        }).attrTween('d', arcTween);\n\n        if (showLabels) {\n          // This does the normal label\n          var labelsArc = [];\n\n          for (var i = 0; i < data[0].length; i++) {\n            labelsArc.push(arcs[i]);\n\n            if (labelsOutside) {\n              if (donut) {\n                labelsArc[i] = d3.svg.arc().outerRadius(arcs[i].outerRadius());\n                if (startAngle !== false) labelsArc[i].startAngle(startAngle);\n                if (endAngle !== false) labelsArc[i].endAngle(endAngle);\n              }\n            } else if (!donut) {\n              labelsArc[i].innerRadius(0);\n            }\n          }\n\n          pieLabels.enter().append(\"g\").classed(\"nv-label\", true).each(function (d, i) {\n            var group = d3.select(this);\n            group.attr('transform', function (d, i) {\n              if (labelSunbeamLayout) {\n                d.outerRadius = arcsRadiusOuter[i] + 10; // Set Outer Coordinate\n\n                d.innerRadius = arcsRadiusOuter[i] + 15; // Set Inner Coordinate\n\n                var rotateAngle = (d.startAngle + d.endAngle) / 2 * (180 / Math.PI);\n\n                if ((d.startAngle + d.endAngle) / 2 < Math.PI) {\n                  rotateAngle -= 90;\n                } else {\n                  rotateAngle += 90;\n                }\n\n                return 'translate(' + labelsArc[i].centroid(d) + ') rotate(' + rotateAngle + ')';\n              } else {\n                d.outerRadius = radius + 10; // Set Outer Coordinate\n\n                d.innerRadius = radius + 15; // Set Inner Coordinate\n\n                return 'translate(' + labelsArc[i].centroid(d) + ')';\n              }\n            });\n            group.append('rect').style('stroke', '#fff').style('fill', '#fff').attr(\"rx\", 3).attr(\"ry\", 3);\n            group.append('text').style('text-anchor', labelSunbeamLayout ? (d.startAngle + d.endAngle) / 2 < Math.PI ? 'start' : 'end' : 'middle') //center the text on it's origin or begin/end if orthogonal aligned\n            .style('fill', '#000');\n          });\n          var labelLocationHash = {};\n          var avgHeight = 14;\n          var avgWidth = 140;\n\n          var createHashKey = function createHashKey(coordinates) {\n            return Math.floor(coordinates[0] / avgWidth) * avgWidth + ',' + Math.floor(coordinates[1] / avgHeight) * avgHeight;\n          };\n\n          var getSlicePercentage = function getSlicePercentage(d) {\n            return (d.endAngle - d.startAngle) / (2 * Math.PI);\n          };\n\n          pieLabels.watchTransition(renderWatch, 'pie labels').attr('transform', function (d, i) {\n            if (labelSunbeamLayout) {\n              d.outerRadius = arcsRadiusOuter[i] + 10; // Set Outer Coordinate\n\n              d.innerRadius = arcsRadiusOuter[i] + 15; // Set Inner Coordinate\n\n              var rotateAngle = (d.startAngle + d.endAngle) / 2 * (180 / Math.PI);\n\n              if ((d.startAngle + d.endAngle) / 2 < Math.PI) {\n                rotateAngle -= 90;\n              } else {\n                rotateAngle += 90;\n              }\n\n              return 'translate(' + labelsArc[i].centroid(d) + ') rotate(' + rotateAngle + ')';\n            } else {\n              d.outerRadius = radius + 10; // Set Outer Coordinate\n\n              d.innerRadius = radius + 15; // Set Inner Coordinate\n\n              /*\n              Overlapping pie labels are not good. What this attempts to do is, prevent overlapping.\n              Each label location is hashed, and if a hash collision occurs, we assume an overlap.\n              Adjust the label's y-position to remove the overlap.\n              */\n\n              var center = labelsArc[i].centroid(d);\n              var percent = getSlicePercentage(d);\n\n              if (d.value && percent >= labelThreshold) {\n                var hashKey = createHashKey(center);\n\n                if (labelLocationHash[hashKey]) {\n                  center[1] -= avgHeight;\n                }\n\n                labelLocationHash[createHashKey(center)] = true;\n              }\n\n              return 'translate(' + center + ')';\n            }\n          });\n          pieLabels.select(\".nv-label text\").style('text-anchor', function (d, i) {\n            //center the text on it's origin or begin/end if orthogonal aligned\n            return labelSunbeamLayout ? (d.startAngle + d.endAngle) / 2 < Math.PI ? 'start' : 'end' : 'middle';\n          }).text(function (d, i) {\n            var percent = getSlicePercentage(d);\n            var label = '';\n            if (!d.value || percent < labelThreshold) return '';\n\n            if (typeof labelType === 'function') {\n              label = labelType(d, i, {\n                'key': getX(d.data),\n                'value': getY(d.data),\n                'percent': valueFormat(percent)\n              });\n            } else {\n              switch (labelType) {\n                case 'key':\n                  label = getX(d.data);\n                  break;\n\n                case 'value':\n                  label = valueFormat(getY(d.data));\n                  break;\n\n                case 'percent':\n                  label = d3.format('%')(percent);\n                  break;\n              }\n            }\n\n            return label;\n          });\n\n          if (hideOverlapLabels) {\n            pieLabels.each(function (d, i) {\n              if (!this.getBBox) return;\n              var bb = this.getBBox(),\n                  center = labelsArc[i].centroid(d);\n              var topLeft = {\n                x: center[0] + bb.x,\n                y: center[1] + bb.y\n              };\n              var topRight = {\n                x: topLeft.x + bb.width,\n                y: topLeft.y\n              };\n              var bottomLeft = {\n                x: topLeft.x,\n                y: topLeft.y + bb.height\n              };\n              var bottomRight = {\n                x: topLeft.x + bb.width,\n                y: topLeft.y + bb.height\n              };\n              d.visible = nv.utils.pointIsInArc(topLeft, d, arc) && nv.utils.pointIsInArc(topRight, d, arc) && nv.utils.pointIsInArc(bottomLeft, d, arc) && nv.utils.pointIsInArc(bottomRight, d, arc);\n            }).style('display', function (d) {\n              return d.visible ? null : 'none';\n            });\n          }\n        } // Computes the angle of an arc, converting from radians to degrees.\n\n\n        function angle(d) {\n          var a = (d.startAngle + d.endAngle) * 90 / Math.PI - 90;\n          return a > 90 ? a - 180 : a;\n        }\n\n        function arcTween(a, idx) {\n          a.endAngle = isNaN(a.endAngle) ? 0 : a.endAngle;\n          a.startAngle = isNaN(a.startAngle) ? 0 : a.startAngle;\n          if (!donut) a.innerRadius = 0;\n          var i = d3.interpolate(this._current, a);\n          this._current = i(0);\n          return function (t) {\n            return arcs[idx](i(t));\n          };\n        }\n      });\n      renderWatch.renderEnd('pie immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      arcsRadius: {\n        get: function get() {\n          return arcsRadius;\n        },\n        set: function set(_) {\n          arcsRadius = _;\n        }\n      },\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLabels: {\n        get: function get() {\n          return showLabels;\n        },\n        set: function set(_) {\n          showLabels = _;\n        }\n      },\n      title: {\n        get: function get() {\n          return title;\n        },\n        set: function set(_) {\n          title = _;\n        }\n      },\n      titleOffset: {\n        get: function get() {\n          return titleOffset;\n        },\n        set: function set(_) {\n          titleOffset = _;\n        }\n      },\n      labelThreshold: {\n        get: function get() {\n          return labelThreshold;\n        },\n        set: function set(_) {\n          labelThreshold = _;\n        }\n      },\n      hideOverlapLabels: {\n        get: function get() {\n          return hideOverlapLabels;\n        },\n        set: function set(_) {\n          hideOverlapLabels = _;\n        }\n      },\n      valueFormat: {\n        get: function get() {\n          return valueFormat;\n        },\n        set: function set(_) {\n          valueFormat = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      endAngle: {\n        get: function get() {\n          return endAngle;\n        },\n        set: function set(_) {\n          endAngle = _;\n        }\n      },\n      startAngle: {\n        get: function get() {\n          return startAngle;\n        },\n        set: function set(_) {\n          startAngle = _;\n        }\n      },\n      padAngle: {\n        get: function get() {\n          return padAngle;\n        },\n        set: function set(_) {\n          padAngle = _;\n        }\n      },\n      cornerRadius: {\n        get: function get() {\n          return cornerRadius;\n        },\n        set: function set(_) {\n          cornerRadius = _;\n        }\n      },\n      donutRatio: {\n        get: function get() {\n          return donutRatio;\n        },\n        set: function set(_) {\n          donutRatio = _;\n        }\n      },\n      labelsOutside: {\n        get: function get() {\n          return labelsOutside;\n        },\n        set: function set(_) {\n          labelsOutside = _;\n        }\n      },\n      labelSunbeamLayout: {\n        get: function get() {\n          return labelSunbeamLayout;\n        },\n        set: function set(_) {\n          labelSunbeamLayout = _;\n        }\n      },\n      donut: {\n        get: function get() {\n          return donut;\n        },\n        set: function set(_) {\n          donut = _;\n        }\n      },\n      growOnHover: {\n        get: function get() {\n          return growOnHover;\n        },\n        set: function set(_) {\n          growOnHover = _;\n        }\n      },\n      // depreciated after 1.7.1\n      pieLabelsOutside: {\n        get: function get() {\n          return labelsOutside;\n        },\n        set: function set(_) {\n          labelsOutside = _;\n          nv.deprecated('pieLabelsOutside', 'use labelsOutside instead');\n        }\n      },\n      // depreciated after 1.7.1\n      donutLabelsOutside: {\n        get: function get() {\n          return labelsOutside;\n        },\n        set: function set(_) {\n          labelsOutside = _;\n          nv.deprecated('donutLabelsOutside', 'use labelsOutside instead');\n        }\n      },\n      // deprecated after 1.7.1\n      labelFormat: {\n        get: function get() {\n          return valueFormat;\n        },\n        set: function set(_) {\n          valueFormat = _;\n          nv.deprecated('labelFormat', 'use valueFormat instead');\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = typeof _.top != 'undefined' ? _.top : margin.top;\n          margin.right = typeof _.right != 'undefined' ? _.right : margin.right;\n          margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : margin.bottom;\n          margin.left = typeof _.left != 'undefined' ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      labelType: {\n        get: function get() {\n          return labelType;\n        },\n        set: function set(_) {\n          labelType = _ || 'key';\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.pieChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var pie = nv.models.pie();\n    var legend = nv.models.legend();\n    var tooltip = nv.models.tooltip();\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 20,\n      left: 20\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        showTooltipPercent = false,\n        showLegend = true,\n        legendPosition = \"top\",\n        color = nv.utils.defaultColor(),\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        duration = 250,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd');\n    tooltip.duration(0).headerEnabled(false).valueFormatter(function (d, i) {\n      return pie.valueFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) {\n          data.forEach(function (series, i) {\n            series.disabled = !state.active[i];\n          });\n        }\n      };\n    }; //============================================================\n    // Chart function\n    //------------------------------------------------------------\n\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(pie);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var that = this;\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.transition().call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); //set state.disabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup containers and skeleton of chart\n\n\n        var wrap = container.selectAll('g.nv-wrap.nv-pieChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-pieChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-pieWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          if (legendPosition === \"top\") {\n            legend.width(availableWidth).key(pie.x());\n            wrap.select('.nv-legendWrap').datum(data).call(legend);\n\n            if (!marginTop && legend.height() !== margin.top) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin);\n            }\n\n            wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n          } else if (legendPosition === \"right\") {\n            var legendWidth = nv.models.legend().width();\n\n            if (availableWidth / 2 < legendWidth) {\n              legendWidth = availableWidth / 2;\n            }\n\n            legend.height(availableHeight).key(pie.x());\n            legend.width(legendWidth);\n            availableWidth -= legend.width();\n            wrap.select('.nv-legendWrap').datum(data).call(legend).attr('transform', 'translate(' + availableWidth + ',0)');\n          } else if (legendPosition === \"bottom\") {\n            legend.width(availableWidth).key(pie.x());\n            wrap.select('.nv-legendWrap').datum(data).call(legend);\n            margin.bottom = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + availableHeight + ')');\n          }\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        pie.width(availableWidth).height(availableHeight);\n        var pieWrap = g.select('.nv-pieWrap').datum([data]);\n        d3.transition(pieWrap).call(pie); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('pieChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    pie.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt['series'] = {\n        key: chart.x()(evt.data),\n        value: chart.y()(evt.data),\n        color: evt.color,\n        percent: evt.percent\n      };\n\n      if (!showTooltipPercent) {\n        delete evt.percent;\n        delete evt.series.percent;\n      }\n\n      tooltip.data(evt).hidden(false);\n    });\n    pie.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    pie.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.legend = legend;\n    chart.dispatch = dispatch;\n    chart.pie = pie;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart); // use Object get/set functionality to map between vars and chart functions\n\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      showTooltipPercent: {\n        get: function get() {\n          return showTooltipPercent;\n        },\n        set: function set(_) {\n          showTooltipPercent = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      // options that require extra logic in the setter\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = _;\n          legend.color(color);\n          pie.color(color);\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          pie.duration(duration);\n        }\n      },\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, pie);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.sankey = function () {\n    'use strict'; // Sources:\n    // - https://bost.ocks.org/mike/sankey/\n    // - https://github.com/soxofaan/d3-plugin-captain-sankey\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var sankey = {},\n        nodeWidth = 24,\n        nodePadding = 8,\n        size = [1, 1],\n        nodes = [],\n        links = [],\n        sinksRight = true;\n\n    var layout = function layout(iterations) {\n      computeNodeLinks();\n      computeNodeValues();\n      computeNodeBreadths();\n      computeNodeDepths(iterations);\n    };\n\n    var relayout = function relayout() {\n      computeLinkDepths();\n    }; // SVG path data generator, to be used as 'd' attribute on 'path' element selection.\n\n\n    var link = function link() {\n      var curvature = .5;\n\n      function link(d) {\n        var x0 = d.source.x + d.source.dx,\n            x1 = d.target.x,\n            xi = d3.interpolateNumber(x0, x1),\n            x2 = xi(curvature),\n            x3 = xi(1 - curvature),\n            y0 = d.source.y + d.sy + d.dy / 2,\n            y1 = d.target.y + d.ty + d.dy / 2;\n        var linkPath = 'M' + x0 + ',' + y0 + 'C' + x2 + ',' + y0 + ' ' + x3 + ',' + y1 + ' ' + x1 + ',' + y1;\n        return linkPath;\n      }\n\n      link.curvature = function (_) {\n        if (!arguments.length) return curvature;\n        curvature = +_;\n        return link;\n      };\n\n      return link;\n    }; // Y-position of the middle of a node.\n\n\n    var center = function center(node) {\n      return node.y + node.dy / 2;\n    }; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n    // Populate the sourceLinks and targetLinks for each node.\n    // Also, if the source and target are not objects, assume they are indices.\n\n\n    function computeNodeLinks() {\n      nodes.forEach(function (node) {\n        // Links that have this node as source.\n        node.sourceLinks = []; // Links that have this node as target.\n\n        node.targetLinks = [];\n      });\n      links.forEach(function (link) {\n        var source = link.source,\n            target = link.target;\n        if (typeof source === 'number') source = link.source = nodes[link.source];\n        if (typeof target === 'number') target = link.target = nodes[link.target];\n        source.sourceLinks.push(link);\n        target.targetLinks.push(link);\n      });\n    } // Compute the value (size) of each node by summing the associated links.\n\n\n    function computeNodeValues() {\n      nodes.forEach(function (node) {\n        node.value = Math.max(d3.sum(node.sourceLinks, value), d3.sum(node.targetLinks, value));\n      });\n    } // Iteratively assign the breadth (x-position) for each node.\n    // Nodes are assigned the maximum breadth of incoming neighbors plus one;\n    // nodes with no incoming links are assigned breadth zero, while\n    // nodes with no outgoing links are assigned the maximum breadth.\n\n\n    function computeNodeBreadths() {\n      //\n      var remainingNodes = nodes,\n          nextNodes,\n          x = 0; // Work from left to right.\n      // Keep updating the breath (x-position) of nodes that are target of recently updated nodes.\n      //\n\n      while (remainingNodes.length && x < nodes.length) {\n        nextNodes = [];\n        remainingNodes.forEach(function (node) {\n          node.x = x;\n          node.dx = nodeWidth;\n          node.sourceLinks.forEach(function (link) {\n            if (nextNodes.indexOf(link.target) < 0) {\n              nextNodes.push(link.target);\n            }\n          });\n        });\n        remainingNodes = nextNodes;\n        ++x; //\n      } // Optionally move pure sinks always to the right.\n\n\n      if (sinksRight) {\n        moveSinksRight(x);\n      }\n\n      scaleNodeBreadths((size[0] - nodeWidth) / (x - 1));\n    }\n\n    function moveSourcesRight() {\n      nodes.forEach(function (node) {\n        if (!node.targetLinks.length) {\n          node.x = d3.min(node.sourceLinks, function (d) {\n            return d.target.x;\n          }) - 1;\n        }\n      });\n    }\n\n    function moveSinksRight(x) {\n      nodes.forEach(function (node) {\n        if (!node.sourceLinks.length) {\n          node.x = x - 1;\n        }\n      });\n    }\n\n    function scaleNodeBreadths(kx) {\n      nodes.forEach(function (node) {\n        node.x *= kx;\n      });\n    } // Compute the depth (y-position) for each node.\n\n\n    function computeNodeDepths(iterations) {\n      // Group nodes by breath.\n      var nodesByBreadth = d3.nest().key(function (d) {\n        return d.x;\n      }).sortKeys(d3.ascending).entries(nodes).map(function (d) {\n        return d.values;\n      }); //\n\n      initializeNodeDepth();\n      resolveCollisions();\n      computeLinkDepths();\n\n      for (var alpha = 1; iterations > 0; --iterations) {\n        relaxRightToLeft(alpha *= .99);\n        resolveCollisions();\n        computeLinkDepths();\n        relaxLeftToRight(alpha);\n        resolveCollisions();\n        computeLinkDepths();\n      }\n\n      function initializeNodeDepth() {\n        // Calculate vertical scaling factor.\n        var ky = d3.min(nodesByBreadth, function (nodes) {\n          return (size[1] - (nodes.length - 1) * nodePadding) / d3.sum(nodes, value);\n        });\n        nodesByBreadth.forEach(function (nodes) {\n          nodes.forEach(function (node, i) {\n            node.y = i;\n            node.dy = node.value * ky;\n          });\n        });\n        links.forEach(function (link) {\n          link.dy = link.value * ky;\n        });\n      }\n\n      function relaxLeftToRight(alpha) {\n        nodesByBreadth.forEach(function (nodes, breadth) {\n          nodes.forEach(function (node) {\n            if (node.targetLinks.length) {\n              // Value-weighted average of the y-position of source node centers linked to this node.\n              var y = d3.sum(node.targetLinks, weightedSource) / d3.sum(node.targetLinks, value);\n              node.y += (y - center(node)) * alpha;\n            }\n          });\n        });\n\n        function weightedSource(link) {\n          return (link.source.y + link.sy + link.dy / 2) * link.value;\n        }\n      }\n\n      function relaxRightToLeft(alpha) {\n        nodesByBreadth.slice().reverse().forEach(function (nodes) {\n          nodes.forEach(function (node) {\n            if (node.sourceLinks.length) {\n              // Value-weighted average of the y-positions of target nodes linked to this node.\n              var y = d3.sum(node.sourceLinks, weightedTarget) / d3.sum(node.sourceLinks, value);\n              node.y += (y - center(node)) * alpha;\n            }\n          });\n        });\n\n        function weightedTarget(link) {\n          return (link.target.y + link.ty + link.dy / 2) * link.value;\n        }\n      }\n\n      function resolveCollisions() {\n        nodesByBreadth.forEach(function (nodes) {\n          var node,\n              dy,\n              y0 = 0,\n              n = nodes.length,\n              i; // Push any overlapping nodes down.\n\n          nodes.sort(ascendingDepth);\n\n          for (i = 0; i < n; ++i) {\n            node = nodes[i];\n            dy = y0 - node.y;\n            if (dy > 0) node.y += dy;\n            y0 = node.y + node.dy + nodePadding;\n          } // If the bottommost node goes outside the bounds, push it back up.\n\n\n          dy = y0 - nodePadding - size[1];\n\n          if (dy > 0) {\n            y0 = node.y -= dy; // Push any overlapping nodes back up.\n\n            for (i = n - 2; i >= 0; --i) {\n              node = nodes[i];\n              dy = node.y + node.dy + nodePadding - y0;\n              if (dy > 0) node.y -= dy;\n              y0 = node.y;\n            }\n          }\n        });\n      }\n\n      function ascendingDepth(a, b) {\n        return a.y - b.y;\n      }\n    } // Compute y-offset of the source endpoint (sy) and target endpoints (ty) of links,\n    // relative to the source/target node's y-position.\n\n\n    function computeLinkDepths() {\n      nodes.forEach(function (node) {\n        node.sourceLinks.sort(ascendingTargetDepth);\n        node.targetLinks.sort(ascendingSourceDepth);\n      });\n      nodes.forEach(function (node) {\n        var sy = 0,\n            ty = 0;\n        node.sourceLinks.forEach(function (link) {\n          link.sy = sy;\n          sy += link.dy;\n        });\n        node.targetLinks.forEach(function (link) {\n          link.ty = ty;\n          ty += link.dy;\n        });\n      });\n\n      function ascendingSourceDepth(a, b) {\n        return a.source.y - b.source.y;\n      }\n\n      function ascendingTargetDepth(a, b) {\n        return a.target.y - b.target.y;\n      }\n    } // Value property accessor.\n\n\n    function value(x) {\n      return x.value;\n    }\n\n    sankey.options = nv.utils.optionsFunc.bind(sankey);\n    sankey._options = Object.create({}, {\n      nodeWidth: {\n        get: function get() {\n          return nodeWidth;\n        },\n        set: function set(_) {\n          nodeWidth = +_;\n        }\n      },\n      nodePadding: {\n        get: function get() {\n          return nodePadding;\n        },\n        set: function set(_) {\n          nodePadding = _;\n        }\n      },\n      nodes: {\n        get: function get() {\n          return nodes;\n        },\n        set: function set(_) {\n          nodes = _;\n        }\n      },\n      links: {\n        get: function get() {\n          return links;\n        },\n        set: function set(_) {\n          links = _;\n        }\n      },\n      size: {\n        get: function get() {\n          return size;\n        },\n        set: function set(_) {\n          size = _;\n        }\n      },\n      sinksRight: {\n        get: function get() {\n          return sinksRight;\n        },\n        set: function set(_) {\n          sinksRight = _;\n        }\n      },\n      layout: {\n        get: function get() {\n          layout(32);\n        },\n        set: function set(_) {\n          layout(_);\n        }\n      },\n      relayout: {\n        get: function get() {\n          relayout();\n        },\n        set: function set(_) {}\n      },\n      center: {\n        get: function get() {\n          return center();\n        },\n        set: function set(_) {\n          if (typeof _ === 'function') {\n            center = _;\n          }\n        }\n      },\n      link: {\n        get: function get() {\n          return link();\n        },\n        set: function set(_) {\n          if (typeof _ === 'function') {\n            link = _;\n          }\n\n          return link();\n        }\n      }\n    });\n    nv.utils.initOptions(sankey);\n    return sankey;\n  };\n\n  nv.models.sankeyChart = function () {\n    \"use strict\"; // Sources:\n    // - https://bost.ocks.org/mike/sankey/\n    // - https://github.com/soxofaan/d3-plugin-captain-sankey\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 5,\n      right: 0,\n      bottom: 5,\n      left: 0\n    },\n        sankey = nv.models.sankey(),\n        width = 600,\n        height = 400,\n        nodeWidth = 36,\n        nodePadding = 40,\n        units = 'units',\n        center = undefined; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var formatNumber = d3.format(',.0f'); // zero decimal places\n\n    var format = function format(d) {\n      return formatNumber(d) + ' ' + units;\n    };\n\n    var color = d3.scale.category20();\n\n    var linkTitle = function linkTitle(d) {\n      return d.source.name + ' → ' + d.target.name + '\\n' + format(d.value);\n    };\n\n    var nodeFillColor = function nodeFillColor(d) {\n      return d.color = color(d.name.replace(/ .*/, ''));\n    };\n\n    var nodeStrokeColor = function nodeStrokeColor(d) {\n      return d3.rgb(d.color).darker(2);\n    };\n\n    var nodeTitle = function nodeTitle(d) {\n      return d.name + '\\n' + format(d.value);\n    };\n\n    var showError = function showError(element, message) {\n      element.append('text').attr('x', 0).attr('y', 0).attr('class', 'nvd3-sankey-chart-error').attr('text-anchor', 'middle').text(message);\n    };\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var testData = {\n          nodes: [{\n            'node': 1,\n            'name': 'Test 1'\n          }, {\n            'node': 2,\n            'name': 'Test 2'\n          }, {\n            'node': 3,\n            'name': 'Test 3'\n          }, {\n            'node': 4,\n            'name': 'Test 4'\n          }, {\n            'node': 5,\n            'name': 'Test 5'\n          }, {\n            'node': 6,\n            'name': 'Test 6'\n          }],\n          links: [{\n            'source': 0,\n            'target': 1,\n            'value': 2295\n          }, {\n            'source': 0,\n            'target': 5,\n            'value': 1199\n          }, {\n            'source': 1,\n            'target': 2,\n            'value': 1119\n          }, {\n            'source': 1,\n            'target': 5,\n            'value': 1176\n          }, {\n            'source': 2,\n            'target': 3,\n            'value': 487\n          }, {\n            'source': 2,\n            'target': 5,\n            'value': 632\n          }, {\n            'source': 3,\n            'target': 4,\n            'value': 301\n          }, {\n            'source': 3,\n            'target': 5,\n            'value': 186\n          }]\n        }; // Error handling\n\n        var isDataValid = false;\n        var dataAvailable = false; // check if data is valid\n\n        if ((typeof data['nodes'] === 'object' && data['nodes'].length) >= 0 && (typeof data['links'] === 'object' && data['links'].length) >= 0) {\n          isDataValid = true;\n        } // check if data is available\n\n\n        if (data['nodes'] && data['nodes'].length > 0 && data['links'] && data['links'].length > 0) {\n          dataAvailable = true;\n        } // show error\n\n\n        if (!isDataValid) {\n          console.error('NVD3 Sankey chart error:', 'invalid data format for', data);\n          console.info('Valid data format is: ', testData, JSON.stringify(testData));\n          showError(selection, 'Error loading chart, data is invalid');\n          return false;\n        } // TODO use nv.utils.noData\n\n\n        if (!dataAvailable) {\n          showError(selection, 'No data available');\n          return false;\n        } // No errors, continue\n        // append the svg canvas to the page\n\n\n        var svg = selection.append('svg').attr('width', width).attr('height', height).append('g').attr('class', 'nvd3 nv-wrap nv-sankeyChart'); // Set the sankey diagram properties\n\n        sankey.nodeWidth(nodeWidth).nodePadding(nodePadding).size([width, height]);\n        var path = sankey.link();\n        sankey.nodes(data.nodes).links(data.links).layout(32).center(center); // add in the links\n\n        var link = svg.append('g').selectAll('.link').data(data.links).enter().append('path').attr('class', 'link').attr('d', path).style('stroke-width', function (d) {\n          return Math.max(1, d.dy);\n        }).sort(function (a, b) {\n          return b.dy - a.dy;\n        }); // add the link titles\n\n        link.append('title').text(linkTitle); // add in the nodes\n\n        var node = svg.append('g').selectAll('.node').data(data.nodes).enter().append('g').attr('class', 'node').attr('transform', function (d) {\n          return 'translate(' + d.x + ',' + d.y + ')';\n        }).call(d3.behavior.drag().origin(function (d) {\n          return d;\n        }).on('dragstart', function () {\n          this.parentNode.appendChild(this);\n        }).on('drag', dragmove)); // add the rectangles for the nodes\n\n        node.append('rect').attr('height', function (d) {\n          return d.dy;\n        }).attr('width', sankey.nodeWidth()).style('fill', nodeFillColor).style('stroke', nodeStrokeColor).append('title').text(nodeTitle); // add in the title for the nodes\n\n        node.append('text').attr('x', -6).attr('y', function (d) {\n          return d.dy / 2;\n        }).attr('dy', '.35em').attr('text-anchor', 'end').attr('transform', null).text(function (d) {\n          return d.name;\n        }).filter(function (d) {\n          return d.x < width / 2;\n        }).attr('x', 6 + sankey.nodeWidth()).attr('text-anchor', 'start'); // the function for moving the nodes\n\n        function dragmove(d) {\n          d3.select(this).attr('transform', 'translate(' + d.x + ',' + (d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))) + ')');\n          sankey.relayout();\n          link.attr('d', path);\n        }\n      });\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      units: {\n        get: function get() {\n          return units;\n        },\n        set: function set(_) {\n          units = _;\n        }\n      },\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      format: {\n        get: function get() {\n          return format;\n        },\n        set: function set(_) {\n          format = _;\n        }\n      },\n      linkTitle: {\n        get: function get() {\n          return linkTitle;\n        },\n        set: function set(_) {\n          linkTitle = _;\n        }\n      },\n      nodeWidth: {\n        get: function get() {\n          return nodeWidth;\n        },\n        set: function set(_) {\n          nodeWidth = _;\n        }\n      },\n      nodePadding: {\n        get: function get() {\n          return nodePadding;\n        },\n        set: function set(_) {\n          nodePadding = _;\n        }\n      },\n      center: {\n        get: function get() {\n          return center;\n        },\n        set: function set(_) {\n          center = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      nodeStyle: {\n        get: function get() {\n          return {};\n        },\n        set: function set(_) {\n          nodeFillColor = _.fillColor !== undefined ? _.fillColor : nodeFillColor;\n          nodeStrokeColor = _.strokeColor !== undefined ? _.strokeColor : nodeStrokeColor;\n          nodeTitle = _.title !== undefined ? _.title : nodeTitle;\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.scatter = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor() // chooses color\n    ,\n        pointBorderColor = null,\n        id = Math.floor(Math.random() * 100000) //Create semi-unique ID incase user doesn't select one\n    ,\n        container = null,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        z = d3.scale.linear() //linear because d3.svg.shape.size is treated as area\n    ,\n        getX = function getX(d) {\n      return d.x;\n    } // accessor to get the x value\n    ,\n        getY = function getY(d) {\n      return d.y;\n    } // accessor to get the y value\n    ,\n        getSize = function getSize(d) {\n      return d.size || 1;\n    } // accessor to get the point size\n    ,\n        getShape = function getShape(d) {\n      return d.shape || 'circle';\n    } // accessor to get point shape\n    ,\n        forceX = [] // List of numbers to Force into the X scale (ie. 0, or a max / min, etc.)\n    ,\n        forceY = [] // List of numbers to Force into the Y scale\n    ,\n        forceSize = [] // List of numbers to Force into the Size scale\n    ,\n        interactive = true // If true, plots a voronoi overlay for advanced point intersection\n    ,\n        pointActive = function pointActive(d) {\n      return !d.notActive;\n    } // any points that return false will be filtered out\n    ,\n        padData = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n    ,\n        padDataOuter = .1 //outerPadding to imitate ordinal scale outer padding\n    ,\n        clipEdge = false // if true, masks points within x and y scale\n    ,\n        clipVoronoi = true // if true, masks each point with a circle... can turn off to slightly increase performance\n    ,\n        showVoronoi = false // display the voronoi areas\n    ,\n        clipRadius = function clipRadius() {\n      return 25;\n    } // function to get the radius for voronoi point clips\n    ,\n        xDomain = null // Override x domain (skips the calculation from data)\n    ,\n        yDomain = null // Override y domain\n    ,\n        xRange = null // Override x range\n    ,\n        yRange = null // Override y range\n    ,\n        sizeDomain = null // Override point size domain\n    ,\n        sizeRange = null,\n        singlePoint = false,\n        dispatch = d3.dispatch('elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'renderEnd'),\n        useVoronoi = true,\n        duration = 250,\n        interactiveUpdateDelay = 300,\n        showLabels = false; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x0,\n        y0,\n        z0 // used to store previous scales\n    ,\n        xDom,\n        yDom // used to store previous domains\n    ,\n        width0,\n        height0,\n        timeoutID,\n        needsUpdate = false // Flag for when the points are visually updating, but the interactive layer is behind, to disable tooltips\n    ,\n        renderWatch = nv.utils.renderWatch(dispatch, duration),\n        _sizeRange_def = [16, 256],\n        _cache = {}; //============================================================\n    // Diff and Cache Utilities\n    //------------------------------------------------------------\n    // getDiffs is used to filter unchanged points from the update\n    // selection. It implicitly updates it's cache when called and\n    // therefor the diff is based upon the previous invocation NOT\n    // the previous update.\n    //\n    // getDiffs takes a point as its first argument followed by n\n    // key getter pairs (d, [key, get... key, get]) this approach\n    // was chosen for efficiency. (The filter will call it a LOT).\n    //\n    // It is important to call delCache on point exit to prevent a\n    // memory leak. It is also needed to prevent invalid caches if\n    // a new point uses the same series and point id key.\n    //\n    // Argument Performance Concerns:\n    // - Object property lists for key getter pairs would be very\n    // expensive (points * objects for the GC every update).\n    // - ES6 function names for implicit keys would be nice but\n    // they are not guaranteed to be unique.\n    // - function.toString to obtain implicit keys is possible\n    // but long object keys are not free (internal hash).\n    // - Explicit key without objects are the most efficient.\n\n    function getCache(d) {\n      var key, val;\n      key = d[0].series + ':' + d[1];\n      val = _cache[key] = _cache[key] || {};\n      return val;\n    }\n\n    function delCache(d) {\n      var key, val;\n      key = d[0].series + ':' + d[1];\n      delete _cache[key];\n    }\n\n    function getDiffs(d) {\n      var i,\n          key,\n          val,\n          cache = getCache(d),\n          diffs = false;\n\n      for (i = 1; i < arguments.length; i += 2) {\n        key = arguments[i];\n        val = arguments[i + 1](d[0], d[1]);\n\n        if (cache[key] !== val || !cache.hasOwnProperty(key)) {\n          cache[key] = val;\n          diffs = true;\n        }\n      }\n\n      return diffs;\n    }\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); //add series index to each data point for reference\n\n        data.forEach(function (series, i) {\n          series.values.forEach(function (point) {\n            point.series = i;\n          });\n        }); // Setup Scales\n\n        var logScale = typeof chart.yScale().base === \"function\"; // Only log scale has a method \"base()\"\n        // remap and flatten the data for use in calculating the scales' domains\n\n        var seriesData = xDomain && yDomain && sizeDomain ? [] : // if we know xDomain and yDomain and sizeDomain, no need to calculate.... if Size is constant remember to set sizeDomain to speed up performance\n        d3.merge(data.map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i),\n              size: getSize(d, i)\n            };\n          });\n        }));\n        x.domain(xDomain || d3.extent(seriesData.map(function (d) {\n          return d.x;\n        }).concat(forceX)));\n        if (padData && data[0]) x.range(xRange || [(availableWidth * padDataOuter + availableWidth) / (2 * data[0].values.length), availableWidth - availableWidth * (1 + padDataOuter) / (2 * data[0].values.length)]); //x.range([availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5)  / data[0].values.length ]);\n        else x.range(xRange || [0, availableWidth]);\n\n        if (logScale) {\n          var min = d3.min(seriesData.map(function (d) {\n            if (d.y !== 0) return d.y;\n          }));\n          y.clamp(true).domain(yDomain || d3.extent(seriesData.map(function (d) {\n            if (d.y !== 0) return d.y;else return min * 0.1;\n          }).concat(forceY))).range(yRange || [availableHeight, 0]);\n        } else {\n          y.domain(yDomain || d3.extent(seriesData.map(function (d) {\n            return d.y;\n          }).concat(forceY))).range(yRange || [availableHeight, 0]);\n        }\n\n        z.domain(sizeDomain || d3.extent(seriesData.map(function (d) {\n          return d.size;\n        }).concat(forceSize))).range(sizeRange || _sizeRange_def); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        singlePoint = x.domain()[0] === x.domain()[1] || y.domain()[0] === y.domain()[1];\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] - y.domain()[0] * 0.01, y.domain()[1] + y.domain()[1] * 0.01]) : y.domain([-1, 1]);\n\n        if (isNaN(x.domain()[0])) {\n          x.domain([-1, 1]);\n        }\n\n        if (isNaN(y.domain()[0])) {\n          y.domain([-1, 1]);\n        }\n\n        x0 = x0 || x;\n        y0 = y0 || y;\n        z0 = z0 || z;\n        var scaleDiff = x(1) !== x0(1) || y(1) !== y0(1) || z(1) !== z0(1);\n        width0 = width0 || width;\n        height0 = height0 || height;\n        var sizeDiff = width0 !== width || height0 !== height; // Domain Diffs\n\n        xDom = xDom || [];\n        var domainDiff = xDom[0] !== x.domain()[0] || xDom[1] !== x.domain()[1];\n        xDom = x.domain();\n        yDom = yDom || [];\n        domainDiff = domainDiff || yDom[0] !== y.domain()[0] || yDom[1] !== y.domain()[1];\n        yDom = y.domain(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-scatter').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-scatter nv-chart-' + id);\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        wrap.classed('nv-single-point', singlePoint);\n        gEnter.append('g').attr('class', 'nv-groups');\n        gEnter.append('g').attr('class', 'nv-point-paths');\n        wrapEnter.append('g').attr('class', 'nv-point-clips');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        defsEnter.append('clipPath').attr('id', 'nv-edge-clip-' + id).append('rect').attr('transform', 'translate( -10, -10)');\n        wrap.select('#nv-edge-clip-' + id + ' rect').attr('width', availableWidth + 20).attr('height', availableHeight > 0 ? availableHeight + 20 : 0);\n        g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n\n        function updateInteractiveLayer() {\n          // Always clear needs-update flag regardless of whether or not\n          // we will actually do anything (avoids needless invocations).\n          needsUpdate = false;\n          if (!interactive) return false; // inject series and point index for reference into voronoi\n\n          if (useVoronoi === true) {\n            // nuke all voronoi paths on reload and recreate them\n            wrap.select('.nv-point-paths').selectAll('path').remove();\n            var vertices = d3.merge(data.map(function (group, groupIndex) {\n              return group.values.map(function (point, pointIndex) {\n                // *Adding noise to make duplicates very unlikely\n                // *Injecting series and point index for reference\n                // *Adding a 'jitter' to the points, because there's an issue in d3.geom.voronoi.\n                var pX = getX(point, pointIndex);\n                var pY = getY(point, pointIndex);\n                return [nv.utils.NaNtoZero(x(pX)) + Math.random() * 1e-4, nv.utils.NaNtoZero(y(pY)) + Math.random() * 1e-4, groupIndex, pointIndex, point];\n              }).filter(function (pointArray, pointIndex) {\n                return pointActive(pointArray[4], pointIndex); // Issue #237.. move filter to after map, so pointIndex is correct!\n              });\n            }));\n            if (vertices.length == 0) return false; // No active points, we're done\n\n            if (vertices.length < 3) {\n              // Issue #283 - Adding 2 dummy points to the voronoi b/c voronoi requires min 3 points to work\n              vertices.push([x.range()[0] - 20, y.range()[0] - 20, null, null]);\n              vertices.push([x.range()[1] + 20, y.range()[1] + 20, null, null]);\n              vertices.push([x.range()[0] - 20, y.range()[0] + 20, null, null]);\n              vertices.push([x.range()[1] + 20, y.range()[1] - 20, null, null]);\n            } // keep voronoi sections from going more than 10 outside of graph\n            // to avoid overlap with other things like legend etc\n\n\n            var bounds = d3.geom.polygon([[-10, -10], [-10, height + 10], [width + 10, height + 10], [width + 10, -10]]); // delete duplicates from vertices - essential assumption for d3.geom.voronoi\n\n            var epsilon = 1e-4; // Uses 1e-4 to determine equivalence.\n\n            vertices = vertices.sort(function (a, b) {\n              return a[0] - b[0] || a[1] - b[1];\n            });\n\n            for (var i = 0; i < vertices.length - 1;) {\n              if (Math.abs(vertices[i][0] - vertices[i + 1][0]) < epsilon && Math.abs(vertices[i][1] - vertices[i + 1][1]) < epsilon) {\n                vertices.splice(i + 1, 1);\n              } else {\n                i++;\n              }\n            }\n\n            var voronoi = d3.geom.voronoi(vertices).map(function (d, i) {\n              return {\n                'data': bounds.clip(d),\n                'series': vertices[i][2],\n                'point': vertices[i][3]\n              };\n            });\n            var pointPaths = wrap.select('.nv-point-paths').selectAll('path').data(voronoi);\n            var vPointPaths = pointPaths.enter().append(\"svg:path\").attr(\"d\", function (d) {\n              if (!d || !d.data || d.data.length === 0) return 'M 0 0';else return \"M\" + d.data.join(\",\") + \"Z\";\n            }).attr(\"id\", function (d, i) {\n              return \"nv-path-\" + i;\n            }).attr(\"clip-path\", function (d, i) {\n              return \"url(#nv-clip-\" + id + \"-\" + i + \")\";\n            }); // good for debugging point hover issues\n\n            if (showVoronoi) {\n              vPointPaths.style(\"fill\", d3.rgb(230, 230, 230)).style('fill-opacity', 0.4).style('stroke-opacity', 1).style(\"stroke\", d3.rgb(200, 200, 200));\n            }\n\n            if (clipVoronoi) {\n              // voronoi sections are already set to clip,\n              // just create the circles with the IDs they expect\n              wrap.select('.nv-point-clips').selectAll('*').remove(); // must do * since it has sub-dom\n\n              var pointClips = wrap.select('.nv-point-clips').selectAll('clipPath').data(vertices);\n              var vPointClips = pointClips.enter().append(\"svg:clipPath\").attr(\"id\", function (d, i) {\n                return \"nv-clip-\" + id + \"-\" + i;\n              }).append(\"svg:circle\").attr('cx', function (d) {\n                return d[0];\n              }).attr('cy', function (d) {\n                return d[1];\n              }).attr('r', clipRadius);\n            }\n\n            var mouseEventCallback = function mouseEventCallback(el, d, mDispatch) {\n              if (needsUpdate) return 0;\n              var series = data[d.series];\n              if (series === undefined) return;\n              var point = series.values[d.point];\n              point['color'] = color(series, d.series); // standardize attributes for tooltip.\n\n              point['x'] = getX(point);\n              point['y'] = getY(point); // can't just get box of event node since it's actually a voronoi polygon\n\n              var box = container.node().getBoundingClientRect();\n              var scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n              var scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n              var pos = {\n                left: x(getX(point, d.point)) + box.left + scrollLeft + margin.left + 10,\n                top: y(getY(point, d.point)) + box.top + scrollTop + margin.top + 10\n              };\n              mDispatch({\n                point: point,\n                series: series,\n                pos: pos,\n                relativePos: [x(getX(point, d.point)) + margin.left, y(getY(point, d.point)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: d.point,\n                event: d3.event,\n                element: el\n              });\n            };\n\n            pointPaths.on('click', function (d) {\n              mouseEventCallback(this, d, dispatch.elementClick);\n            }).on('dblclick', function (d) {\n              mouseEventCallback(this, d, dispatch.elementDblClick);\n            }).on('mouseover', function (d) {\n              mouseEventCallback(this, d, dispatch.elementMouseover);\n            }).on('mouseout', function (d, i) {\n              mouseEventCallback(this, d, dispatch.elementMouseout);\n            });\n          } else {\n            // add event handlers to points instead voronoi paths\n            wrap.select('.nv-groups').selectAll('.nv-group').selectAll('.nv-point') //.data(dataWithPoints)\n            //.style('pointer-events', 'auto') // recativate events, disabled by css\n            .on('click', function (d, i) {\n              //nv.log('test', d, i);\n              if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\n              var series = data[d.series],\n                  point = series.values[i];\n              var element = this;\n              dispatch.elementClick({\n                point: point,\n                series: series,\n                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                //TODO: make this pos base on the page\n                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: i,\n                event: d3.event,\n                element: element\n              });\n            }).on('dblclick', function (d, i) {\n              if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\n              var series = data[d.series],\n                  point = series.values[i];\n              dispatch.elementDblClick({\n                point: point,\n                series: series,\n                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                //TODO: make this pos base on the page\n                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: i\n              });\n            }).on('mouseover', function (d, i) {\n              if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\n              var series = data[d.series],\n                  point = series.values[i];\n              dispatch.elementMouseover({\n                point: point,\n                series: series,\n                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                //TODO: make this pos base on the page\n                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: i,\n                color: color(d, i)\n              });\n            }).on('mouseout', function (d, i) {\n              if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\n              var series = data[d.series],\n                  point = series.values[i];\n              dispatch.elementMouseout({\n                point: point,\n                series: series,\n                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                //TODO: make this pos base on the page\n                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: i,\n                color: color(d, i)\n              });\n            });\n          }\n        }\n\n        needsUpdate = true;\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d) {\n          return d.key;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        groups.exit().remove();\n        groups.attr('class', function (d, i) {\n          return (d.classed || '') + ' nv-group nv-series-' + i;\n        }).classed('nv-noninteractive', !interactive).classed('hover', function (d) {\n          return d.hover;\n        });\n        groups.watchTransition(renderWatch, 'scatter: groups').style('fill', function (d, i) {\n          return color(d, i);\n        }).style('stroke', function (d, i) {\n          return d.pointBorderColor || pointBorderColor || color(d, i);\n        }).style('stroke-opacity', 1).style('fill-opacity', .5); // create the points, maintaining their IDs from the original data set\n\n        var points = groups.selectAll('path.nv-point').data(function (d) {\n          return d.values.map(function (point, pointIndex) {\n            return [point, pointIndex];\n          }).filter(function (pointArray, pointIndex) {\n            return pointActive(pointArray[0], pointIndex);\n          });\n        });\n        points.enter().append('path').attr('class', function (d) {\n          return 'nv-point nv-point-' + d[1];\n        }).style('fill', function (d) {\n          return d.color;\n        }).style('stroke', function (d) {\n          return d.color;\n        }).attr('transform', function (d) {\n          return 'translate(' + nv.utils.NaNtoZero(x0(getX(d[0], d[1]))) + ',' + nv.utils.NaNtoZero(y0(getY(d[0], d[1]))) + ')';\n        }).attr('d', nv.utils.symbol().type(function (d) {\n          return getShape(d[0]);\n        }).size(function (d) {\n          return z(getSize(d[0], d[1]));\n        }));\n        points.exit().each(delCache).remove();\n        groups.exit().selectAll('path.nv-point').watchTransition(renderWatch, 'scatter exit').attr('transform', function (d) {\n          return 'translate(' + nv.utils.NaNtoZero(x(getX(d[0], d[1]))) + ',' + nv.utils.NaNtoZero(y(getY(d[0], d[1]))) + ')';\n        }).remove(); //============================================================\n        // Point Update Optimisation Notes\n        //------------------------------------------------------------\n        // The following update selections are filtered with getDiffs\n        // (defined at the top of this file) this brings a performance\n        // benefit for charts with large data sets that accumulate a\n        // subset of changes or additions over time.\n        //\n        // Uneccesary and expensive DOM calls are avoided by culling\n        // unchanged points from the selection in exchange for the\n        // cheaper overhead of caching and diffing each point first.\n        //\n        // Due to the way D3 and NVD3 work, other global changes need\n        // to be considered in addition to local point properties.\n        // This is a potential source of bugs (if any of the global\n        // changes that possibly affect points are missed).\n        // Update Point Positions [x, y]\n\n        points.filter(function (d) {\n          // getDiffs must always be called to update cache\n          return getDiffs(d, 'x', getX, 'y', getY) || scaleDiff || sizeDiff || domainDiff;\n        }).watchTransition(renderWatch, 'scatter points').attr('transform', function (d) {\n          return 'translate(' + nv.utils.NaNtoZero(x(getX(d[0], d[1]))) + ',' + nv.utils.NaNtoZero(y(getY(d[0], d[1]))) + ')';\n        }); // Update Point Appearance [shape, size]\n\n        points.filter(function (d) {\n          // getDiffs must always be called to update cache\n          return getDiffs(d, 'shape', getShape, 'size', getSize) || scaleDiff || sizeDiff || domainDiff;\n        }).watchTransition(renderWatch, 'scatter points').attr('d', nv.utils.symbol().type(function (d) {\n          return getShape(d[0]);\n        }).size(function (d) {\n          return z(getSize(d[0], d[1]));\n        })); // add label a label to scatter chart\n\n        if (showLabels) {\n          var titles = groups.selectAll('.nv-label').data(function (d) {\n            return d.values.map(function (point, pointIndex) {\n              return [point, pointIndex];\n            }).filter(function (pointArray, pointIndex) {\n              return pointActive(pointArray[0], pointIndex);\n            });\n          });\n          titles.enter().append('text').style('fill', function (d, i) {\n            return d.color;\n          }).style('stroke-opacity', 0).style('fill-opacity', 1).attr('transform', function (d) {\n            var dx = nv.utils.NaNtoZero(x0(getX(d[0], d[1]))) + Math.sqrt(z(getSize(d[0], d[1])) / Math.PI) + 2;\n            return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y0(getY(d[0], d[1]))) + ')';\n          }).text(function (d, i) {\n            return d[0].label;\n          });\n          titles.exit().remove();\n          groups.exit().selectAll('path.nv-label').watchTransition(renderWatch, 'scatter exit').attr('transform', function (d) {\n            var dx = nv.utils.NaNtoZero(x(getX(d[0], d[1]))) + Math.sqrt(z(getSize(d[0], d[1])) / Math.PI) + 2;\n            return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y(getY(d[0], d[1]))) + ')';\n          }).remove();\n          titles.each(function (d) {\n            d3.select(this).classed('nv-label', true).classed('nv-label-' + d[1], false).classed('hover', false);\n          });\n          titles.watchTransition(renderWatch, 'scatter labels').attr('transform', function (d) {\n            var dx = nv.utils.NaNtoZero(x(getX(d[0], d[1]))) + Math.sqrt(z(getSize(d[0], d[1])) / Math.PI) + 2;\n            return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y(getY(d[0], d[1]))) + ')';\n          });\n        } // Delay updating the invisible interactive layer for smoother animation\n\n\n        if (interactiveUpdateDelay) {\n          clearTimeout(timeoutID); // stop repeat calls to updateInteractiveLayer\n\n          timeoutID = setTimeout(updateInteractiveLayer, interactiveUpdateDelay);\n        } else {\n          updateInteractiveLayer();\n        } //store old scales for use in transitions on update\n\n\n        x0 = x.copy();\n        y0 = y.copy();\n        z0 = z.copy();\n        width0 = width;\n        height0 = height;\n      });\n      renderWatch.renderEnd('scatter immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart); // utility function calls provided by this chart\n\n    chart._calls = new function () {\n      this.clearHighlights = function () {\n        nv.dom.write(function () {\n          container.selectAll(\".nv-point.hover\").classed(\"hover\", false);\n        });\n        return null;\n      };\n\n      this.highlightPoint = function (seriesIndex, pointIndex, isHoverOver) {\n        nv.dom.write(function () {\n          container.select('.nv-groups').selectAll(\".nv-series-\" + seriesIndex).selectAll(\".nv-point-\" + pointIndex).classed(\"hover\", isHoverOver);\n        });\n      };\n    }(); // trigger calls from events too\n\n    dispatch.on('elementMouseover.point', function (d) {\n      if (interactive) chart._calls.highlightPoint(d.seriesIndex, d.pointIndex, true);\n    });\n    dispatch.on('elementMouseout.point', function (d) {\n      if (interactive) chart._calls.highlightPoint(d.seriesIndex, d.pointIndex, false);\n    });\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      pointScale: {\n        get: function get() {\n          return z;\n        },\n        set: function set(_) {\n          z = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      pointDomain: {\n        get: function get() {\n          return sizeDomain;\n        },\n        set: function set(_) {\n          sizeDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      pointRange: {\n        get: function get() {\n          return sizeRange;\n        },\n        set: function set(_) {\n          sizeRange = _;\n        }\n      },\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      forcePoint: {\n        get: function get() {\n          return forceSize;\n        },\n        set: function set(_) {\n          forceSize = _;\n        }\n      },\n      interactive: {\n        get: function get() {\n          return interactive;\n        },\n        set: function set(_) {\n          interactive = _;\n        }\n      },\n      pointActive: {\n        get: function get() {\n          return pointActive;\n        },\n        set: function set(_) {\n          pointActive = _;\n        }\n      },\n      padDataOuter: {\n        get: function get() {\n          return padDataOuter;\n        },\n        set: function set(_) {\n          padDataOuter = _;\n        }\n      },\n      padData: {\n        get: function get() {\n          return padData;\n        },\n        set: function set(_) {\n          padData = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      clipVoronoi: {\n        get: function get() {\n          return clipVoronoi;\n        },\n        set: function set(_) {\n          clipVoronoi = _;\n        }\n      },\n      clipRadius: {\n        get: function get() {\n          return clipRadius;\n        },\n        set: function set(_) {\n          clipRadius = _;\n        }\n      },\n      showVoronoi: {\n        get: function get() {\n          return showVoronoi;\n        },\n        set: function set(_) {\n          showVoronoi = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      interactiveUpdateDelay: {\n        get: function get() {\n          return interactiveUpdateDelay;\n        },\n        set: function set(_) {\n          interactiveUpdateDelay = _;\n        }\n      },\n      showLabels: {\n        get: function get() {\n          return showLabels;\n        },\n        set: function set(_) {\n          showLabels = _;\n        }\n      },\n      pointBorderColor: {\n        get: function get() {\n          return pointBorderColor;\n        },\n        set: function set(_) {\n          pointBorderColor = _;\n        }\n      },\n      // simple functor options\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = d3.functor(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      pointSize: {\n        get: function get() {\n          return getSize;\n        },\n        set: function set(_) {\n          getSize = d3.functor(_);\n        }\n      },\n      pointShape: {\n        get: function get() {\n          return getShape;\n        },\n        set: function set(_) {\n          getShape = d3.functor(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      useVoronoi: {\n        get: function get() {\n          return useVoronoi;\n        },\n        set: function set(_) {\n          useVoronoi = _;\n\n          if (useVoronoi === false) {\n            clipVoronoi = false;\n          }\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.scatterChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var scatter = nv.models.scatter(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        distX = nv.models.distribution(),\n        distY = nv.models.distribution(),\n        tooltip = nv.models.tooltip();\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 75\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        container = null,\n        color = nv.utils.defaultColor(),\n        x = scatter.xScale(),\n        y = scatter.yScale(),\n        showDistX = false,\n        showDistY = false,\n        showLegend = true,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        state = nv.utils.state(),\n        defaultState = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        noData = null,\n        duration = 250,\n        showLabels = false;\n    scatter.xScale(x).yScale(y);\n    xAxis.orient('bottom').tickPadding(10);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left').tickPadding(10);\n    distX.axis('x');\n    distY.axis('y');\n    tooltip.headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0,\n        y0,\n        renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(scatter);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      if (showDistX) renderWatch.models(distX);\n      if (showDistY) renderWatch.models(distY);\n      selection.each(function (data) {\n        var that = this;\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          if (duration === 0) container.call(chart);else container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display noData message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          renderWatch.renderEnd('scatter immediate');\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = scatter.xScale();\n        y = scatter.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-scatterChart').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-scatterChart nv-chart-' + scatter.id());\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g'); // background for pointer events\n\n        gEnter.append('rect').attr('class', 'nvd3 nv-background').style(\"pointer-events\", \"none\");\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-scatterWrap');\n        gEnter.append('g').attr('class', 'nv-regressionLinesWrap');\n        gEnter.append('g').attr('class', 'nv-distWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } // Legend\n\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          var legendWidth = availableWidth;\n          legend.width(legendWidth);\n          wrap.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          wrap.select('.nv-legendWrap').attr('transform', 'translate(0' + ',' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        scatter.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          d.color = d.color || color(d, i);\n          return d.color;\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        })).showLabels(showLabels);\n        wrap.select('.nv-scatterWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        })).call(scatter);\n        wrap.select('.nv-regressionLinesWrap').attr('clip-path', 'url(#nv-edge-clip-' + scatter.id() + ')');\n        var regWrap = wrap.select('.nv-regressionLinesWrap').selectAll('.nv-regLines').data(function (d) {\n          return d;\n        });\n        regWrap.enter().append('g').attr('class', 'nv-regLines');\n        var regLine = regWrap.selectAll('.nv-regLine').data(function (d) {\n          return [d];\n        });\n        regLine.enter().append('line').attr('class', 'nv-regLine').style('stroke-opacity', 0); // don't add lines unless we have slope and intercept to use\n\n        regLine.filter(function (d) {\n          return d.intercept && d.slope;\n        }).watchTransition(renderWatch, 'scatterPlusLineChart: regline').attr('x1', x.range()[0]).attr('x2', x.range()[1]).attr('y1', function (d, i) {\n          return y(x.domain()[0] * d.slope + d.intercept);\n        }).attr('y2', function (d, i) {\n          return y(x.domain()[1] * d.slope + d.intercept);\n        }).style('stroke', function (d, i, j) {\n          return color(d, j);\n        }).style('stroke-opacity', function (d, i) {\n          return d.disabled || typeof d.slope === 'undefined' || typeof d.intercept === 'undefined' ? 0 : 1;\n        }); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')').call(xAxis);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } // Setup Distribution\n\n\n        if (showDistX) {\n          distX.getData(scatter.x()).scale(x).width(availableWidth).color(data.map(function (d, i) {\n            return d.color || color(d, i);\n          }).filter(function (d, i) {\n            return !data[i].disabled;\n          }));\n          gEnter.select('.nv-distWrap').append('g').attr('class', 'nv-distributionX');\n          g.select('.nv-distributionX').attr('transform', 'translate(0,' + y.range()[0] + ')').datum(data.filter(function (d) {\n            return !d.disabled;\n          })).call(distX);\n        }\n\n        if (showDistY) {\n          distY.getData(scatter.y()).scale(y).width(availableHeight).color(data.map(function (d, i) {\n            return d.color || color(d, i);\n          }).filter(function (d, i) {\n            return !data[i].disabled;\n          }));\n          gEnter.select('.nv-distWrap').append('g').attr('class', 'nv-distributionY');\n          g.select('.nv-distributionY').attr('transform', 'translate(' + (rightAlignYAxis ? availableWidth : -distY.size()) + ',0)').datum(data.filter(function (d) {\n            return !d.disabled;\n          })).call(distY);\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        }); // mouseover needs availableHeight so we just keep scatter mouse events inside the chart block\n\n        scatter.dispatch.on('elementMouseout.tooltip', function (evt) {\n          tooltip.hidden(true);\n          container.select('.nv-chart-' + scatter.id() + ' .nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex).attr('y1', 0);\n          container.select('.nv-chart-' + scatter.id() + ' .nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex).attr('x2', distY.size());\n        });\n        scatter.dispatch.on('elementMouseover.tooltip', function (evt) {\n          container.select('.nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex).attr('y1', evt.relativePos[1] - availableHeight);\n          container.select('.nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex).attr('x2', evt.relativePos[0] + distX.size());\n          tooltip.data(evt).hidden(false);\n        }); //store old scales for use in transitions on update\n\n        x0 = x.copy();\n        y0 = y.copy();\n      });\n      renderWatch.renderEnd('scatter with line immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n    chart.legend = legend;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.distX = distX;\n    chart.distY = distY;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      container: {\n        get: function get() {\n          return container;\n        },\n        set: function set(_) {\n          container = _;\n        }\n      },\n      showDistX: {\n        get: function get() {\n          return showDistX;\n        },\n        set: function set(_) {\n          showDistX = _;\n        }\n      },\n      showDistY: {\n        get: function get() {\n          return showDistY;\n        },\n        set: function set(_) {\n          showDistY = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n        }\n      },\n      showLabels: {\n        get: function get() {\n          return showLabels;\n        },\n        set: function set(_) {\n          showLabels = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          distX.color(color);\n          distY.color(color);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, scatter);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.sparkline = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 2,\n      right: 0,\n      bottom: 2,\n      left: 0\n    },\n        width = 400,\n        height = 32,\n        container = null,\n        animate = true,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        color = nv.utils.getColor(['#000']),\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        showMinMaxPoints = true,\n        showCurrentPoint = true,\n        dispatch = d3.dispatch('renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container); // Setup Scales\n\n        x.domain(xDomain || d3.extent(data, getX)).range(xRange || [0, availableWidth]);\n        y.domain(yDomain || d3.extent(data, getY)).range(yRange || [availableHeight, 0]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-sparkline').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-sparkline');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var paths = wrap.selectAll('path').data(function (d) {\n          return [d];\n        });\n        paths.enter().append('path');\n        paths.exit().remove();\n        paths.style('stroke', function (d, i) {\n          return d.color || color(d, i);\n        }).attr('d', d3.svg.line().x(function (d, i) {\n          return x(getX(d, i));\n        }).y(function (d, i) {\n          return y(getY(d, i));\n        })); // TODO: Add CURRENT data point (Need Min, Mac, Current / Most recent)\n\n        var points = wrap.selectAll('circle.nv-point').data(function (data) {\n          var yValues = data.map(function (d, i) {\n            return getY(d, i);\n          });\n\n          function pointIndex(index) {\n            if (index != -1) {\n              var result = data[index];\n              result.pointIndex = index;\n              return result;\n            } else {\n              return null;\n            }\n          }\n\n          var maxPoint = pointIndex(yValues.lastIndexOf(y.domain()[1])),\n              minPoint = pointIndex(yValues.indexOf(y.domain()[0])),\n              currentPoint = pointIndex(yValues.length - 1);\n          return [showMinMaxPoints ? minPoint : null, showMinMaxPoints ? maxPoint : null, showCurrentPoint ? currentPoint : null].filter(function (d) {\n            return d != null;\n          });\n        });\n        points.enter().append('circle');\n        points.exit().remove();\n        points.attr('cx', function (d, i) {\n          return x(getX(d, d.pointIndex));\n        }).attr('cy', function (d, i) {\n          return y(getY(d, d.pointIndex));\n        }).attr('r', 2).attr('class', function (d, i) {\n          return getX(d, d.pointIndex) == x.domain()[1] ? 'nv-point nv-currentValue' : getY(d, d.pointIndex) == y.domain()[0] ? 'nv-point nv-minValue' : 'nv-point nv-maxValue';\n        });\n      });\n      renderWatch.renderEnd('sparkline immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      animate: {\n        get: function get() {\n          return animate;\n        },\n        set: function set(_) {\n          animate = _;\n        }\n      },\n      showMinMaxPoints: {\n        get: function get() {\n          return showMinMaxPoints;\n        },\n        set: function set(_) {\n          showMinMaxPoints = _;\n        }\n      },\n      showCurrentPoint: {\n        get: function get() {\n          return showCurrentPoint;\n        },\n        set: function set(_) {\n          showCurrentPoint = _;\n        }\n      },\n      //functor options\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = d3.functor(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    chart.dispatch = dispatch;\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.sparklinePlus = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var sparkline = nv.models.sparkline();\n    var margin = {\n      top: 15,\n      right: 100,\n      bottom: 10,\n      left: 50\n    },\n        width = null,\n        height = null,\n        x,\n        y,\n        index = [],\n        paused = false,\n        xTickFormat = d3.format(',r'),\n        yTickFormat = d3.format(',.2f'),\n        showLastValue = true,\n        alignValue = true,\n        rightAlignValue = false,\n        noData = null,\n        dispatch = d3.dispatch('renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(sparkline);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.call(chart);\n        };\n\n        chart.container = this; // Display No Data message if there's nothing to show.\n\n        if (!data || !data.length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        var currentValue = sparkline.y()(data[data.length - 1], data.length - 1); // Setup Scales\n\n        x = sparkline.xScale();\n        y = sparkline.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-sparklineplus').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-sparklineplus');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-sparklineWrap');\n        gEnter.append('g').attr('class', 'nv-valueWrap');\n        gEnter.append('g').attr('class', 'nv-hoverArea');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        var sparklineWrap = g.select('.nv-sparklineWrap');\n        sparkline.width(availableWidth).height(availableHeight);\n        sparklineWrap.call(sparkline);\n\n        if (showLastValue) {\n          var valueWrap = g.select('.nv-valueWrap');\n          var value = valueWrap.selectAll('.nv-currentValue').data([currentValue]);\n          value.enter().append('text').attr('class', 'nv-currentValue').attr('dx', rightAlignValue ? -8 : 8).attr('dy', '.9em').style('text-anchor', rightAlignValue ? 'end' : 'start');\n          value.attr('x', availableWidth + (rightAlignValue ? margin.right : 0)).attr('y', alignValue ? function (d) {\n            return y(d);\n          } : 0).style('fill', sparkline.color()(data[data.length - 1], data.length - 1)).text(yTickFormat(currentValue));\n        }\n\n        gEnter.select('.nv-hoverArea').append('rect').on('mousemove', sparklineHover).on('click', function () {\n          paused = !paused;\n        }).on('mouseout', function () {\n          index = [];\n          updateValueLine();\n        });\n        g.select('.nv-hoverArea rect').attr('transform', function (d) {\n          return 'translate(' + -margin.left + ',' + -margin.top + ')';\n        }).attr('width', availableWidth + margin.left + margin.right).attr('height', availableHeight + margin.top); //index is currently global (within the chart), may or may not keep it that way\n\n        function updateValueLine() {\n          if (paused) return;\n          var hoverValue = g.selectAll('.nv-hoverValue').data(index);\n          var hoverEnter = hoverValue.enter().append('g').attr('class', 'nv-hoverValue').style('stroke-opacity', 0).style('fill-opacity', 0);\n          hoverValue.exit().transition().duration(250).style('stroke-opacity', 0).style('fill-opacity', 0).remove();\n          hoverValue.attr('transform', function (d) {\n            return 'translate(' + x(sparkline.x()(data[d], d)) + ',0)';\n          }).transition().duration(250).style('stroke-opacity', 1).style('fill-opacity', 1);\n          if (!index.length) return;\n          hoverEnter.append('line').attr('x1', 0).attr('y1', -margin.top).attr('x2', 0).attr('y2', availableHeight);\n          hoverEnter.append('text').attr('class', 'nv-xValue').attr('x', -6).attr('y', -margin.top).attr('text-anchor', 'end').attr('dy', '.9em');\n          g.select('.nv-hoverValue .nv-xValue').text(xTickFormat(sparkline.x()(data[index[0]], index[0])));\n          hoverEnter.append('text').attr('class', 'nv-yValue').attr('x', 6).attr('y', -margin.top).attr('text-anchor', 'start').attr('dy', '.9em');\n          g.select('.nv-hoverValue .nv-yValue').text(yTickFormat(sparkline.y()(data[index[0]], index[0])));\n        }\n\n        function sparklineHover() {\n          if (paused) return;\n          var pos = d3.mouse(this)[0] - margin.left;\n\n          function getClosestIndex(data, x) {\n            var distance = Math.abs(sparkline.x()(data[0], 0) - x);\n            var closestIndex = 0;\n\n            for (var i = 0; i < data.length; i++) {\n              if (Math.abs(sparkline.x()(data[i], i) - x) < distance) {\n                distance = Math.abs(sparkline.x()(data[i], i) - x);\n                closestIndex = i;\n              }\n            }\n\n            return closestIndex;\n          }\n\n          index = [getClosestIndex(data, Math.round(x.invert(pos)))];\n          updateValueLine();\n        }\n      });\n      renderWatch.renderEnd('sparklinePlus immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.sparkline = sparkline;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xTickFormat: {\n        get: function get() {\n          return xTickFormat;\n        },\n        set: function set(_) {\n          xTickFormat = _;\n        }\n      },\n      yTickFormat: {\n        get: function get() {\n          return yTickFormat;\n        },\n        set: function set(_) {\n          yTickFormat = _;\n        }\n      },\n      showLastValue: {\n        get: function get() {\n          return showLastValue;\n        },\n        set: function set(_) {\n          showLastValue = _;\n        }\n      },\n      alignValue: {\n        get: function get() {\n          return alignValue;\n        },\n        set: function set(_) {\n          alignValue = _;\n        }\n      },\n      rightAlignValue: {\n        get: function get() {\n          return rightAlignValue;\n        },\n        set: function set(_) {\n          rightAlignValue = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, sparkline);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.stackedArea = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        color = nv.utils.defaultColor() // a function that computes the color\n    ,\n        id = Math.floor(Math.random() * 100000) //Create semi-unique ID incase user doesn't selet one\n    ,\n        container = null,\n        getX = function getX(d) {\n      return d.x;\n    } // accessor to get the x value from a data point\n    ,\n        getY = function getY(d) {\n      return d.y;\n    } // accessor to get the y value from a data point\n    ,\n        defined = function defined(d, i) {\n      return !isNaN(getY(d, i)) && getY(d, i) !== null;\n    } // allows a line to be not continuous when it is not defined\n    ,\n        style = 'stack',\n        offset = 'zero',\n        order = 'default',\n        interpolate = 'linear' // controls the line interpolation\n    ,\n        clipEdge = false // if true, masks lines within x and y scale\n    ,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        scatter = nv.models.scatter(),\n        duration = 250,\n        dispatch = d3.dispatch('areaClick', 'areaMouseover', 'areaMouseout', 'renderEnd', 'elementClick', 'elementMouseover', 'elementMouseout');\n\n    scatter.pointSize(2.2) // default size\n    .pointDomain([2.2, 2.2]) // all the same size by default\n    ;\n    /************************************\n     * offset:\n     *   'wiggle' (stream)\n     *   'zero' (stacked)\n     *   'expand' (normalize to 100%)\n     *   'silhouette' (simple centered)\n     *\n     * order:\n     *   'inside-out' (stream)\n     *   'default' (input order)\n     ************************************/\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(scatter);\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container); // Setup Scales\n\n        x = scatter.xScale();\n        y = scatter.yScale();\n        var dataRaw = data; // Injecting point index into each point because d3.layout.stack().out does not give index\n\n        data.forEach(function (aseries, i) {\n          aseries.seriesIndex = i;\n          aseries.values = aseries.values.map(function (d, j) {\n            d.index = j;\n            d.seriesIndex = i;\n            return d;\n          });\n        });\n        var dataFiltered = data.filter(function (series) {\n          return !series.disabled;\n        });\n        data = d3.layout.stack().order(order).offset(offset).values(function (d) {\n          return d.values;\n        }) //TODO: make values customizeable in EVERY model in this fashion\n        .x(getX).y(getY).out(function (d, y0, y) {\n          d.display = {\n            y: y,\n            y0: y0\n          };\n        })(dataFiltered); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-stackedarea').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-stackedarea');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-areaWrap');\n        gEnter.append('g').attr('class', 'nv-scatterWrap');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // If the user has not specified forceY, make sure 0 is included in the domain\n        // Otherwise, use user-specified values for forceY\n\n        if (scatter.forceY().length == 0) {\n          scatter.forceY().push(0);\n        }\n\n        scatter.width(availableWidth).height(availableHeight).x(getX).y(function (d) {\n          if (d.display !== undefined) {\n            return d.display.y + d.display.y0;\n          }\n        }).color(data.map(function (d, i) {\n          d.color = d.color || color(d, d.seriesIndex);\n          return d.color;\n        }));\n        var scatterWrap = g.select('.nv-scatterWrap').datum(data);\n        scatterWrap.call(scatter);\n        defsEnter.append('clipPath').attr('id', 'nv-edge-clip-' + id).append('rect');\n        wrap.select('#nv-edge-clip-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n        var area = d3.svg.area().defined(defined).x(function (d, i) {\n          return x(getX(d, i));\n        }).y0(function (d) {\n          return y(d.display.y0);\n        }).y1(function (d) {\n          return y(d.display.y + d.display.y0);\n        }).interpolate(interpolate);\n        var zeroArea = d3.svg.area().defined(defined).x(function (d, i) {\n          return x(getX(d, i));\n        }).y0(function (d) {\n          return y(d.display.y0);\n        }).y1(function (d) {\n          return y(d.display.y0);\n        });\n        var path = g.select('.nv-areaWrap').selectAll('path.nv-area').data(function (d) {\n          return d;\n        });\n        path.enter().append('path').attr('class', function (d, i) {\n          return 'nv-area nv-area-' + i;\n        }).attr('d', function (d, i) {\n          return zeroArea(d.values, d.seriesIndex);\n        }).on('mouseover', function (d, i) {\n          d3.select(this).classed('hover', true);\n          dispatch.areaMouseover({\n            point: d,\n            series: d.key,\n            pos: [d3.event.pageX, d3.event.pageY],\n            seriesIndex: d.seriesIndex\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.areaMouseout({\n            point: d,\n            series: d.key,\n            pos: [d3.event.pageX, d3.event.pageY],\n            seriesIndex: d.seriesIndex\n          });\n        }).on('click', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.areaClick({\n            point: d,\n            series: d.key,\n            pos: [d3.event.pageX, d3.event.pageY],\n            seriesIndex: d.seriesIndex\n          });\n        });\n        path.exit().remove();\n        path.style('fill', function (d, i) {\n          return d.color || color(d, d.seriesIndex);\n        }).style('stroke', function (d, i) {\n          return d.color || color(d, d.seriesIndex);\n        });\n        path.watchTransition(renderWatch, 'stackedArea path').attr('d', function (d, i) {\n          return area(d.values, i);\n        }); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n        scatter.dispatch.on('elementMouseover.area', function (e) {\n          g.select('.nv-chart-' + id + ' .nv-area-' + e.seriesIndex).classed('hover', true);\n        });\n        scatter.dispatch.on('elementMouseout.area', function (e) {\n          g.select('.nv-chart-' + id + ' .nv-area-' + e.seriesIndex).classed('hover', false);\n        }); //Special offset functions\n\n        chart.d3_stackedOffset_stackPercent = function (stackData) {\n          var n = stackData.length,\n              //How many series\n          m = stackData[0].length,\n              //how many points per series\n          i,\n              j,\n              o,\n              y0 = [];\n\n          for (j = 0; j < m; ++j) {\n            //Looping through all points\n            for (i = 0, o = 0; i < dataRaw.length; i++) {\n              //looping through all series\n              o += getY(dataRaw[i].values[j]); //total y value of all series at a certian point in time.\n            }\n\n            if (o) for (i = 0; i < n; i++) {\n              //(total y value of all series at point in time i) != 0\n              stackData[i][j][1] /= o;\n            } else {\n              //(total y value of all series at point in time i) == 0\n              for (i = 0; i < n; i++) {\n                stackData[i][j][1] = 0;\n              }\n            }\n          }\n\n          for (j = 0; j < m; ++j) {\n            y0[j] = 0;\n          }\n\n          return y0;\n        };\n      });\n      renderWatch.renderEnd('stackedArea immediate');\n      return chart;\n    } //============================================================\n    // Global getters and setters\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n    scatter.dispatch.on('elementClick', function () {\n      dispatch.elementClick.apply(this, arguments);\n    });\n    scatter.dispatch.on('elementMouseover', function () {\n      dispatch.elementMouseover.apply(this, arguments);\n    });\n    scatter.dispatch.on('elementMouseout', function () {\n      dispatch.elementMouseout.apply(this, arguments);\n    });\n\n    chart.interpolate = function (_) {\n      if (!arguments.length) return interpolate;\n      interpolate = _;\n      return chart;\n    };\n\n    chart.duration = function (_) {\n      if (!arguments.length) return duration;\n      duration = _;\n      renderWatch.reset(duration);\n      scatter.duration(duration);\n      return chart;\n    };\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      defined: {\n        get: function get() {\n          return defined;\n        },\n        set: function set(_) {\n          defined = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      offset: {\n        get: function get() {\n          return offset;\n        },\n        set: function set(_) {\n          offset = _;\n        }\n      },\n      order: {\n        get: function get() {\n          return order;\n        },\n        set: function set(_) {\n          order = _;\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return interpolate;\n        },\n        set: function set(_) {\n          interpolate = _;\n        }\n      },\n      // simple functor options\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = d3.functor(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      style: {\n        get: function get() {\n          return style;\n        },\n        set: function set(_) {\n          style = _;\n\n          switch (style) {\n            case 'stack':\n              chart.offset('zero');\n              chart.order('default');\n              break;\n\n            case 'stream':\n              chart.offset('wiggle');\n              chart.order('inside-out');\n              break;\n\n            case 'stream-center':\n              chart.offset('silhouette');\n              chart.order('inside-out');\n              break;\n\n            case 'expand':\n              chart.offset('expand');\n              chart.order('default');\n              break;\n\n            case 'stack_percent':\n              chart.offset(chart.d3_stackedOffset_stackPercent);\n              chart.order('default');\n              break;\n          }\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          scatter.duration(duration);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, scatter);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.stackedAreaChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var stacked = nv.models.stackedArea(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        controls = nv.models.legend(),\n        interactiveLayer = nv.interactiveGuideline(),\n        tooltip = nv.models.tooltip(),\n        focus = nv.models.focus(nv.models.stackedArea());\n    var margin = {\n      top: 10,\n      right: 25,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor(),\n        showControls = true,\n        showLegend = true,\n        legendPosition = 'top',\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        focusEnable = false,\n        useInteractiveGuideline = false,\n        showTotalInTooltip = true,\n        totalLabel = 'TOTAL',\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        controlWidth = 250,\n        controlOptions = ['Stacked', 'Stream', 'Expanded'],\n        controlLabels = {},\n        duration = 250;\n    state.style = stacked.style();\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n    tooltip.headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }).valueFormatter(function (d, i) {\n      return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n    });\n    var oldYTickFormat = null,\n        oldValueFormatter = null;\n    controls.updateState(false); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n    var style = stacked.style();\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          }),\n          style: stacked.style()\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.style !== undefined) style = state.style;\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    var percentFormatter = d3.format('%');\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(stacked);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n\n        chart.update = function () {\n          container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = stacked.xScale();\n        y = stacked.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-stackedAreaChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-stackedAreaChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-controlsWrap');\n        var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n        focusEnter.append('g').attr('class', 'nv-background').append('rect');\n        focusEnter.append('g').attr('class', 'nv-x nv-axis');\n        focusEnter.append('g').attr('class', 'nv-y nv-axis');\n        focusEnter.append('g').attr('class', 'nv-stackedWrap');\n        focusEnter.append('g').attr('class', 'nv-interactive'); // g.select(\"rect\").attr(\"width\",availableWidth).attr(\"height\",availableHeight);\n\n        var contextEnter = gEnter.append('g').attr('class', 'nv-focusWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          var legendWidth = showControls && legendPosition === 'top' ? availableWidth - controlWidth : availableWidth;\n          legend.width(legendWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (legendPosition === 'bottom') {\n            // constant from axis.js, plus some margin for better layout\n            var xAxisHeight = (showXAxis ? 12 : 0) + 10;\n            margin.bottom = Math.max(legend.height() + xAxisHeight, margin.bottom);\n            availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n            var legendTop = availableHeight + xAxisHeight;\n            g.select('.nv-legendWrap').attr('transform', 'translate(0,' + legendTop + ')');\n          } else if (legendPosition === 'top') {\n            if (!marginTop && margin.top != legend.height()) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n            }\n\n            g.select('.nv-legendWrap').attr('transform', 'translate(' + (availableWidth - legendWidth) + ',' + -margin.top + ')');\n          }\n        } // Controls\n\n\n        if (!showControls) {\n          g.select('.nv-controlsWrap').selectAll('*').remove();\n        } else {\n          var controlsData = [{\n            key: controlLabels.stacked || 'Stacked',\n            metaKey: 'Stacked',\n            disabled: stacked.style() != 'stack',\n            style: 'stack'\n          }, {\n            key: controlLabels.stream || 'Stream',\n            metaKey: 'Stream',\n            disabled: stacked.style() != 'stream',\n            style: 'stream'\n          }, {\n            key: controlLabels.expanded || 'Expanded',\n            metaKey: 'Expanded',\n            disabled: stacked.style() != 'expand',\n            style: 'expand'\n          }, {\n            key: controlLabels.stack_percent || 'Stack %',\n            metaKey: 'Stack_Percent',\n            disabled: stacked.style() != 'stack_percent',\n            style: 'stack_percent'\n          }];\n          controlWidth = controlOptions.length / 3 * 260;\n          controlsData = controlsData.filter(function (d) {\n            return controlOptions.indexOf(d.metaKey) !== -1;\n          });\n          controls.width(controlWidth).color(['#444', '#444', '#444']);\n          g.select('.nv-controlsWrap').datum(controlsData).call(controls);\n          var requiredTop = Math.max(controls.height(), showLegend && legendPosition === 'top' ? legend.height() : 0);\n\n          if (margin.top != requiredTop) {\n            margin.top = requiredTop;\n            availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n          }\n\n          g.select('.nv-controlsWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        }\n\n        g.select('.nv-focus .nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n        stacked.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var stackedWrap = g.select('.nv-focus .nv-stackedWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        })); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n        }\n\n        if (showYAxis) {\n          var ticks;\n\n          if (stacked.offset() === 'wiggle') {\n            ticks = 0;\n          } else {\n            ticks = nv.utils.calcTicksY(availableHeight / 36, data);\n          }\n\n          yAxis.scale(y)._ticks(ticks).tickSize(-availableWidth, 0);\n        } //============================================================\n        // Update Axes\n        //============================================================\n\n\n        function updateXAxis() {\n          if (showXAxis) {\n            g.select('.nv-focus .nv-x.nv-axis').attr('transform', 'translate(0,' + availableHeight + ')').transition().duration(duration).call(xAxis);\n          }\n        }\n\n        function updateYAxis() {\n          if (showYAxis) {\n            if (stacked.style() === 'expand' || stacked.style() === 'stack_percent') {\n              var currentFormat = yAxis.tickFormat();\n              if (!oldYTickFormat || currentFormat !== percentFormatter) oldYTickFormat = currentFormat; //Forces the yAxis to use percentage in 'expand' mode.\n\n              yAxis.tickFormat(percentFormatter);\n            } else {\n              if (oldYTickFormat) {\n                yAxis.tickFormat(oldYTickFormat);\n                oldYTickFormat = null;\n              }\n            }\n\n            g.select('.nv-focus .nv-y.nv-axis').transition().duration(0).call(yAxis);\n          }\n        } //============================================================\n        // Update Focus\n        //============================================================\n\n\n        if (!focusEnable) {\n          stackedWrap.transition().call(stacked);\n          updateXAxis();\n          updateYAxis();\n        } else {\n          focus.width(availableWidth);\n          g.select('.nv-focusWrap').attr('transform', 'translate(0,' + (availableHeight + margin.bottom + focus.margin().top) + ')').datum(data.filter(function (d) {\n            return !d.disabled;\n          })).call(focus);\n          var extent = focus.brush.empty() ? focus.xDomain() : focus.brush.extent();\n\n          if (extent !== null) {\n            onBrush(extent);\n          }\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        stacked.dispatch.on('areaClick.toggle', function (e) {\n          if (data.filter(function (d) {\n            return !d.disabled;\n          }).length === 1) data.forEach(function (d) {\n            d.disabled = false;\n          });else data.forEach(function (d, i) {\n            d.disabled = i != e.seriesIndex;\n          });\n          state.disabled = data.map(function (d) {\n            return !!d.disabled;\n          });\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        controls.dispatch.on('legendClick', function (d, i) {\n          if (!d.disabled) return;\n          controlsData = controlsData.map(function (s) {\n            s.disabled = true;\n            return s;\n          });\n          d.disabled = false;\n          stacked.style(d.style);\n          state.style = stacked.style();\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        interactiveLayer.dispatch.on('elementMousemove', function (e) {\n          stacked.clearHighlights();\n          var singlePoint,\n              pointIndex,\n              pointXLocation,\n              allData = [],\n              valueSum = 0,\n              allNullValues = true,\n              atleastOnePoint = false;\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !series.disabled;\n          }).forEach(function (series, i) {\n            pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n            var point = series.values[pointIndex];\n            var pointYValue = chart.y()(point, pointIndex);\n\n            if (pointYValue != null && pointYValue > 0) {\n              stacked.highlightPoint(i, pointIndex, true);\n              atleastOnePoint = true;\n            } // Draw at least one point if all values are zero.\n\n\n            if (i === data.length - 1 && !atleastOnePoint) {\n              stacked.highlightPoint(i, pointIndex, true);\n            }\n\n            if (typeof point === 'undefined') return;\n            if (typeof singlePoint === 'undefined') singlePoint = point;\n            if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point, pointIndex)); //If we are in 'expand' mode, use the stacked percent value instead of raw value.\n\n            var tooltipValue = stacked.style() == 'expand' ? point.display.y : chart.y()(point, pointIndex);\n            allData.push({\n              key: series.key,\n              value: tooltipValue,\n              color: color(series, series.seriesIndex),\n              point: point\n            });\n\n            if (showTotalInTooltip && stacked.style() != 'expand' && tooltipValue != null) {\n              valueSum += tooltipValue;\n              allNullValues = false;\n            }\n\n            ;\n          });\n          allData.reverse(); //Highlight the tooltip entry based on which stack the mouse is closest to.\n\n          if (allData.length > 2) {\n            var yValue = chart.yScale().invert(e.mouseY);\n            var yDistMax = Infinity,\n                indexToHighlight = null;\n            allData.forEach(function (series, i) {\n              //To handle situation where the stacked area chart is negative, we need to use absolute values\n              //when checking if the mouse Y value is within the stack area.\n              yValue = Math.abs(yValue);\n              var stackedY0 = Math.abs(series.point.display.y0);\n              var stackedY = Math.abs(series.point.display.y);\n\n              if (yValue >= stackedY0 && yValue <= stackedY + stackedY0) {\n                indexToHighlight = i;\n                return;\n              }\n            });\n            if (indexToHighlight != null) allData[indexToHighlight].highlight = true;\n          } //If we are not in 'expand' mode, add a 'Total' row to the tooltip.\n\n\n          if (showTotalInTooltip && stacked.style() != 'expand' && allData.length >= 2 && !allNullValues) {\n            allData.push({\n              key: totalLabel,\n              value: valueSum,\n              total: true\n            });\n          }\n\n          var xValue = chart.x()(singlePoint, pointIndex);\n          var valueFormatter = interactiveLayer.tooltip.valueFormatter(); // Keeps track of the tooltip valueFormatter if the chart changes to expanded view\n\n          if (stacked.style() === 'expand' || stacked.style() === 'stack_percent') {\n            if (!oldValueFormatter) {\n              oldValueFormatter = valueFormatter;\n            } //Forces the tooltip to use percentage in 'expand' mode.\n\n\n            valueFormatter = d3.format(\".1%\");\n          } else {\n            if (oldValueFormatter) {\n              valueFormatter = oldValueFormatter;\n              oldValueFormatter = null;\n            }\n          }\n\n          interactiveLayer.tooltip.valueFormatter(valueFormatter).data({\n            value: xValue,\n            series: allData\n          })();\n          interactiveLayer.renderGuideLine(pointXLocation);\n        });\n        interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n          stacked.clearHighlights();\n        });\n        /* Update `main' graph on brush update. */\n\n        focus.dispatch.on(\"onBrush\", function (extent) {\n          onBrush(extent);\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined' && data.length === e.disabled.length) {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          if (typeof e.style !== 'undefined') {\n            stacked.style(e.style);\n            style = e.style;\n          }\n\n          chart.update();\n        }); //============================================================\n        // Functions\n        //------------------------------------------------------------\n\n        function onBrush(extent) {\n          // Update Main (Focus)\n          var stackedWrap = g.select('.nv-focus .nv-stackedWrap').datum(data.filter(function (d) {\n            return !d.disabled;\n          }).map(function (d, i) {\n            return {\n              key: d.key,\n              area: d.area,\n              classed: d.classed,\n              values: d.values.filter(function (d, i) {\n                return stacked.x()(d, i) >= extent[0] && stacked.x()(d, i) <= extent[1];\n              }),\n              disableTooltip: d.disableTooltip\n            };\n          }));\n          stackedWrap.transition().duration(duration).call(stacked); // Update Main (Focus) Axes\n\n          updateXAxis();\n          updateYAxis();\n        }\n      });\n      renderWatch.renderEnd('stacked Area chart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    stacked.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt.point['x'] = stacked.x()(evt.point);\n      evt.point['y'] = stacked.y()(evt.point);\n      tooltip.data(evt).hidden(false);\n    });\n    stacked.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.stacked = stacked;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.x2Axis = focus.xAxis;\n    chart.yAxis = yAxis;\n    chart.y2Axis = focus.yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.tooltip = tooltip;\n    chart.focus = focus;\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      showControls: {\n        get: function get() {\n          return showControls;\n        },\n        set: function set(_) {\n          showControls = _;\n        }\n      },\n      controlLabels: {\n        get: function get() {\n          return controlLabels;\n        },\n        set: function set(_) {\n          controlLabels = _;\n        }\n      },\n      controlOptions: {\n        get: function get() {\n          return controlOptions;\n        },\n        set: function set(_) {\n          controlOptions = _;\n        }\n      },\n      showTotalInTooltip: {\n        get: function get() {\n          return showTotalInTooltip;\n        },\n        set: function set(_) {\n          showTotalInTooltip = _;\n        }\n      },\n      totalLabel: {\n        get: function get() {\n          return totalLabel;\n        },\n        set: function set(_) {\n          totalLabel = _;\n        }\n      },\n      focusEnable: {\n        get: function get() {\n          return focusEnable;\n        },\n        set: function set(_) {\n          focusEnable = _;\n        }\n      },\n      focusHeight: {\n        get: function get() {\n          return focus.height();\n        },\n        set: function set(_) {\n          focus.height(_);\n        }\n      },\n      brushExtent: {\n        get: function get() {\n          return focus.brushExtent();\n        },\n        set: function set(_) {\n          focus.brushExtent(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      focusMargin: {\n        get: function get() {\n          return focus.margin;\n        },\n        set: function set(_) {\n          focus.margin.top = _.top !== undefined ? _.top : focus.margin.top;\n          focus.margin.right = _.right !== undefined ? _.right : focus.margin.right;\n          focus.margin.bottom = _.bottom !== undefined ? _.bottom : focus.margin.bottom;\n          focus.margin.left = _.left !== undefined ? _.left : focus.margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          stacked.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          stacked.color(color);\n          focus.color(color);\n        }\n      },\n      x: {\n        get: function get() {\n          return stacked.x();\n        },\n        set: function set(_) {\n          stacked.x(_);\n          focus.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return stacked.y();\n        },\n        set: function set(_) {\n          stacked.y(_);\n          focus.y(_);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = !!_;\n          chart.interactive(!_);\n          chart.useVoronoi(!_);\n          stacked.scatter.interactive(!_);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, stacked);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.stackedAreaWithFocusChart = function () {\n    return nv.models.stackedAreaChart().margin({\n      bottom: 30\n    }).focusEnable(true);\n  }; // based on http://bl.ocks.org/kerryrodden/477c1bfb081b783f80ad\n\n\n  nv.models.sunburst = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 600,\n        height = 600,\n        mode = \"count\",\n        modes = {\n      count: function count(d) {\n        return 1;\n      },\n      value: function value(d) {\n        return d.value || d.size;\n      },\n      size: function size(d) {\n        return d.value || d.size;\n      }\n    },\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        color = nv.utils.defaultColor(),\n        showLabels = false,\n        labelFormat = function labelFormat(d) {\n      if (mode === 'count') {\n        return d.name + ' #' + d.value;\n      } else {\n        return d.name + ' ' + (d.value || d.size);\n      }\n    },\n        labelThreshold = 0.02,\n        sort = function sort(d1, d2) {\n      return d1.name > d2.name;\n    },\n        key = function key(d, i) {\n      if (d.parent !== undefined) {\n        return d.name + '-' + d.parent.name + '-' + i;\n      } else {\n        return d.name;\n      }\n    },\n        groupColorByParent = true,\n        duration = 500,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMousemove', 'elementMouseover', 'elementMouseout', 'renderEnd'); //============================================================\n    // aux functions and setup\n    //------------------------------------------------------------\n\n\n    var x = d3.scale.linear().range([0, 2 * Math.PI]);\n    var y = d3.scale.sqrt();\n    var partition = d3.layout.partition().sort(sort);\n    var node, availableWidth, availableHeight, radius;\n    var prevPositions = {};\n    var arc = d3.svg.arc().startAngle(function (d) {\n      return Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n    }).endAngle(function (d) {\n      return Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n    }).innerRadius(function (d) {\n      return Math.max(0, y(d.y));\n    }).outerRadius(function (d) {\n      return Math.max(0, y(d.y + d.dy));\n    });\n\n    function rotationToAvoidUpsideDown(d) {\n      var centerAngle = computeCenterAngle(d);\n\n      if (centerAngle > 90) {\n        return 180;\n      } else {\n        return 0;\n      }\n    }\n\n    function computeCenterAngle(d) {\n      var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n      var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n      var centerAngle = (startAngle + endAngle) / 2 * (180 / Math.PI) - 90;\n      return centerAngle;\n    }\n\n    function computeNodePercentage(d) {\n      var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n      var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n      return (endAngle - startAngle) / (2 * Math.PI);\n    }\n\n    function labelThresholdMatched(d) {\n      var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n      var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n      var size = endAngle - startAngle;\n      return size > labelThreshold;\n    } // When zooming: interpolate the scales.\n\n\n    function arcTweenZoom(e, i) {\n      var xd = d3.interpolate(x.domain(), [node.x, node.x + node.dx]),\n          yd = d3.interpolate(y.domain(), [node.y, 1]),\n          yr = d3.interpolate(y.range(), [node.y ? 20 : 0, radius]);\n\n      if (i === 0) {\n        return function () {\n          return arc(e);\n        };\n      } else {\n        return function (t) {\n          x.domain(xd(t));\n          y.domain(yd(t)).range(yr(t));\n          return arc(e);\n        };\n      }\n\n      ;\n    }\n\n    function arcTweenUpdate(d) {\n      var ipo = d3.interpolate({\n        x: d.x0,\n        dx: d.dx0,\n        y: d.y0,\n        dy: d.dy0\n      }, d);\n      return function (t) {\n        var b = ipo(t);\n        d.x0 = b.x;\n        d.dx0 = b.dx;\n        d.y0 = b.y;\n        d.dy0 = b.dy;\n        return arc(b);\n      };\n    }\n\n    function updatePrevPosition(node) {\n      var k = key(node);\n      if (!prevPositions[k]) prevPositions[k] = {};\n      var pP = prevPositions[k];\n      pP.dx = node.dx;\n      pP.x = node.x;\n      pP.dy = node.dy;\n      pP.y = node.y;\n    }\n\n    function storeRetrievePrevPositions(nodes) {\n      nodes.forEach(function (n) {\n        var k = key(n);\n        var pP = prevPositions[k]; //console.log(k,n,pP);\n\n        if (pP) {\n          n.dx0 = pP.dx;\n          n.x0 = pP.x;\n          n.dy0 = pP.dy;\n          n.y0 = pP.y;\n        } else {\n          n.dx0 = n.dx;\n          n.x0 = n.x;\n          n.dy0 = n.dy;\n          n.y0 = n.y;\n        }\n\n        updatePrevPosition(n);\n      });\n    }\n\n    function zoomClick(d) {\n      var labels = container.selectAll('text');\n      var path = container.selectAll('path'); // fade out all text elements\n\n      labels.transition().attr(\"opacity\", 0); // to allow reference to the new center node\n\n      node = d;\n      path.transition().duration(duration).attrTween(\"d\", arcTweenZoom).each('end', function (e) {\n        // partially taken from here: http://bl.ocks.org/metmajer/5480307\n        // check if the animated element's data e lies within the visible angle span given in d\n        if (e.x >= d.x && e.x < d.x + d.dx) {\n          if (e.depth >= d.depth) {\n            // get a selection of the associated text element\n            var parentNode = d3.select(this.parentNode);\n            var arcText = parentNode.select('text'); // fade in the text element and recalculate positions\n\n            arcText.transition().duration(duration).text(function (e) {\n              return labelFormat(e);\n            }).attr(\"opacity\", function (d) {\n              if (labelThresholdMatched(d)) {\n                return 1;\n              } else {\n                return 0;\n              }\n            }).attr(\"transform\", function () {\n              var width = this.getBBox().width;\n              if (e.depth === 0) return \"translate(\" + width / 2 * -1 + \",0)\";else if (e.depth === d.depth) {\n                return \"translate(\" + (y(e.y) + 5) + \",0)\";\n              } else {\n                var centerAngle = computeCenterAngle(e);\n                var rotation = rotationToAvoidUpsideDown(e);\n\n                if (rotation === 0) {\n                  return 'rotate(' + centerAngle + ')translate(' + (y(e.y) + 5) + ',0)';\n                } else {\n                  return 'rotate(' + centerAngle + ')translate(' + (y(e.y) + width + 5) + ',0)rotate(' + rotation + ')';\n                }\n              }\n            });\n          }\n        }\n      });\n    } //============================================================\n    // chart function\n    //------------------------------------------------------------\n\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        container = d3.select(this);\n        availableWidth = nv.utils.availableWidth(width, container, margin);\n        availableHeight = nv.utils.availableHeight(height, container, margin);\n        radius = Math.min(availableWidth, availableHeight) / 2;\n        y.range([0, radius]); // Setup containers and skeleton of chart\n\n        var wrap = container.select('g.nvd3.nv-wrap.nv-sunburst');\n\n        if (!wrap[0][0]) {\n          wrap = container.append('g').attr('class', 'nvd3 nv-wrap nv-sunburst nv-chart-' + id).attr('transform', 'translate(' + (availableWidth / 2 + margin.left + margin.right) + ',' + (availableHeight / 2 + margin.top + margin.bottom) + ')');\n        } else {\n          wrap.attr('transform', 'translate(' + (availableWidth / 2 + margin.left + margin.right) + ',' + (availableHeight / 2 + margin.top + margin.bottom) + ')');\n        }\n\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        partition.value(modes[mode] || modes[\"count\"]); //reverse the drawing order so that the labels of inner\n        //arcs are drawn on top of the outer arcs.\n\n        var nodes = partition.nodes(data[0]).reverse();\n        storeRetrievePrevPositions(nodes);\n        var cG = wrap.selectAll('.arc-container').data(nodes, key); //handle new datapoints\n\n        var cGE = cG.enter().append(\"g\").attr(\"class\", 'arc-container');\n        cGE.append(\"path\").attr(\"d\", arc).style(\"fill\", function (d) {\n          if (d.color) {\n            return d.color;\n          } else if (groupColorByParent) {\n            return color((d.children ? d : d.parent).name);\n          } else {\n            return color(d.name);\n          }\n        }).style(\"stroke\", \"#FFF\").on(\"click\", function (d, i) {\n          zoomClick(d);\n          dispatch.elementClick({\n            data: d,\n            index: i\n          });\n        }).on('mouseover', function (d, i) {\n          d3.select(this).classed('hover', true).style('opacity', 0.8);\n          dispatch.elementMouseover({\n            data: d,\n            color: d3.select(this).style(\"fill\"),\n            percent: computeNodePercentage(d)\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false).style('opacity', 1);\n          dispatch.elementMouseout({\n            data: d\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            data: d\n          });\n        }); ///Iterating via each and selecting based on the this\n        ///makes it work ... a cG.selectAll('path') doesn't.\n        ///Without iteration the data (in the element) didn't update.\n\n        cG.each(function (d) {\n          d3.select(this).select('path').transition().duration(duration).attrTween('d', arcTweenUpdate);\n        });\n\n        if (showLabels) {\n          //remove labels first and add them back\n          cG.selectAll('text').remove(); //this way labels are on top of newly added arcs\n\n          cG.append('text').text(function (e) {\n            return labelFormat(e);\n          }).transition().duration(duration).attr(\"opacity\", function (d) {\n            if (labelThresholdMatched(d)) {\n              return 1;\n            } else {\n              return 0;\n            }\n          }).attr(\"transform\", function (d) {\n            var width = this.getBBox().width;\n\n            if (d.depth === 0) {\n              return \"rotate(0)translate(\" + width / 2 * -1 + \",0)\";\n            } else {\n              var centerAngle = computeCenterAngle(d);\n              var rotation = rotationToAvoidUpsideDown(d);\n\n              if (rotation === 0) {\n                return 'rotate(' + centerAngle + ')translate(' + (y(d.y) + 5) + ',0)';\n              } else {\n                return 'rotate(' + centerAngle + ')translate(' + (y(d.y) + width + 5) + ',0)rotate(' + rotation + ')';\n              }\n            }\n          });\n        } //zoom out to the center when the data is updated.\n\n\n        zoomClick(nodes[nodes.length - 1]); //remove unmatched elements ...\n\n        cG.exit().transition().duration(duration).attr('opacity', 0).each('end', function (d) {\n          var k = key(d);\n          prevPositions[k] = undefined;\n        }).remove();\n      });\n      renderWatch.renderEnd('sunburst immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      mode: {\n        get: function get() {\n          return mode;\n        },\n        set: function set(_) {\n          mode = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n        }\n      },\n      groupColorByParent: {\n        get: function get() {\n          return groupColorByParent;\n        },\n        set: function set(_) {\n          groupColorByParent = !!_;\n        }\n      },\n      showLabels: {\n        get: function get() {\n          return showLabels;\n        },\n        set: function set(_) {\n          showLabels = !!_;\n        }\n      },\n      labelFormat: {\n        get: function get() {\n          return labelFormat;\n        },\n        set: function set(_) {\n          labelFormat = _;\n        }\n      },\n      labelThreshold: {\n        get: function get() {\n          return labelThreshold;\n        },\n        set: function set(_) {\n          labelThreshold = _;\n        }\n      },\n      sort: {\n        get: function get() {\n          return sort;\n        },\n        set: function set(_) {\n          sort = _;\n        }\n      },\n      key: {\n        get: function get() {\n          return key;\n        },\n        set: function set(_) {\n          key = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top != undefined ? _.top : margin.top;\n          margin.right = _.right != undefined ? _.right : margin.right;\n          margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n          margin.left = _.left != undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.sunburstChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var sunburst = nv.models.sunburst();\n    var tooltip = nv.models.tooltip();\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 20,\n      left: 20\n    },\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor(),\n        showTooltipPercent = false,\n        id = Math.round(Math.random() * 100000),\n        defaultState = null,\n        noData = null,\n        duration = 250,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n    tooltip.duration(0).headerEnabled(false).valueFormatter(function (d) {\n      return d;\n    }); //============================================================\n    // Chart function\n    //------------------------------------------------------------\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(sunburst);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin);\n        var availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          if (duration === 0) {\n            container.call(chart);\n          } else {\n            container.transition().duration(duration).call(chart);\n          }\n        };\n\n        chart.container = container; // Display No Data message if there's nothing to show.\n\n        if (!data || !data.length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        sunburst.width(availableWidth).height(availableHeight).margin(margin);\n        container.call(sunburst);\n      });\n      renderWatch.renderEnd('sunburstChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    sunburst.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt.series = {\n        key: evt.data.name,\n        value: evt.data.value || evt.data.size,\n        color: evt.color,\n        percent: evt.percent\n      };\n\n      if (!showTooltipPercent) {\n        delete evt.percent;\n        delete evt.series.percent;\n      }\n\n      tooltip.data(evt).hidden(false);\n    });\n    sunburst.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    sunburst.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.sunburst = sunburst;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart); // use Object get/set functionality to map between vars and chart functions\n\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      showTooltipPercent: {\n        get: function get() {\n          return showTooltipPercent;\n        },\n        set: function set(_) {\n          showTooltipPercent = _;\n        }\n      },\n      // options that require extra logic in the setter\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = _;\n          sunburst.color(color);\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          sunburst.duration(duration);\n        }\n      },\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n          sunburst.margin(margin);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, sunburst);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.version = \"1.8.6\";\n})();","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { createBootstrapComponent } from './ThemeProvider';\n\nvar Row =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Row, _React$Component);\n\n  function Row() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Row.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        bsPrefix = _this$props.bsPrefix,\n        noGutters = _this$props.noGutters,\n        Component = _this$props.as,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"bsPrefix\", \"noGutters\", \"as\", \"className\"]);\n\n    return React.createElement(Component, _extends({}, props, {\n      className: classNames(className, bsPrefix, noGutters && 'no-gutters')\n    }));\n  };\n\n  return Row;\n}(React.Component);\n\nRow.defaultProps = {\n  as: 'div',\n  noGutters: false\n};\nexport default createBootstrapComponent(Row, 'row');","var baseMerge = require('./_baseMerge'),\n    createAssigner = require('./_createAssigner');\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\n\n\nvar merge = createAssigner(function (object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\nmodule.exports = merge;","var Stack = require('./_Stack'),\n    assignMergeValue = require('./_assignMergeValue'),\n    baseFor = require('./_baseFor'),\n    baseMergeDeep = require('./_baseMergeDeep'),\n    isObject = require('./isObject'),\n    keysIn = require('./keysIn'),\n    safeGet = require('./_safeGet');\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\n\n\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n\n  baseFor(source, function (srcValue, key) {\n    stack || (stack = new Stack());\n\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    } else {\n      var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + '', object, source, stack) : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nmodule.exports = baseMerge;","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;","var assocIndexOf = require('./_assocIndexOf');\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nmodule.exports = listCacheSet;","var ListCache = require('./_ListCache');\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nmodule.exports = stackClear;","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;","var Symbol = require('./_Symbol');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;","var coreJsData = require('./_coreJsData');\n/** Used to detect methods masquerading as native. */\n\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nmodule.exports = isMasked;","var root = require('./_root');\n/** Used to detect overreaching core-js shims. */\n\n\nvar coreJsData = root['__core-js_shared__'];\nmodule.exports = coreJsData;","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nmodule.exports = mapCacheClear;","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;","var nativeCreate = require('./_nativeCreate');\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;","var nativeCreate = require('./_nativeCreate');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;","var getMapData = require('./_getMapData');\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nmodule.exports = isKeyable;","var getMapData = require('./_getMapData');\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;","var getMapData = require('./_getMapData');\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;","var getMapData = require('./_getMapData');\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var assignMergeValue = require('./_assignMergeValue'),\n    cloneBuffer = require('./_cloneBuffer'),\n    cloneTypedArray = require('./_cloneTypedArray'),\n    copyArray = require('./_copyArray'),\n    initCloneObject = require('./_initCloneObject'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    isBuffer = require('./isBuffer'),\n    isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    isPlainObject = require('./isPlainObject'),\n    isTypedArray = require('./isTypedArray'),\n    safeGet = require('./_safeGet'),\n    toPlainObject = require('./toPlainObject');\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\n\n\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n\n  var newValue = customizer ? customizer(objValue, srcValue, key + '', object, source, stack) : undefined;\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n    newValue = srcValue;\n\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      } else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      } else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      } else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      } else {\n        newValue = [];\n      }\n    } else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      } else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    } else {\n      isCommon = false;\n    }\n  }\n\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n\n  assignMergeValue(object, key, newValue);\n}\n\nmodule.exports = baseMergeDeep;","var root = require('./_root');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\n\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\n\n\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nmodule.exports = cloneTypedArray;","var Uint8Array = require('./_Uint8Array');\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\n\n\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nmodule.exports = cloneArrayBuffer;","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n  array || (array = Array(length));\n\n  while (++index < length) {\n    array[index] = source[index];\n  }\n\n  return array;\n}\n\nmodule.exports = copyArray;","var baseCreate = require('./_baseCreate'),\n    getPrototype = require('./_getPrototype'),\n    isPrototype = require('./_isPrototype');\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\n\n\nfunction initCloneObject(object) {\n  return typeof object.constructor == 'function' && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};\n}\n\nmodule.exports = initCloneObject;","var isObject = require('./isObject');\n/** Built-in value references. */\n\n\nvar objectCreate = Object.create;\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\n\nvar baseCreate = function () {\n  function object() {}\n\n  return function (proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n\n    object.prototype = proto;\n    var result = new object();\n    object.prototype = undefined;\n    return result;\n  };\n}();\n\nmodule.exports = baseCreate;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;","var isArrayLike = require('./isArrayLike'),\n    isObjectLike = require('./isObjectLike');\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\n\n\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;","var baseGetTag = require('./_baseGetTag'),\n    getPrototype = require('./_getPrototype'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to infer the `Object` constructor. */\n\nvar objectCtorString = funcToString.call(Object);\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\n\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n\n  var proto = getPrototype(value);\n\n  if (proto === null) {\n    return true;\n  }\n\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;\n}\n\nmodule.exports = isPlainObject;","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nmodule.exports = nodeUtil;","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\n\n\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\nmodule.exports = toPlainObject;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nmodule.exports = baseTimes;","var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeysIn;","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = nativeKeysIn;","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\n\n\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;","var apply = require('./_apply');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeMax = Math.max;\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\n\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? func.length - 1 : start, 0);\n  return function () {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n\n    index = -1;\n    var otherArgs = Array(start + 1);\n\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0:\n      return func.call(thisArg);\n\n    case 1:\n      return func.call(thisArg, args[0]);\n\n    case 2:\n      return func.call(thisArg, args[0], args[1]);\n\n    case 3:\n      return func.call(thisArg, args[0], args[1], args[2]);\n  }\n\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;","var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\n\n\nvar setToString = shortOut(baseSetToString);\nmodule.exports = setToString;","var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\n\n\nvar baseSetToString = !defineProperty ? identity : function (func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\nmodule.exports = baseSetToString;","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function () {\n    return value;\n  };\n}\n\nmodule.exports = constant;","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeNow = Date.now;\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\n\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n  return function () {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n    lastCalled = stamp;\n\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\n\n\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n\n  var type = typeof index;\n\n  if (type == 'number' ? isArrayLike(object) && isIndex(index, object.length) : type == 'string' && index in object) {\n    return eq(object[index], value);\n  }\n\n  return false;\n}\n\nmodule.exports = isIterateeCall;","var assignValue = require('./_assignValue'),\n    copyObject = require('./_copyObject'),\n    createAssigner = require('./_createAssigner'),\n    isArrayLike = require('./isArrayLike'),\n    isPrototype = require('./_isPrototype'),\n    keys = require('./keys');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\n\nvar assign = createAssigner(function (object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\nmodule.exports = assign;","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeys;","var overArg = require('./_overArg');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;","var createFind = require('./_createFind'),\n    findIndex = require('./findIndex');\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\n\n\nvar find = createFind(findIndex);\nmodule.exports = find;","var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\n\n\nfunction createFind(findIndexFunc) {\n  return function (collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n\n      predicate = function predicate(key) {\n        return iteratee(iterable[key], key, iterable);\n      };\n    }\n\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nmodule.exports = SetCache;","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nmodule.exports = setCacheAdd;","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Check that cyclic values are equal.\n\n\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nmodule.exports = arrayPush;","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nmodule.exports = getSymbols;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayFilter;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = getTag;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar DataView = getNative(root, 'DataView');\nmodule.exports = DataView;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Promise = getNative(root, 'Promise');\nmodule.exports = Promise;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Set = getNative(root, 'Set');\nmodule.exports = Set;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar WeakMap = getNative(root, 'WeakMap');\nmodule.exports = WeakMap;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var baseGet = require('./_baseGet');\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;","var memoizeCapped = require('./_memoizeCapped');\n/** Used to match property names within property paths. */\n\n\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = memoizeCapped(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n      result.push('');\n    }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\nmodule.exports = stringToPath;","var memoize = require('./memoize');\n/** Used as the maximum memoize cache size. */\n\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;","var MapCache = require('./_MapCache');\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function memoized() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n} // Expose `MapCache`.\n\n\nmemoize.Cache = MapCache;\nmodule.exports = memoize;","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeMax = Math.max;\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\n\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n\n  if (!length) {\n    return -1;\n  }\n\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while (fromRight ? index-- : ++index < length) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = baseFindIndex;","var toFinite = require('./toFinite');\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\n\n\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n  return result === result ? remainder ? result - remainder : result : 0;\n}\n\nmodule.exports = toInteger;","var toNumber = require('./toNumber');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\n\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n\n  value = toNumber(value);\n\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = value < 0 ? -1 : 1;\n    return sign * MAX_INTEGER;\n  }\n\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar NAN = 0 / 0;\n/** Used to detect bad signed hexadecimal string values. */\n\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n/** Used to detect binary string values. */\n\nvar reIsBinary = /^0b[01]+$/i;\n/** Used to detect octal string values. */\n\nvar reIsOctal = /^0o[0-7]+$/i;\n/** Built-in method references without a dependency on `root`. */\n\nvar freeParseInt = parseInt;\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\n\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n\n  if (isSymbol(value)) {\n    return NAN;\n  }\n\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? other + '' : other;\n  }\n\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;\n}\n\nmodule.exports = toNumber;","var trimmedEndIndex = require('./_trimmedEndIndex');\n/** Used to match leading whitespace. */\n\n\nvar reTrimStart = /^\\s+/;\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\n\nfunction baseTrim(string) {\n  return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '') : string;\n}\n\nmodule.exports = baseTrim;","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\n\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;","import getPrototypeOf from \"./getPrototypeOf\";\nimport superPropBase from \"./superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import _toConsumableArray from \"C:\\\\Users\\\\devik\\\\Desktop\\\\admin-Final-app-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"C:\\\\Users\\\\devik\\\\Desktop\\\\admin-Final-app-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\devik\\\\Desktop\\\\admin-Final-app-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\devik\\\\Desktop\\\\admin-Final-app-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/*!\n * Chart.js v3.3.2\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\nvar requestAnimFrame = function () {\n  if (typeof window === 'undefined') {\n    return function (callback) {\n      return callback();\n    };\n  }\n\n  return window.requestAnimationFrame;\n}();\n\nfunction throttled(fn, thisArg, updateFn) {\n  var updateArgs = updateFn || function (args) {\n    return Array.prototype.slice.call(args);\n  };\n\n  var ticking = false;\n  var args = [];\n  return function () {\n    for (var _len = arguments.length, rest = new Array(_len), _key = 0; _key < _len; _key++) {\n      rest[_key] = arguments[_key];\n    }\n\n    args = updateArgs(rest);\n\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, function () {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\n\nfunction debounce(fn, delay) {\n  var timeout;\n  return function () {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay);\n    } else {\n      fn();\n    }\n\n    return delay;\n  };\n}\n\nvar _toLeftRightCenter = function _toLeftRightCenter(align) {\n  return align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n};\n\nvar _alignStartEnd = function _alignStartEnd(align, start, end) {\n  return align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n};\n\nvar _textX = function _textX(align, left, right) {\n  return align === 'right' ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\nfunction noop() {}\n\nvar uid = function () {\n  var id = 0;\n  return function () {\n    return id++;\n  };\n}();\n\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\n\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n\n  var type = Object.prototype.toString.call(value);\n\n  if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\nvar isNumberFinite = function isNumberFinite(value) {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n};\n\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nvar toPercentage = function toPercentage(value, dimension) {\n  return typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : value / dimension;\n};\n\nvar toDimension = function toDimension(value, dimension) {\n  return typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n};\n\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\nfunction each(loopable, fn, thisArg, reverse) {\n  var i, len, keys;\n\n  if (isArray(loopable)) {\n    len = loopable.length;\n\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\nfunction _elementsEqual(a0, a1) {\n  var i, ilen, v0, v1;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n\n  if (isObject(source)) {\n    var target = Object.create(null);\n    var keys = Object.keys(source);\n    var klen = keys.length;\n    var k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  var tval = target[key];\n  var sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\n\nfunction merge(target, source, options) {\n  var sources = isArray(source) ? source : [source];\n  var ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target;\n  }\n\n  options = options || {};\n  var merger = options.merger || _merger;\n\n  for (var i = 0; i < ilen; ++i) {\n    source = sources[i];\n\n    if (!isObject(source)) {\n      continue;\n    }\n\n    var keys = Object.keys(source);\n\n    for (var k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n\n  return target;\n}\n\nfunction mergeIf(target, source) {\n  return merge(target, source, {\n    merger: _mergerIf\n  });\n}\n\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  var tval = target[key];\n  var sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\n\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\nvar emptyString = '';\nvar dot = '.';\n\nfunction indexOfDotOrLength(key, start) {\n  var idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\n\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n\n  var pos = 0;\n  var idx = indexOfDotOrLength(key, pos);\n\n  while (obj && idx > pos) {\n    obj = obj[key.substr(pos, idx - pos)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n\n  return obj;\n}\n\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nvar defined = function defined(value) {\n  return typeof value !== 'undefined';\n};\n\nvar isFunction = function isFunction(value) {\n  return typeof value === 'function';\n};\n\nvar setsEqual = function setsEqual(a, b) {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = a[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var item = _step.value;\n\n      if (!b.has(item)) {\n        return false;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return true;\n};\n\nvar PI = Math.PI;\nvar TAU = 2 * PI;\nvar PITAU = TAU + PI;\nvar INFINITY = Number.POSITIVE_INFINITY;\nvar RAD_PER_DEG = PI / 180;\nvar HALF_PI = PI / 2;\nvar QUARTER_PI = PI / 4;\nvar TWO_THIRDS_PI = PI * 2 / 3;\nvar log10 = Math.log10;\nvar sign = Math.sign;\n\nfunction niceNum(range) {\n  var niceRange = Math.pow(10, Math.floor(log10(range)));\n  var fraction = range / niceRange;\n  var niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\nfunction _factorize(value) {\n  var result = [];\n  var sqrt = Math.sqrt(value);\n  var i;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n\n  result.sort(function (a, b) {\n    return a - b;\n  }).pop();\n  return result;\n}\n\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\n\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\n\nfunction almostWhole(x, epsilon) {\n  var rounded = Math.round(x);\n  return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n\nfunction _setMinAndMaxByKey(array, target, property) {\n  var i, ilen, value;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\n\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\n\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n\n  var e = 1;\n  var p = 0;\n\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n\n  return p;\n}\n\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  var distanceFromXCenter = anglePoint.x - centrePoint.x;\n  var distanceFromYCenter = anglePoint.y - centrePoint.y;\n  var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < -0.5 * PI) {\n    angle += TAU;\n  }\n\n  return {\n    angle: angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\n\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  var a = _normalizeAngle(angle);\n\n  var s = _normalizeAngle(start);\n\n  var e = _normalizeAngle(end);\n\n  var angleToStart = _normalizeAngle(s - a);\n\n  var angleToEnd = _normalizeAngle(e - a);\n\n  var startToAngle = _normalizeAngle(a - s);\n\n  var endToAngle = _normalizeAngle(a - e);\n\n  return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\n\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\n\nvar atEdge = function atEdge(t) {\n  return t === 0 || t === 1;\n};\n\nvar elasticIn = function elasticIn(t, s, p) {\n  return -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\n};\n\nvar elasticOut = function elasticOut(t, s, p) {\n  return Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n};\n\nvar effects = {\n  linear: function linear(t) {\n    return t;\n  },\n  easeInQuad: function easeInQuad(t) {\n    return t * t;\n  },\n  easeOutQuad: function easeOutQuad(t) {\n    return -t * (t - 2);\n  },\n  easeInOutQuad: function easeInOutQuad(t) {\n    return (t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1);\n  },\n  easeInCubic: function easeInCubic(t) {\n    return t * t * t;\n  },\n  easeOutCubic: function easeOutCubic(t) {\n    return (t -= 1) * t * t + 1;\n  },\n  easeInOutCubic: function easeInOutCubic(t) {\n    return (t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2);\n  },\n  easeInQuart: function easeInQuart(t) {\n    return t * t * t * t;\n  },\n  easeOutQuart: function easeOutQuart(t) {\n    return -((t -= 1) * t * t * t - 1);\n  },\n  easeInOutQuart: function easeInOutQuart(t) {\n    return (t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2);\n  },\n  easeInQuint: function easeInQuint(t) {\n    return t * t * t * t * t;\n  },\n  easeOutQuint: function easeOutQuint(t) {\n    return (t -= 1) * t * t * t * t + 1;\n  },\n  easeInOutQuint: function easeInOutQuint(t) {\n    return (t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2);\n  },\n  easeInSine: function easeInSine(t) {\n    return -Math.cos(t * HALF_PI) + 1;\n  },\n  easeOutSine: function easeOutSine(t) {\n    return Math.sin(t * HALF_PI);\n  },\n  easeInOutSine: function easeInOutSine(t) {\n    return -0.5 * (Math.cos(PI * t) - 1);\n  },\n  easeInExpo: function easeInExpo(t) {\n    return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n  },\n  easeOutExpo: function easeOutExpo(t) {\n    return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n  },\n  easeInOutExpo: function easeInOutExpo(t) {\n    return atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2);\n  },\n  easeInCirc: function easeInCirc(t) {\n    return t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1);\n  },\n  easeOutCirc: function easeOutCirc(t) {\n    return Math.sqrt(1 - (t -= 1) * t);\n  },\n  easeInOutCirc: function easeInOutCirc(t) {\n    return (t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n  },\n  easeInElastic: function easeInElastic(t) {\n    return atEdge(t) ? t : elasticIn(t, 0.075, 0.3);\n  },\n  easeOutElastic: function easeOutElastic(t) {\n    return atEdge(t) ? t : elasticOut(t, 0.075, 0.3);\n  },\n  easeInOutElastic: function easeInOutElastic(t) {\n    var s = 0.1125;\n    var p = 0.45;\n    return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack: function easeInBack(t) {\n    var s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack: function easeOutBack(t) {\n    var s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack: function easeInOutBack(t) {\n    var s = 1.70158;\n\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n    }\n\n    return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n  },\n  easeInBounce: function easeInBounce(t) {\n    return 1 - effects.easeOutBounce(1 - t);\n  },\n  easeOutBounce: function easeOutBounce(t) {\n    var m = 7.5625;\n    var d = 2.75;\n\n    if (t < 1 / d) {\n      return m * t * t;\n    }\n\n    if (t < 2 / d) {\n      return m * (t -= 1.5 / d) * t + 0.75;\n    }\n\n    if (t < 2.5 / d) {\n      return m * (t -= 2.25 / d) * t + 0.9375;\n    }\n\n    return m * (t -= 2.625 / d) * t + 0.984375;\n  },\n  easeInOutBounce: function easeInOutBounce(t) {\n    return t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n  }\n};\n/*!\n * @kurkle/color v0.1.9\n * https://github.com/kurkle/color#readme\n * (c) 2020 Jukka Kurkela\n * Released under the MIT License\n */\n\nvar map = {\n  0: 0,\n  1: 1,\n  2: 2,\n  3: 3,\n  4: 4,\n  5: 5,\n  6: 6,\n  7: 7,\n  8: 8,\n  9: 9,\n  A: 10,\n  B: 11,\n  C: 12,\n  D: 13,\n  E: 14,\n  F: 15,\n  a: 10,\n  b: 11,\n  c: 12,\n  d: 13,\n  e: 14,\n  f: 15\n};\nvar hex = '0123456789ABCDEF';\n\nvar h1 = function h1(b) {\n  return hex[b & 0xF];\n};\n\nvar h2 = function h2(b) {\n  return hex[(b & 0xF0) >> 4] + hex[b & 0xF];\n};\n\nvar eq = function eq(b) {\n  return (b & 0xF0) >> 4 === (b & 0xF);\n};\n\nfunction isShort(v) {\n  return eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\n}\n\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map[str[1]] * 17,\n        g: 255 & map[str[2]] * 17,\n        b: 255 & map[str[3]] * 17,\n        a: len === 5 ? map[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map[str[1]] << 4 | map[str[2]],\n        g: map[str[3]] << 4 | map[str[4]],\n        b: map[str[5]] << 4 | map[str[6]],\n        a: len === 9 ? map[str[7]] << 4 | map[str[8]] : 255\n      };\n    }\n  }\n\n  return ret;\n}\n\nfunction _hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v ? '#' + f(v.r) + f(v.g) + f(v.b) + (v.a < 255 ? f(v.a) : '') : v;\n}\n\nfunction round(v) {\n  return v + 0.5 | 0;\n}\n\nvar lim = function lim(v, l, h) {\n  return Math.max(Math.min(v, h), l);\n};\n\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\n\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\n\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\n\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nvar RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\n\nfunction rgbParse(str) {\n  var m = RGB_RE.exec(str);\n  var a = 255;\n  var r, g, b;\n\n  if (!m) {\n    return;\n  }\n\n  if (m[7] !== r) {\n    var v = +m[7];\n    a = 255 & (m[8] ? p2b(v) : v * 255);\n  }\n\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : r);\n  g = 255 & (m[4] ? p2b(g) : g);\n  b = 255 & (m[6] ? p2b(b) : b);\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\n\nfunction _rgbString(v) {\n  return v && (v.a < 255 ? \"rgba(\".concat(v.r, \", \").concat(v.g, \", \").concat(v.b, \", \").concat(b2n(v.a), \")\") : \"rgb(\".concat(v.r, \", \").concat(v.g, \", \").concat(v.b, \")\"));\n}\n\nvar HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\n\nfunction hsl2rgbn(h, s, l) {\n  var a = s * Math.min(l, 1 - l);\n\n  var f = function f(n) {\n    var k = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (n + h / 30) % 12;\n    return l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  };\n\n  return [f(0), f(8), f(4)];\n}\n\nfunction hsv2rgbn(h, s, v) {\n  var f = function f(n) {\n    var k = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (n + h / 60) % 6;\n    return v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  };\n\n  return [f(5), f(3), f(1)];\n}\n\nfunction hwb2rgbn(h, w, b) {\n  var rgb = hsl2rgbn(h, 1, 0.5);\n  var i;\n\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n\n  return rgb;\n}\n\nfunction rgb2hsl(v) {\n  var range = 255;\n  var r = v.r / range;\n  var g = v.g / range;\n  var b = v.b / range;\n  var max = Math.max(r, g, b);\n  var min = Math.min(r, g, b);\n  var l = (max + min) / 2;\n  var h, s, d;\n\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = max === r ? (g - b) / d + (g < b ? 6 : 0) : max === g ? (b - r) / d + 2 : (r - g) / d + 4;\n    h = h * 60 + 0.5;\n  }\n\n  return [h | 0, s || 0, l];\n}\n\nfunction calln(f, a, b, c) {\n  return (Array.isArray(a) ? f(a[0], a[1], a[2]) : f(a, b, c)).map(n2b);\n}\n\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\n\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\n\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\n\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\n\nfunction hueParse(str) {\n  var m = HUE_RE.exec(str);\n  var a = 255;\n  var v;\n\n  if (!m) {\n    return;\n  }\n\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n\n  var h = hue(+m[2]);\n  var p1 = +m[3] / 100;\n  var p2 = +m[4] / 100;\n\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\n\nfunction _rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\n\nfunction _hslString(v) {\n  if (!v) {\n    return;\n  }\n\n  var a = rgb2hsl(v);\n  var h = a[0];\n  var s = n2p(a[1]);\n  var l = n2p(a[2]);\n  return v.a < 255 ? \"hsla(\".concat(h, \", \").concat(s, \"%, \").concat(l, \"%, \").concat(b2n(v.a), \")\") : \"hsl(\".concat(h, \", \").concat(s, \"%, \").concat(l, \"%)\");\n}\n\nvar map$1 = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nvar names = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\n\nfunction unpack() {\n  var unpacked = {};\n  var keys = Object.keys(names);\n  var tkeys = Object.keys(map$1);\n  var i, j, k, ok, nk;\n\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map$1[k]);\n    }\n\n    k = parseInt(names[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n\n  return unpacked;\n}\n\nvar names$1;\n\nfunction nameParse(str) {\n  if (!names$1) {\n    names$1 = unpack();\n    names$1.transparent = [0, 0, 0, 0];\n  }\n\n  var a = names$1[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    var tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\n\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\n\nfunction fromObject(input) {\n  var v = {\n    r: 0,\n    g: 0,\n    b: 0,\n    a: 255\n  };\n\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {\n        r: input[0],\n        g: input[1],\n        b: input[2],\n        a: 255\n      };\n\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {\n      r: 0,\n      g: 0,\n      b: 0,\n      a: 1\n    });\n    v.a = n2b(v.a);\n  }\n\n  return v;\n}\n\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n\n  return hueParse(str);\n}\n\nvar Color =\n/*#__PURE__*/\nfunction () {\n  function Color(input) {\n    _classCallCheck(this, Color);\n\n    if (input instanceof Color) {\n      return input;\n    }\n\n    var type = typeof input;\n    var v;\n\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n\n    this._rgb = v;\n    this._valid = !!v;\n  }\n\n  _createClass(Color, [{\n    key: \"rgbString\",\n    value: function rgbString() {\n      return this._valid ? _rgbString(this._rgb) : this._rgb;\n    }\n  }, {\n    key: \"hexString\",\n    value: function hexString() {\n      return this._valid ? _hexString(this._rgb) : this._rgb;\n    }\n  }, {\n    key: \"hslString\",\n    value: function hslString() {\n      return this._valid ? _hslString(this._rgb) : this._rgb;\n    }\n  }, {\n    key: \"mix\",\n    value: function mix(color, weight) {\n      var me = this;\n\n      if (color) {\n        var c1 = me.rgb;\n        var c2 = color.rgb;\n        var w2;\n        var p = weight === w2 ? 0.5 : weight;\n        var w = 2 * p - 1;\n        var a = c1.a - c2.a;\n        var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n        w2 = 1 - w1;\n        c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n        c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n        c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n        c1.a = p * c1.a + (1 - p) * c2.a;\n        me.rgb = c1;\n      }\n\n      return me;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new Color(this.rgb);\n    }\n  }, {\n    key: \"alpha\",\n    value: function alpha(a) {\n      this._rgb.a = n2b(a);\n      return this;\n    }\n  }, {\n    key: \"clearer\",\n    value: function clearer(ratio) {\n      var rgb = this._rgb;\n      rgb.a *= 1 - ratio;\n      return this;\n    }\n  }, {\n    key: \"greyscale\",\n    value: function greyscale() {\n      var rgb = this._rgb;\n      var val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n      rgb.r = rgb.g = rgb.b = val;\n      return this;\n    }\n  }, {\n    key: \"opaquer\",\n    value: function opaquer(ratio) {\n      var rgb = this._rgb;\n      rgb.a *= 1 + ratio;\n      return this;\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      var v = this._rgb;\n      v.r = 255 - v.r;\n      v.g = 255 - v.g;\n      v.b = 255 - v.b;\n      return this;\n    }\n  }, {\n    key: \"lighten\",\n    value: function lighten(ratio) {\n      modHSL(this._rgb, 2, ratio);\n      return this;\n    }\n  }, {\n    key: \"darken\",\n    value: function darken(ratio) {\n      modHSL(this._rgb, 2, -ratio);\n      return this;\n    }\n  }, {\n    key: \"saturate\",\n    value: function saturate(ratio) {\n      modHSL(this._rgb, 1, ratio);\n      return this;\n    }\n  }, {\n    key: \"desaturate\",\n    value: function desaturate(ratio) {\n      modHSL(this._rgb, 1, -ratio);\n      return this;\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(deg) {\n      _rotate(this._rgb, deg);\n\n      return this;\n    }\n  }, {\n    key: \"valid\",\n    get: function get() {\n      return this._valid;\n    }\n  }, {\n    key: \"rgb\",\n    get: function get() {\n      var v = clone(this._rgb);\n\n      if (v) {\n        v.a = b2n(v.a);\n      }\n\n      return v;\n    },\n    set: function set(obj) {\n      this._rgb = fromObject(obj);\n    }\n  }]);\n\n  return Color;\n}();\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nvar isPatternOrGradient = function isPatternOrGradient(value) {\n  return value instanceof CanvasGradient || value instanceof CanvasPattern;\n};\n\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\n\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nvar overrides = Object.create(null);\nvar descriptors = Object.create(null);\n\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n\n  var keys = key.split('.');\n\n  for (var i = 0, n = keys.length; i < n; ++i) {\n    var k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n\n  return node;\n}\n\nfunction _set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n\n  return merge(getScope$1(root, ''), scope);\n}\n\nvar Defaults =\n/*#__PURE__*/\nfunction () {\n  function Defaults(_descriptors) {\n    _classCallCheck(this, Defaults);\n\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n\n    this.devicePixelRatio = function (context) {\n      return context.chart.platform.getDevicePixelRatio();\n    };\n\n    this.elements = {};\n    this.events = ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n\n    this.hoverBackgroundColor = function (ctx, options) {\n      return getHoverColor(options.backgroundColor);\n    };\n\n    this.hoverBorderColor = function (ctx, options) {\n      return getHoverColor(options.borderColor);\n    };\n\n    this.hoverColor = function (ctx, options) {\n      return getHoverColor(options.color);\n    };\n\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.describe(_descriptors);\n  }\n\n  _createClass(Defaults, [{\n    key: \"set\",\n    value: function set(scope, values) {\n      return _set(this, scope, values);\n    }\n  }, {\n    key: \"get\",\n    value: function get(scope) {\n      return getScope$1(this, scope);\n    }\n  }, {\n    key: \"describe\",\n    value: function describe(scope, values) {\n      return _set(descriptors, scope, values);\n    }\n  }, {\n    key: \"override\",\n    value: function override(scope, values) {\n      return _set(overrides, scope, values);\n    }\n  }, {\n    key: \"route\",\n    value: function route(scope, name, targetScope, targetName) {\n      var _Object$definePropert;\n\n      var scopeObject = getScope$1(this, scope);\n      var targetScopeObject = getScope$1(this, targetScope);\n      var privateName = '_' + name;\n      Object.defineProperties(scopeObject, (_Object$definePropert = {}, _defineProperty(_Object$definePropert, privateName, {\n        value: scopeObject[name],\n        writable: true\n      }), _defineProperty(_Object$definePropert, name, {\n        enumerable: true,\n        get: function get() {\n          var local = this[privateName];\n          var target = targetScopeObject[targetName];\n\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n\n          return valueOrDefault(local, target);\n        },\n        set: function set(value) {\n          this[privateName] = value;\n        }\n      }), _Object$definePropert));\n    }\n  }]);\n\n  return Defaults;\n}();\n\nvar defaults = new Defaults({\n  _scriptable: function _scriptable(name) {\n    return !name.startsWith('on');\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'events';\n  },\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n\nfunction _measureText(ctx, data, gc, longest, string) {\n  var textWidth = data[string];\n\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n\n  return longest;\n}\n\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  var data = cache.data = cache.data || {};\n  var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n  ctx.font = font;\n  var longest = 0;\n  var ilen = arrayOfThings.length;\n  var i, j, jlen, thing, nestedThing;\n\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n  var gcLen = gc.length / 2;\n\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n\n    gc.splice(0, gcLen);\n  }\n\n  return longest;\n}\n\nfunction _alignPixel(chart, pixel, width) {\n  var devicePixelRatio = chart.currentDevicePixelRatio;\n  var halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nfunction drawPoint(ctx, options, x, y) {\n  var type, xOffset, yOffset, size, cornerRadius;\n  var style = options.pointStyle;\n  var rotation = options.rotation;\n  var radius = options.radius;\n  var rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n    default:\n      ctx.arc(x, y, radius, 0, TAU);\n      ctx.closePath();\n      break;\n\n    case 'triangle':\n      ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n\n    case 'rectRounded':\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        ctx.rect(x - size, y - size, 2 * size, 2 * size);\n        break;\n      }\n\n      rad += QUARTER_PI;\n\n    case 'rectRot':\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + yOffset, y - xOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      ctx.lineTo(x - yOffset, y + xOffset);\n      ctx.closePath();\n      break;\n\n    case 'crossRot':\n      rad += QUARTER_PI;\n\n    case 'cross':\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      ctx.moveTo(x + yOffset, y - xOffset);\n      ctx.lineTo(x - yOffset, y + xOffset);\n      break;\n\n    case 'star':\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      ctx.moveTo(x + yOffset, y - xOffset);\n      ctx.lineTo(x - yOffset, y + xOffset);\n      rad += QUARTER_PI;\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      ctx.moveTo(x + yOffset, y - xOffset);\n      ctx.lineTo(x - yOffset, y + xOffset);\n      break;\n\n    case 'line':\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n      break;\n  }\n\n  ctx.fill();\n\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\n\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\n\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n\n  if (mode === 'middle') {\n    var midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n\n  ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\n\nfunction renderText(ctx, text, x, y, font) {\n  var opts = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n  var lines = isArray(text) ? text : [text];\n  var stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  var i, line;\n  ctx.save();\n\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  ctx.font = font.string;\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n\n    if (opts.strikethrough || opts.underline) {\n      var metrics = ctx.measureText(line);\n      var left = x - metrics.actualBoundingBoxLeft;\n      var right = x + metrics.actualBoundingBoxRight;\n      var top = y - metrics.actualBoundingBoxAscent;\n      var bottom = y + metrics.actualBoundingBoxDescent;\n      var yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n      ctx.strokeStyle = ctx.fillStyle;\n      ctx.beginPath();\n      ctx.lineWidth = opts.decorationWidth || 2;\n      ctx.moveTo(left, yDecoration);\n      ctx.lineTo(right, yDecoration);\n      ctx.stroke();\n    }\n\n    y += font.lineHeight;\n  }\n\n  ctx.restore();\n}\n\nfunction addRoundedRectPath(ctx, rect) {\n  var x = rect.x,\n      y = rect.y,\n      w = rect.w,\n      h = rect.h,\n      radius = rect.radius;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nvar LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nvar FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\n\nfunction toLineHeight(value, size) {\n  var matches = ('' + value).match(LINE_HEIGHT);\n\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n\n    case '%':\n      value /= 100;\n      break;\n  }\n\n  return size * value;\n}\n\nvar numberOrZero = function numberOrZero(v) {\n  return +v || 0;\n};\n\nfunction _readValueToProps(value, props) {\n  var ret = {};\n  var objProps = isObject(props);\n  var keys = objProps ? Object.keys(props) : props;\n  var read = isObject(value) ? objProps ? function (prop) {\n    return valueOrDefault(value[prop], value[props[prop]]);\n  } : function (prop) {\n    return value[prop];\n  } : function () {\n    return value;\n  };\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = keys[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var prop = _step2.value;\n      ret[prop] = numberOrZero(read(prop));\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return ret;\n}\n\nfunction toTRBL(value) {\n  return _readValueToProps(value, {\n    top: 'y',\n    right: 'x',\n    bottom: 'y',\n    left: 'x'\n  });\n}\n\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\nfunction toPadding(value) {\n  var obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\n\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  var size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n\n  var style = valueOrDefault(options.style, fallback.style);\n\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n\n  var font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size: size,\n    style: style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\n\nfunction resolve(inputs, context, index, info) {\n  var cacheable = true;\n  var i, ilen, value;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n\n    if (value === undefined) {\n      continue;\n    }\n\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n\n      return value;\n    }\n  }\n}\n\nfunction _addGrace(minmax, grace) {\n  var min = minmax.min,\n      max = minmax.max;\n  return {\n    min: min - Math.abs(toDimension(grace, min)),\n    max: max + toDimension(grace, max)\n  };\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || function (index) {\n    return table[index] < value;\n  };\n\n  var hi = table.length - 1;\n  var lo = 0;\n  var mid;\n\n  while (hi - lo > 1) {\n    mid = lo + hi >> 1;\n\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {\n    lo: lo,\n    hi: hi\n  };\n}\n\nvar _lookupByKey = function _lookupByKey(table, key, value) {\n  return _lookup(table, value, function (index) {\n    return table[index][key] < value;\n  });\n};\n\nvar _rlookupByKey = function _rlookupByKey(table, key, value) {\n  return _lookup(table, value, function (index) {\n    return table[index][key] >= value;\n  });\n};\n\nfunction _filterBetween(values, min, max) {\n  var start = 0;\n  var end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\n\nvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach(function (key) {\n    var method = '_onData' + _capitalize(key);\n\n    var base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value: function value() {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        var res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach(function (object) {\n          if (typeof object[method] === 'function') {\n            object[method].apply(object, args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\nfunction unlistenArrayEvents(array, listener) {\n  var stub = array._chartjs;\n\n  if (!stub) {\n    return;\n  }\n\n  var listeners = stub.listeners;\n  var index = listeners.indexOf(listener);\n\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach(function (key) {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\n\nfunction _arrayUnique(items) {\n  var set = new Set();\n  var i, ilen;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n\n  if (set.size === ilen) {\n    return items;\n  }\n\n  var result = [];\n  set.forEach(function (item) {\n    result.push(item);\n  });\n  return result;\n}\n\nfunction _createResolver(scopes) {\n  var _cache;\n\n  var prefixes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [''];\n  var rootScopes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : scopes;\n  var fallback = arguments.length > 3 ? arguments[3] : undefined;\n  var getTarget = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : function () {\n    return scopes[0];\n  };\n\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n\n  var cache = (_cache = {}, _defineProperty(_cache, Symbol.toStringTag, 'Object'), _defineProperty(_cache, \"_cacheable\", true), _defineProperty(_cache, \"_scopes\", scopes), _defineProperty(_cache, \"_rootScopes\", rootScopes), _defineProperty(_cache, \"_fallback\", fallback), _defineProperty(_cache, \"_getTarget\", getTarget), _defineProperty(_cache, \"override\", function override(scope) {\n    return _createResolver([scope].concat(_toConsumableArray(scopes)), prefixes, rootScopes, fallback);\n  }), _cache);\n  return new Proxy(cache, {\n    deleteProperty: function deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get: function get(target, prop) {\n      return _cached(target, prop, function () {\n        return _resolveWithPrefixes(prop, prefixes, scopes, target);\n      });\n    },\n    getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf: function getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has: function has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys: function ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set: function set(target, prop, value) {\n      var storage = target._storage || (target._storage = getTarget());\n      storage[prop] = value;\n      delete target[prop];\n      delete target._keys;\n      return true;\n    }\n  });\n}\n\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  var cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: function setContext(ctx) {\n      return _attachContext(proxy, ctx, subProxy, descriptorDefaults);\n    },\n    override: function override(scope) {\n      return _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults);\n    }\n  };\n  return new Proxy(cache, {\n    deleteProperty: function deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get: function get(target, prop, receiver) {\n      return _cached(target, prop, function () {\n        return _resolveWithContext(target, prop, receiver);\n      });\n    },\n    getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n        enumerable: true,\n        configurable: true\n      } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf: function getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has: function has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys: function ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set: function set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\n\nfunction _descriptors(proxy) {\n  var defaults = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    scriptable: true,\n    indexable: true\n  };\n\n  var _proxy$_scriptable = proxy._scriptable,\n      _scriptable = _proxy$_scriptable === void 0 ? defaults.scriptable : _proxy$_scriptable,\n      _proxy$_indexable = proxy._indexable,\n      _indexable = _proxy$_indexable === void 0 ? defaults.indexable : _proxy$_indexable,\n      _proxy$_allKeys = proxy._allKeys,\n      _allKeys = _proxy$_allKeys === void 0 ? defaults.allKeys : _proxy$_allKeys;\n\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : function () {\n      return _scriptable;\n    },\n    isIndexable: isFunction(_indexable) ? _indexable : function () {\n      return _indexable;\n    }\n  };\n}\n\nvar readKey = function readKey(prefix, name) {\n  return prefix ? prefix + _capitalize(name) : name;\n};\n\nvar needsSubResolver = function needsSubResolver(prop, value) {\n  return isObject(value) && prop !== 'adapters';\n};\n\nfunction _cached(target, prop, resolve) {\n  var value = target[prop];\n\n  if (defined(value)) {\n    return value;\n  }\n\n  value = resolve();\n\n  if (defined(value)) {\n    target[prop] = value;\n  }\n\n  return value;\n}\n\nfunction _resolveWithContext(target, prop, receiver) {\n  var _proxy = target._proxy,\n      _context = target._context,\n      _subProxy = target._subProxy,\n      descriptors = target._descriptors;\n  var value = _proxy[prop];\n\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n\n  return value;\n}\n\nfunction _resolveScriptable(prop, value, target, receiver) {\n  var _proxy = target._proxy,\n      _context = target._context,\n      _subProxy = target._subProxy,\n      _stack = target._stack;\n\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + _toConsumableArray(_stack).join('->') + '->' + prop);\n  }\n\n  _stack.add(prop);\n\n  value = value(_context, _subProxy || receiver);\n\n  _stack.delete(prop);\n\n  if (isObject(value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n\n  return value;\n}\n\nfunction _resolveArray(prop, value, target, isIndexable) {\n  var _proxy = target._proxy,\n      _context = target._context,\n      _subProxy = target._subProxy,\n      descriptors = target._descriptors;\n\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    var arr = value;\n\n    var scopes = _proxy._scopes.filter(function (s) {\n      return s !== arr;\n    });\n\n    value = [];\n    var _iteratorNormalCompletion3 = true;\n    var _didIteratorError3 = false;\n    var _iteratorError3 = undefined;\n\n    try {\n      for (var _iterator3 = arr[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n        var item = _step3.value;\n        var resolver = createSubResolver(scopes, _proxy, prop, item);\n        value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n      }\n    } catch (err) {\n      _didIteratorError3 = true;\n      _iteratorError3 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n          _iterator3.return();\n        }\n      } finally {\n        if (_didIteratorError3) {\n          throw _iteratorError3;\n        }\n      }\n    }\n  }\n\n  return value;\n}\n\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nvar getScope = function getScope(key, parent) {\n  return key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n};\n\nfunction addScopes(set, parentScopes, key, parentFallback) {\n  var _iteratorNormalCompletion4 = true;\n  var _didIteratorError4 = false;\n  var _iteratorError4 = undefined;\n\n  try {\n    for (var _iterator4 = parentScopes[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n      var parent = _step4.value;\n      var scope = getScope(key, parent);\n\n      if (scope) {\n        set.add(scope);\n        var fallback = resolveFallback(scope._fallback, key, scope);\n\n        if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n          return fallback;\n        }\n      } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n        return null;\n      }\n    }\n  } catch (err) {\n    _didIteratorError4 = true;\n    _iteratorError4 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n        _iterator4.return();\n      }\n    } finally {\n      if (_didIteratorError4) {\n        throw _iteratorError4;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  var rootScopes = resolver._rootScopes;\n  var fallback = resolveFallback(resolver._fallback, prop, value);\n  var allScopes = [].concat(_toConsumableArray(parentScopes), _toConsumableArray(rootScopes));\n  var set = new Set();\n  set.add(value);\n  var key = addScopesFromKey(set, allScopes, prop, fallback || prop);\n\n  if (key === null) {\n    return false;\n  }\n\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key);\n\n    if (key === null) {\n      return false;\n    }\n  }\n\n  return _createResolver(_toConsumableArray(set), [''], rootScopes, fallback, function () {\n    return subGetTarget(resolver, prop, value);\n  });\n}\n\nfunction addScopesFromKey(set, allScopes, key, fallback) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback);\n  }\n\n  return key;\n}\n\nfunction subGetTarget(resolver, prop, value) {\n  var parent = resolver._getTarget();\n\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n\n  var target = parent[prop];\n\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n\n  return target;\n}\n\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  var value;\n  var _iteratorNormalCompletion5 = true;\n  var _didIteratorError5 = false;\n  var _iteratorError5 = undefined;\n\n  try {\n    for (var _iterator5 = prefixes[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n      var prefix = _step5.value;\n      value = _resolve(readKey(prefix, prop), scopes);\n\n      if (defined(value)) {\n        return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n      }\n    }\n  } catch (err) {\n    _didIteratorError5 = true;\n    _iteratorError5 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n        _iterator5.return();\n      }\n    } finally {\n      if (_didIteratorError5) {\n        throw _iteratorError5;\n      }\n    }\n  }\n}\n\nfunction _resolve(key, scopes) {\n  var _iteratorNormalCompletion6 = true;\n  var _didIteratorError6 = false;\n  var _iteratorError6 = undefined;\n\n  try {\n    for (var _iterator6 = scopes[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n      var scope = _step6.value;\n\n      if (!scope) {\n        continue;\n      }\n\n      var value = scope[key];\n\n      if (defined(value)) {\n        return value;\n      }\n    }\n  } catch (err) {\n    _didIteratorError6 = true;\n    _iteratorError6 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n        _iterator6.return();\n      }\n    } finally {\n      if (_didIteratorError6) {\n        throw _iteratorError6;\n      }\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target) {\n  var keys = target._keys;\n\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes) {\n  var set = new Set();\n  var _iteratorNormalCompletion7 = true;\n  var _didIteratorError7 = false;\n  var _iteratorError7 = undefined;\n\n  try {\n    for (var _iterator7 = scopes[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n      var scope = _step7.value;\n      var _iteratorNormalCompletion8 = true;\n      var _didIteratorError8 = false;\n      var _iteratorError8 = undefined;\n\n      try {\n        for (var _iterator8 = Object.keys(scope).filter(function (k) {\n          return !k.startsWith('_');\n        })[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n          var key = _step8.value;\n          set.add(key);\n        }\n      } catch (err) {\n        _didIteratorError8 = true;\n        _iteratorError8 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n            _iterator8.return();\n          }\n        } finally {\n          if (_didIteratorError8) {\n            throw _iteratorError8;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError7 = true;\n    _iteratorError7 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n        _iterator7.return();\n      }\n    } finally {\n      if (_didIteratorError7) {\n        throw _iteratorError7;\n      }\n    }\n  }\n\n  return _toConsumableArray(set);\n}\n\nvar EPSILON = Number.EPSILON || 1e-14;\n\nvar getPoint = function getPoint(points, i) {\n  return i < points.length && !points[i].skip && points[i];\n};\n\nvar getValueAxis = function getValueAxis(indexAxis) {\n  return indexAxis === 'x' ? 'y' : 'x';\n};\n\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  var previous = firstPoint.skip ? middlePoint : firstPoint;\n  var current = middlePoint;\n  var next = afterPoint.skip ? middlePoint : afterPoint;\n  var d01 = distanceBetweenPoints(current, previous);\n  var d12 = distanceBetweenPoints(next, current);\n  var s01 = d01 / (d01 + d12);\n  var s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  var fa = t * s01;\n  var fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\nfunction monotoneAdjust(points, deltaK, mK) {\n  var pointsLen = points.length;\n  var alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  var pointAfter = getPoint(points, 0);\n\n  for (var i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points, mK) {\n  var indexAxis = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'x';\n  var valueAxis = getValueAxis(indexAxis);\n  var pointsLen = points.length;\n  var delta, pointBefore, pointCurrent;\n  var pointAfter = getPoint(points, 0);\n\n  for (var i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n\n    if (!pointCurrent) {\n      continue;\n    }\n\n    var iPixel = pointCurrent[indexAxis];\n    var vPixel = pointCurrent[valueAxis];\n\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[\"cp1\".concat(indexAxis)] = iPixel - delta;\n      pointCurrent[\"cp1\".concat(valueAxis)] = vPixel - delta * mK[i];\n    }\n\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[\"cp2\".concat(indexAxis)] = iPixel + delta;\n      pointCurrent[\"cp2\".concat(valueAxis)] = vPixel + delta * mK[i];\n    }\n  }\n}\n\nfunction splineCurveMonotone(points) {\n  var indexAxis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'x';\n  var valueAxis = getValueAxis(indexAxis);\n  var pointsLen = points.length;\n  var deltaK = Array(pointsLen).fill(0);\n  var mK = Array(pointsLen);\n  var i, pointBefore, pointCurrent;\n  var pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      var slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n\n    mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points, area) {\n  var i, ilen, point, inArea, inAreaPrev;\n\n  var inAreaNext = _isPointInArea(points[0], area);\n\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n\n    if (!inArea) {\n      continue;\n    }\n\n    point = points[i];\n\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  var i, ilen, point, controlPoints;\n\n  if (options.spanGaps) {\n    points = points.filter(function (pt) {\n      return !pt.skip;\n    });\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    var prev = loop ? points[points.length - 1] : points[0];\n\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _getParentNode(domNode) {\n  var parent = domNode.parentNode;\n\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n\n  return parent;\n}\n\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  var valueInPixels;\n\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nvar getComputedStyle = function getComputedStyle(element) {\n  return window.getComputedStyle(element, null);\n};\n\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nvar positions = ['top', 'right', 'bottom', 'left'];\n\nfunction getPositionedStyle(styles, style, suffix) {\n  var result = {};\n  suffix = suffix ? '-' + suffix : '';\n\n  for (var i = 0; i < 4; i++) {\n    var pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nvar useOffsetPos = function useOffsetPos(x, y, target) {\n  return (x > 0 || y > 0) && (!target || !target.shadowRoot);\n};\n\nfunction getCanvasPosition(evt, canvas) {\n  var e = evt.native || evt;\n  var touches = e.touches;\n  var source = touches && touches.length ? touches[0] : e;\n  var offsetX = source.offsetX,\n      offsetY = source.offsetY;\n  var box = false;\n  var x, y;\n\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    var rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n\n  return {\n    x: x,\n    y: y,\n    box: box\n  };\n}\n\nfunction getRelativePosition(evt, chart) {\n  var canvas = chart.canvas,\n      currentDevicePixelRatio = chart.currentDevicePixelRatio;\n  var style = getComputedStyle(canvas);\n  var borderBox = style.boxSizing === 'border-box';\n  var paddings = getPositionedStyle(style, 'padding');\n  var borders = getPositionedStyle(style, 'border', 'width');\n\n  var _getCanvasPosition = getCanvasPosition(evt, canvas),\n      x = _getCanvasPosition.x,\n      y = _getCanvasPosition.y,\n      box = _getCanvasPosition.box;\n\n  var xOffset = paddings.left + (box && borders.left);\n  var yOffset = paddings.top + (box && borders.top);\n  var width = chart.width,\n      height = chart.height;\n\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas, width, height) {\n  var maxWidth, maxHeight;\n\n  if (width === undefined || height === undefined) {\n    var container = _getParentNode(canvas);\n\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      var rect = container.getBoundingClientRect();\n      var containerStyle = getComputedStyle(container);\n      var containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      var containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n\n  return {\n    width: width,\n    height: height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nvar round1 = function round1(v) {\n  return Math.round(v * 10) / 10;\n};\n\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  var style = getComputedStyle(canvas);\n  var margins = getPositionedStyle(style, 'margin');\n  var maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  var maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  var containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  var width = containerSize.width,\n      height = containerSize.height;\n\n  if (style.boxSizing === 'content-box') {\n    var borders = getPositionedStyle(style, 'border', 'width');\n    var paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  var pixelRatio = forceRatio || 1;\n  var deviceHeight = Math.floor(chart.height * pixelRatio);\n  var deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  var canvas = chart.canvas;\n\n  if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n    canvas.style.height = \"\".concat(chart.height, \"px\");\n    canvas.style.width = \"\".concat(chart.width, \"px\");\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n\n  return false;\n}\n\nvar supportsEventListenerOptions = function () {\n  var passiveSupported = false;\n\n  try {\n    var options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {}\n\n  return passiveSupported;\n}();\n\nfunction readUsedSize(element, property) {\n  var value = getStyle(element, property);\n  var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n  };\n}\n\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  var cp1 = {\n    x: p1.cp2x,\n    y: p1.cp2y\n  };\n  var cp2 = {\n    x: p2.cp1x,\n    y: p2.cp1y\n  };\n\n  var a = _pointInLine(p1, cp1, t);\n\n  var b = _pointInLine(cp1, cp2, t);\n\n  var c = _pointInLine(cp2, p2, t);\n\n  var d = _pointInLine(a, b, t);\n\n  var e = _pointInLine(b, c, t);\n\n  return _pointInLine(d, e, t);\n}\n\nvar intlCache = new Map();\n\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  var cacheKey = locale + JSON.stringify(options);\n  var formatter = intlCache.get(cacheKey);\n\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n\n  return formatter;\n}\n\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nvar getRightToLeftAdapter = function getRightToLeftAdapter(rectX, width) {\n  return {\n    x: function x(_x) {\n      return rectX + rectX + width - _x;\n    },\n    setWidth: function setWidth(w) {\n      width = w;\n    },\n    textAlign: function textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus: function xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr: function leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    }\n  };\n};\n\nvar getLeftToRightAdapter = function getLeftToRightAdapter() {\n  return {\n    x: function x(_x2) {\n      return _x2;\n    },\n    setWidth: function setWidth(w) {},\n    textAlign: function textAlign(align) {\n      return align;\n    },\n    xPlus: function xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr: function leftForLtr(x, _itemWidth) {\n      return x;\n    }\n  };\n};\n\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nfunction overrideTextDirection(ctx, direction) {\n  var style, original;\n\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [style.getPropertyValue('direction'), style.getPropertyPriority('direction')];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\n\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle\n    };\n  }\n\n  return {\n    between: function between(n, s, e) {\n      return n >= Math.min(s, e) && n <= Math.max(e, s);\n    },\n    compare: function compare(a, b) {\n      return a - b;\n    },\n    normalize: function normalize(x) {\n      return x;\n    }\n  };\n}\n\nfunction normalizeSegment(_ref) {\n  var start = _ref.start,\n      end = _ref.end,\n      count = _ref.count,\n      loop = _ref.loop,\n      style = _ref.style;\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style: style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  var property = bounds.property,\n      startBound = bounds.start,\n      endBound = bounds.end;\n\n  var _propertyFn = propertyFn(property),\n      between = _propertyFn.between,\n      normalize = _propertyFn.normalize;\n\n  var count = points.length;\n  var start = segment.start,\n      end = segment.end,\n      loop = segment.loop;\n  var i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n\n      start--;\n      end--;\n    }\n\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n\n  return {\n    start: start,\n    end: end,\n    loop: loop,\n    style: segment.style\n  };\n}\n\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  var property = bounds.property,\n      startBound = bounds.start,\n      endBound = bounds.end;\n  var count = points.length;\n\n  var _propertyFn2 = propertyFn(property),\n      compare = _propertyFn2.compare,\n      between = _propertyFn2.between,\n      normalize = _propertyFn2.normalize;\n\n  var _getSegment = getSegment(segment, points, bounds),\n      start = _getSegment.start,\n      end = _getSegment.end,\n      loop = _getSegment.loop,\n      style = _getSegment.style;\n\n  var result = [];\n  var inside = false;\n  var subStart = null;\n  var value, point, prevValue;\n\n  var startIsBefore = function startIsBefore() {\n    return between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  };\n\n  var endIsBefore = function endIsBefore() {\n    return compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  };\n\n  var shouldStart = function shouldStart() {\n    return inside || startIsBefore();\n  };\n\n  var shouldStop = function shouldStop() {\n    return !inside || endIsBefore();\n  };\n\n  for (var i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({\n        start: subStart,\n        end: i,\n        loop: loop,\n        count: count,\n        style: style\n      }));\n      subStart = null;\n    }\n\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({\n      start: subStart,\n      end: end,\n      loop: loop,\n      count: count,\n      style: style\n    }));\n  }\n\n  return result;\n}\n\nfunction _boundSegments(line, bounds) {\n  var result = [];\n  var segments = line.segments;\n\n  for (var i = 0; i < segments.length; i++) {\n    var sub = _boundSegment(segments[i], line.points, bounds);\n\n    if (sub.length) {\n      result.push.apply(result, _toConsumableArray(sub));\n    }\n  }\n\n  return result;\n}\n\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  var start = 0;\n  var end = count - 1;\n\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  start %= count;\n\n  if (loop) {\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  end %= count;\n  return {\n    start: start,\n    end: end\n  };\n}\n\nfunction solidSegments(points, start, max, loop) {\n  var count = points.length;\n  var result = [];\n  var last = start;\n  var prev = points[start];\n  var end;\n\n  for (end = start + 1; end <= max; ++end) {\n    var cur = points[end % count];\n\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({\n          start: start % count,\n          end: (end - 1) % count,\n          loop: loop\n        });\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n\n      if (prev.skip) {\n        start = end;\n      }\n    }\n\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({\n      start: start % count,\n      end: last % count,\n      loop: loop\n    });\n  }\n\n  return result;\n}\n\nfunction _computeSegments(line, segmentOptions) {\n  var points = line.points;\n  var spanGaps = line.options.spanGaps;\n  var count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  var loop = !!line._loop;\n\n  var _findStartAndEnd = findStartAndEnd(points, count, loop, spanGaps),\n      start = _findStartAndEnd.start,\n      end = _findStartAndEnd.end;\n\n  if (spanGaps === true) {\n    return splitByStyles([{\n      start: start,\n      end: end,\n      loop: loop\n    }], points, segmentOptions);\n  }\n\n  var max = end < start ? end + count : end;\n  var completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\nfunction splitByStyles(segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n\n  return doSplitByStyles(segments, points, segmentOptions);\n}\n\nfunction doSplitByStyles(segments, points, segmentOptions) {\n  var count = points.length;\n  var result = [];\n  var start = segments[0].start;\n  var i = start;\n  var _iteratorNormalCompletion9 = true;\n  var _didIteratorError9 = false;\n  var _iteratorError9 = undefined;\n\n  try {\n    for (var _iterator9 = segments[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n      var segment = _step9.value;\n      var prevStyle = void 0,\n          style = void 0;\n      var prev = points[start % count];\n\n      for (i = start + 1; i <= segment.end; i++) {\n        var pt = points[i % count];\n        style = readStyle(segmentOptions.setContext({\n          type: 'segment',\n          p0: prev,\n          p1: pt\n        }));\n\n        if (styleChanged(style, prevStyle)) {\n          result.push({\n            start: start,\n            end: i - 1,\n            loop: segment.loop,\n            style: prevStyle\n          });\n          prevStyle = style;\n          start = i - 1;\n        }\n\n        prev = pt;\n        prevStyle = style;\n      }\n\n      if (start < i - 1) {\n        result.push({\n          start: start,\n          end: i - 1,\n          loop: segment.loop,\n          style: style\n        });\n        start = i - 1;\n      }\n    }\n  } catch (err) {\n    _didIteratorError9 = true;\n    _iteratorError9 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n        _iterator9.return();\n      }\n    } finally {\n      if (_didIteratorError9) {\n        throw _iteratorError9;\n      }\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { merge as $, _isPointInArea as A, _rlookupByKey as B, toPadding as C, each as D, getMaximumSize as E, _getParentNode as F, readUsedSize as G, HALF_PI as H, throttled as I, supportsEventListenerOptions as J, log10 as K, _factorize as L, finiteOrDefault as M, callback as N, _addGrace as O, PI as P, toDegrees as Q, _measureText as R, _int16Range as S, TAU as T, _alignPixel as U, renderText as V, toFont as W, _toLeftRightCenter as X, _alignStartEnd as Y, overrides as Z, _arrayUnique as _, resolve as a, _capitalize as a0, descriptors as a1, isFunction as a2, _attachContext as a3, _createResolver as a4, _descriptors as a5, mergeIf as a6, uid as a7, debounce as a8, retinaScale as a9, niceNum as aA, almostWhole as aB, almostEquals as aC, _decimalPlaces as aD, _longestText as aE, _filterBetween as aF, _lookup as aG, getHoverColor as aH, clone$1 as aI, _merger as aJ, _mergerIf as aK, _deprecated as aL, toFontString as aM, splineCurve as aN, splineCurveMonotone as aO, getStyle as aP, fontString as aQ, toLineHeight as aR, PITAU as aS, INFINITY as aT, RAD_PER_DEG as aU, QUARTER_PI as aV, TWO_THIRDS_PI as aW, _angleDiff as aX, clearCanvas as aa, setsEqual as ab, _elementsEqual as ac, getAngleFromPoint as ad, _readValueToProps as ae, _updateBezierControlPoints as af, _computeSegments as ag, _boundSegments as ah, _steppedInterpolation as ai, _bezierInterpolation as aj, _pointInLine as ak, _steppedLineTo as al, _bezierCurveTo as am, drawPoint as an, addRoundedRectPath as ao, toTRBL as ap, toTRBLCorners as aq, _boundSegment as ar, _normalizeAngle as as, getRtlAdapter as at, overrideTextDirection as au, _textX as av, restoreTextDirection as aw, noop as ax, distanceBetweenPoints as ay, _setMinAndMaxByKey as az, isArray as b, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, isNullOrUndef as j, clipArea as k, listenArrayEvents as l, unclipArea as m, toPercentage as n, toDimension as o, formatNumber as p, _angleBetween as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, isNumber as w, _limitValue as x, _lookupByKey as y, getRelativePosition as z };","import _objectSpread from \"C:\\\\Users\\\\devik\\\\Desktop\\\\admin-Final-app-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\devik\\\\Desktop\\\\admin-Final-app-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\devik\\\\Desktop\\\\admin-Final-app-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\devik\\\\Desktop\\\\admin-Final-app-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"C:\\\\Users\\\\devik\\\\Desktop\\\\admin-Final-app-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"C:\\\\Users\\\\devik\\\\Desktop\\\\admin-Final-app-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _slicedToArray from \"C:\\\\Users\\\\devik\\\\Desktop\\\\admin-Final-app-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"C:\\\\Users\\\\devik\\\\Desktop\\\\admin-Final-app-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"C:\\\\Users\\\\devik\\\\Desktop\\\\admin-Final-app-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\devik\\\\Desktop\\\\admin-Final-app-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\devik\\\\Desktop\\\\admin-Final-app-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/*!\n * Chart.js v3.3.2\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as _color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, k as clipArea, m as unclipArea, _ as _arrayUnique, t as toRadians, n as toPercentage, o as toDimension, T as TAU, p as formatNumber, q as _angleBetween, H as HALF_PI, P as PI, w as isNumber, x as _limitValue, y as _lookupByKey, z as getRelativePosition$1, A as _isPointInArea, B as _rlookupByKey, C as toPadding, D as each, E as _getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as _addGrace, Q as toDegrees, R as _measureText, S as _int16Range, U as _alignPixel, V as renderText, W as toFont, X as _toLeftRightCenter, Y as _alignStartEnd, Z as overrides, $ as merge, a0 as _capitalize, a1 as descriptors, a2 as isFunction, a3 as _attachContext, a4 as _createResolver, a5 as _descriptors, a6 as mergeIf, a7 as uid, a8 as debounce, a9 as retinaScale, aa as clearCanvas, ab as setsEqual, ac as _elementsEqual, ad as getAngleFromPoint, ae as _readValueToProps, af as _updateBezierControlPoints, ag as _computeSegments, ah as _boundSegments, ai as _steppedInterpolation, aj as _bezierInterpolation, ak as _pointInLine, al as _steppedLineTo, am as _bezierCurveTo, an as drawPoint, ao as addRoundedRectPath, ap as toTRBL, aq as toTRBLCorners, ar as _boundSegment, as as _normalizeAngle, at as getRtlAdapter, au as overrideTextDirection, av as _textX, aw as restoreTextDirection, ax as noop, ay as distanceBetweenPoints, az as _setMinAndMaxByKey, aA as niceNum, aB as almostWhole, aC as almostEquals, aD as _decimalPlaces, aE as _longestText, aF as _filterBetween, aG as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nvar Animator =\n/*#__PURE__*/\nfunction () {\n  function Animator() {\n    _classCallCheck(this, Animator);\n\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  _createClass(Animator, [{\n    key: \"_notify\",\n    value: function _notify(chart, anims, date, type) {\n      var callbacks = anims.listeners[type];\n      var numSteps = anims.duration;\n      callbacks.forEach(function (fn) {\n        return fn({\n          chart: chart,\n          initial: anims.initial,\n          numSteps: numSteps,\n          currentStep: Math.min(date - anims.start, numSteps)\n        });\n      });\n    }\n  }, {\n    key: \"_refresh\",\n    value: function _refresh() {\n      var me = this;\n\n      if (me._request) {\n        return;\n      }\n\n      me._running = true;\n      me._request = requestAnimFrame.call(window, function () {\n        me._update();\n\n        me._request = null;\n\n        if (me._running) {\n          me._refresh();\n        }\n      });\n    }\n  }, {\n    key: \"_update\",\n    value: function _update() {\n      var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n      var me = this;\n      var remaining = 0;\n\n      me._charts.forEach(function (anims, chart) {\n        if (!anims.running || !anims.items.length) {\n          return;\n        }\n\n        var items = anims.items;\n        var i = items.length - 1;\n        var draw = false;\n        var item;\n\n        for (; i >= 0; --i) {\n          item = items[i];\n\n          if (item._active) {\n            if (item._total > anims.duration) {\n              anims.duration = item._total;\n            }\n\n            item.tick(date);\n            draw = true;\n          } else {\n            items[i] = items[items.length - 1];\n            items.pop();\n          }\n        }\n\n        if (draw) {\n          chart.draw();\n\n          me._notify(chart, anims, date, 'progress');\n        }\n\n        if (!items.length) {\n          anims.running = false;\n\n          me._notify(chart, anims, date, 'complete');\n\n          anims.initial = false;\n        }\n\n        remaining += items.length;\n      });\n\n      me._lastDate = date;\n\n      if (remaining === 0) {\n        me._running = false;\n      }\n    }\n  }, {\n    key: \"_getAnims\",\n    value: function _getAnims(chart) {\n      var charts = this._charts;\n      var anims = charts.get(chart);\n\n      if (!anims) {\n        anims = {\n          running: false,\n          initial: true,\n          items: [],\n          listeners: {\n            complete: [],\n            progress: []\n          }\n        };\n        charts.set(chart, anims);\n      }\n\n      return anims;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(chart, event, cb) {\n      this._getAnims(chart).listeners[event].push(cb);\n    }\n  }, {\n    key: \"add\",\n    value: function add(chart, items) {\n      var _this$_getAnims$items;\n\n      if (!items || !items.length) {\n        return;\n      }\n\n      (_this$_getAnims$items = this._getAnims(chart).items).push.apply(_this$_getAnims$items, _toConsumableArray(items));\n    }\n  }, {\n    key: \"has\",\n    value: function has(chart) {\n      return this._getAnims(chart).items.length > 0;\n    }\n  }, {\n    key: \"start\",\n    value: function start(chart) {\n      var anims = this._charts.get(chart);\n\n      if (!anims) {\n        return;\n      }\n\n      anims.running = true;\n      anims.start = Date.now();\n      anims.duration = anims.items.reduce(function (acc, cur) {\n        return Math.max(acc, cur._duration);\n      }, 0);\n\n      this._refresh();\n    }\n  }, {\n    key: \"running\",\n    value: function running(chart) {\n      if (!this._running) {\n        return false;\n      }\n\n      var anims = this._charts.get(chart);\n\n      if (!anims || !anims.running || !anims.items.length) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop(chart) {\n      var anims = this._charts.get(chart);\n\n      if (!anims || !anims.items.length) {\n        return;\n      }\n\n      var items = anims.items;\n      var i = items.length - 1;\n\n      for (; i >= 0; --i) {\n        items[i].cancel();\n      }\n\n      anims.items = [];\n\n      this._notify(chart, anims, Date.now(), 'complete');\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(chart) {\n      return this._charts.delete(chart);\n    }\n  }]);\n\n  return Animator;\n}();\n\nvar animator = new Animator();\nvar transparent = 'transparent';\nvar interpolators = {\n  boolean: function boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color: function color(from, to, factor) {\n    var c0 = _color(from || transparent);\n\n    var c1 = c0.valid && _color(to || transparent);\n\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n  number: function number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nvar Animation =\n/*#__PURE__*/\nfunction () {\n  function Animation(cfg, target, prop, to) {\n    _classCallCheck(this, Animation);\n\n    var currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    var from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  _createClass(Animation, [{\n    key: \"active\",\n    value: function active() {\n      return this._active;\n    }\n  }, {\n    key: \"update\",\n    value: function update(cfg, to, date) {\n      var me = this;\n\n      if (me._active) {\n        me._notify(false);\n\n        var currentValue = me._target[me._prop];\n        var elapsed = date - me._start;\n        var remain = me._duration - elapsed;\n        me._start = date;\n        me._duration = Math.floor(Math.max(remain, cfg.duration));\n        me._total += elapsed;\n        me._loop = !!cfg.loop;\n        me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n        me._from = resolve([cfg.from, currentValue, to]);\n      }\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      var me = this;\n\n      if (me._active) {\n        me.tick(Date.now());\n        me._active = false;\n\n        me._notify(false);\n      }\n    }\n  }, {\n    key: \"tick\",\n    value: function tick(date) {\n      var me = this;\n      var elapsed = date - me._start;\n      var duration = me._duration;\n      var prop = me._prop;\n      var from = me._from;\n      var loop = me._loop;\n      var to = me._to;\n      var factor;\n      me._active = from !== to && (loop || elapsed < duration);\n\n      if (!me._active) {\n        me._target[prop] = to;\n\n        me._notify(true);\n\n        return;\n      }\n\n      if (elapsed < 0) {\n        me._target[prop] = from;\n        return;\n      }\n\n      factor = elapsed / duration % 2;\n      factor = loop && factor > 1 ? 2 - factor : factor;\n      factor = me._easing(Math.min(1, Math.max(0, factor)));\n      me._target[prop] = me._fn(from, to, factor);\n    }\n  }, {\n    key: \"wait\",\n    value: function wait() {\n      var promises = this._promises || (this._promises = []);\n      return new Promise(function (res, rej) {\n        promises.push({\n          res: res,\n          rej: rej\n        });\n      });\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(resolved) {\n      var method = resolved ? 'res' : 'rej';\n      var promises = this._promises || [];\n\n      for (var i = 0; i < promises.length; i++) {\n        promises[i][method]();\n      }\n    }\n  }]);\n\n  return Animation;\n}();\n\nvar numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nvar colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nvar animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: function _scriptable(name) {\n    return name !== 'onProgress' && name !== 'onComplete' && name !== 'fn';\n  }\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: function fn(v) {\n          return v | 0;\n        }\n      }\n    }\n  }\n});\n\nvar Animations =\n/*#__PURE__*/\nfunction () {\n  function Animations(chart, config) {\n    _classCallCheck(this, Animations);\n\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  _createClass(Animations, [{\n    key: \"configure\",\n    value: function configure(config) {\n      if (!isObject(config)) {\n        return;\n      }\n\n      var animatedProps = this._properties;\n      Object.getOwnPropertyNames(config).forEach(function (key) {\n        var cfg = config[key];\n\n        if (!isObject(cfg)) {\n          return;\n        }\n\n        var resolved = {};\n\n        for (var _i = 0, _animationOptions = animationOptions; _i < _animationOptions.length; _i++) {\n          var option = _animationOptions[_i];\n          resolved[option] = cfg[option];\n        }\n\n        (isArray(cfg.properties) && cfg.properties || [key]).forEach(function (prop) {\n          if (prop === key || !animatedProps.has(prop)) {\n            animatedProps.set(prop, resolved);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_animateOptions\",\n    value: function _animateOptions(target, values) {\n      var newOptions = values.options;\n      var options = resolveTargetOptions(target, newOptions);\n\n      if (!options) {\n        return [];\n      }\n\n      var animations = this._createAnimations(options, newOptions);\n\n      if (newOptions.$shared) {\n        awaitAll(target.options.$animations, newOptions).then(function () {\n          target.options = newOptions;\n        }, function () {});\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"_createAnimations\",\n    value: function _createAnimations(target, values) {\n      var animatedProps = this._properties;\n      var animations = [];\n      var running = target.$animations || (target.$animations = {});\n      var props = Object.keys(values);\n      var date = Date.now();\n      var i;\n\n      for (i = props.length - 1; i >= 0; --i) {\n        var prop = props[i];\n\n        if (prop.charAt(0) === '$') {\n          continue;\n        }\n\n        if (prop === 'options') {\n          animations.push.apply(animations, _toConsumableArray(this._animateOptions(target, values)));\n          continue;\n        }\n\n        var value = values[prop];\n        var animation = running[prop];\n        var cfg = animatedProps.get(prop);\n\n        if (animation) {\n          if (cfg && animation.active()) {\n            animation.update(cfg, value, date);\n            continue;\n          } else {\n            animation.cancel();\n          }\n        }\n\n        if (!cfg || !cfg.duration) {\n          target[prop] = value;\n          continue;\n        }\n\n        running[prop] = animation = new Animation(cfg, target, prop, value);\n        animations.push(animation);\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"update\",\n    value: function update(target, values) {\n      if (this._properties.size === 0) {\n        Object.assign(target, values);\n        return;\n      }\n\n      var animations = this._createAnimations(target, values);\n\n      if (animations.length) {\n        animator.add(this._chart, animations);\n        return true;\n      }\n    }\n  }]);\n\n  return Animations;\n}();\n\nfunction awaitAll(animations, properties) {\n  var running = [];\n  var keys = Object.keys(properties);\n\n  for (var i = 0; i < keys.length; i++) {\n    var anim = animations[keys[i]];\n\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n\n  var options = target.options;\n\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  var opts = scale && scale.options || {};\n  var reverse = opts.reverse;\n  var min = opts.min === undefined ? allowedOverflow : 0;\n  var max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n\n  var x = scaleClip(xScale, allowedOverflow);\n  var y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  var t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  var keys = [];\n\n  var metasets = chart._getSortedDatasetMetas(filterVisible);\n\n  var i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n\n  return keys;\n}\n\nfunction _applyStack(stack, value, dsIndex, options) {\n  var keys = stack.keys;\n  var singleMode = options.mode === 'single';\n  var i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n\n      break;\n    }\n\n    otherValue = stack.values[datasetIndex];\n\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  var keys = Object.keys(data);\n  var adata = new Array(keys.length);\n  var i, ilen, key;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  var stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return \"\".concat(indexScale.id, \".\").concat(valueScale.id, \".\").concat(meta.stack || meta.type);\n}\n\nfunction getUserBounds(scale) {\n  var _scale$getUserBounds = scale.getUserBounds(),\n      min = _scale$getUserBounds.min,\n      max = _scale$getUserBounds.max,\n      minDefined = _scale$getUserBounds.minDefined,\n      maxDefined = _scale$getUserBounds.maxDefined;\n\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  var subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive) {\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = vScale.getMatchingVisibleMetas('bar').reverse()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var meta = _step.value;\n      var value = stack[meta.index];\n\n      if (positive && value > 0 || !positive && value < 0) {\n        return meta.index;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  var chart = controller.chart,\n      meta = controller._cachedMeta;\n  var stacks = chart._stacks || (chart._stacks = {});\n  var iScale = meta.iScale,\n      vScale = meta.vScale,\n      datasetIndex = meta.index;\n  var iAxis = iScale.axis;\n  var vAxis = vScale.axis;\n  var key = getStackKey(iScale, vScale, meta);\n  var ilen = parsed.length;\n  var stack;\n\n  for (var i = 0; i < ilen; ++i) {\n    var item = parsed[i];\n    var index = item[iAxis],\n        value = item[vAxis];\n    var itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  var scales = chart.scales;\n  return Object.keys(scales).filter(function (key) {\n    return scales[key].axis === axis;\n  }).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index: index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\n\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element: element,\n    index: index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  var axis = meta.vScale && meta.vScale.axis;\n\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = items[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var parsed = _step2.value;\n      var stacks = parsed._stacks;\n\n      if (!stacks || stacks[axis] === undefined || stacks[axis][meta.index] === undefined) {\n        return;\n      }\n\n      delete stacks[axis][meta.index];\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n}\n\nvar isDirectUpdateMode = function isDirectUpdateMode(mode) {\n  return mode === 'reset' || mode === 'none';\n};\n\nvar cloneIfNotShared = function cloneIfNotShared(cached, shared) {\n  return shared ? cached : Object.assign({}, cached);\n};\n\nvar DatasetController =\n/*#__PURE__*/\nfunction () {\n  function DatasetController(chart, datasetIndex) {\n    _classCallCheck(this, DatasetController);\n\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n\n  _createClass(DatasetController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      var me = this;\n      var meta = me._cachedMeta;\n      me.configure();\n      me.linkScales();\n      meta._stacked = isStacked(meta.vScale, meta);\n      me.addElements();\n    }\n  }, {\n    key: \"updateIndex\",\n    value: function updateIndex(datasetIndex) {\n      if (this.index !== datasetIndex) {\n        clearStacks(this._cachedMeta);\n      }\n\n      this.index = datasetIndex;\n    }\n  }, {\n    key: \"linkScales\",\n    value: function linkScales() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me._cachedMeta;\n      var dataset = me.getDataset();\n\n      var chooseId = function chooseId(axis, x, y, r) {\n        return axis === 'x' ? x : axis === 'r' ? r : y;\n      };\n\n      var xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n      var yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n      var rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n      var indexAxis = meta.indexAxis;\n      var iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n      var vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n      meta.xScale = me.getScaleForId(xid);\n      meta.yScale = me.getScaleForId(yid);\n      meta.rScale = me.getScaleForId(rid);\n      meta.iScale = me.getScaleForId(iid);\n      meta.vScale = me.getScaleForId(vid);\n    }\n  }, {\n    key: \"getDataset\",\n    value: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    }\n  }, {\n    key: \"getMeta\",\n    value: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    }\n  }, {\n    key: \"getScaleForId\",\n    value: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    }\n  }, {\n    key: \"_getOtherScale\",\n    value: function _getOtherScale(scale) {\n      var meta = this._cachedMeta;\n      return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._update('reset');\n    }\n  }, {\n    key: \"_destroy\",\n    value: function _destroy() {\n      var meta = this._cachedMeta;\n\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n\n      if (meta._stacked) {\n        clearStacks(meta);\n      }\n    }\n  }, {\n    key: \"_dataCheck\",\n    value: function _dataCheck() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []);\n      var _data = me._data;\n\n      if (isObject(data)) {\n        me._data = convertObjectDataToArray(data);\n      } else if (_data !== data) {\n        if (_data) {\n          unlistenArrayEvents(_data, me);\n          var meta = me._cachedMeta;\n          clearStacks(meta);\n          meta._parsed = [];\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._syncList = [];\n        me._data = data;\n      }\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      var me = this;\n      var meta = me._cachedMeta;\n\n      me._dataCheck();\n\n      if (me.datasetElementType) {\n        meta.dataset = new me.datasetElementType();\n      }\n    }\n  }, {\n    key: \"buildOrUpdateElements\",\n    value: function buildOrUpdateElements(resetNewElements) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var dataset = me.getDataset();\n      var stackChanged = false;\n\n      me._dataCheck();\n\n      var oldStacked = meta._stacked;\n      meta._stacked = isStacked(meta.vScale, meta);\n\n      if (meta.stack !== dataset.stack) {\n        stackChanged = true;\n        clearStacks(meta);\n        meta.stack = dataset.stack;\n      }\n\n      me._resyncElements(resetNewElements);\n\n      if (stackChanged || oldStacked !== meta._stacked) {\n        updateStacks(me, meta._parsed);\n      }\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n      var config = me.chart.config;\n      var scopeKeys = config.datasetScopeKeys(me._type);\n      var scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n      me.options = config.createResolver(scopes, me.getContext());\n      me._parsing = me.options.parsing;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var me = this;\n      var meta = me._cachedMeta,\n          data = me._data;\n      var iScale = meta.iScale,\n          _stacked = meta._stacked;\n      var iAxis = iScale.axis;\n      var sorted = start === 0 && count === data.length ? true : meta._sorted;\n      var prev = start > 0 && meta._parsed[start - 1];\n      var i, cur, parsed;\n\n      if (me._parsing === false) {\n        meta._parsed = data;\n        meta._sorted = true;\n        parsed = data;\n      } else {\n        if (isArray(data[start])) {\n          parsed = me.parseArrayData(meta, data, start, count);\n        } else if (isObject(data[start])) {\n          parsed = me.parseObjectData(meta, data, start, count);\n        } else {\n          parsed = me.parsePrimitiveData(meta, data, start, count);\n        }\n\n        var isNotInOrderComparedToPrev = function isNotInOrderComparedToPrev() {\n          return cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n        };\n\n        for (i = 0; i < count; ++i) {\n          meta._parsed[i + start] = cur = parsed[i];\n\n          if (sorted) {\n            if (isNotInOrderComparedToPrev()) {\n              sorted = false;\n            }\n\n            prev = cur;\n          }\n        }\n\n        meta._sorted = sorted;\n      }\n\n      if (_stacked) {\n        updateStacks(me, parsed);\n      }\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var iScale = meta.iScale,\n          vScale = meta.vScale;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var labels = iScale.getLabels();\n      var singleScale = iScale === vScale;\n      var parsed = new Array(count);\n      var i, ilen, index;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        var _parsed$i;\n\n        index = i + start;\n        parsed[i] = (_parsed$i = {}, _defineProperty(_parsed$i, iAxis, singleScale || iScale.parse(labels[index], index)), _defineProperty(_parsed$i, vAxis, vScale.parse(data[index], index)), _parsed$i);\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var xScale = meta.xScale,\n          yScale = meta.yScale;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(item[0], index),\n          y: yScale.parse(item[1], index)\n        };\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var xScale = meta.xScale,\n          yScale = meta.yScale;\n      var _this$_parsing = this._parsing,\n          _this$_parsing$xAxisK = _this$_parsing.xAxisKey,\n          xAxisKey = _this$_parsing$xAxisK === void 0 ? 'x' : _this$_parsing$xAxisK,\n          _this$_parsing$yAxisK = _this$_parsing.yAxisKey,\n          yAxisKey = _this$_parsing$yAxisK === void 0 ? 'y' : _this$_parsing$yAxisK;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n        };\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"getParsed\",\n    value: function getParsed(index) {\n      return this._cachedMeta._parsed[index];\n    }\n  }, {\n    key: \"getDataElement\",\n    value: function getDataElement(index) {\n      return this._cachedMeta.data[index];\n    }\n  }, {\n    key: \"applyStack\",\n    value: function applyStack(scale, parsed, mode) {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var value = parsed[scale.axis];\n      var stack = {\n        keys: getSortedDatasetIndices(chart, true),\n        values: parsed._stacks[scale.axis]\n      };\n      return _applyStack(stack, value, meta.index, {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      var parsedValue = parsed[scale.axis];\n      var value = parsedValue === null ? NaN : parsedValue;\n      var values = stack && parsed._stacks[scale.axis];\n\n      if (stack && values) {\n        stack.values = values;\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n        value = _applyStack(stack, parsedValue, this._cachedMeta.index, {\n          all: true\n        });\n      }\n\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(scale, canStack) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var _parsed = meta._parsed;\n      var sorted = meta._sorted && scale === meta.iScale;\n      var ilen = _parsed.length;\n\n      var otherScale = me._getOtherScale(scale);\n\n      var stack = canStack && meta._stacked && {\n        keys: getSortedDatasetIndices(me.chart, true),\n        values: null\n      };\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n\n      var _getUserBounds = getUserBounds(otherScale),\n          otherMin = _getUserBounds.min,\n          otherMax = _getUserBounds.max;\n\n      var i, value, parsed, otherValue;\n\n      function _skip() {\n        parsed = _parsed[i];\n        value = parsed[scale.axis];\n        otherValue = parsed[otherScale.axis];\n        return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n      }\n\n      for (i = 0; i < ilen; ++i) {\n        if (_skip()) {\n          continue;\n        }\n\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n\n        if (sorted) {\n          break;\n        }\n      }\n\n      if (sorted) {\n        for (i = ilen - 1; i >= 0; --i) {\n          if (_skip()) {\n            continue;\n          }\n\n          me.updateRangeFromParsed(range, scale, parsed, stack);\n          break;\n        }\n      }\n\n      return range;\n    }\n  }, {\n    key: \"getAllParsedValues\",\n    value: function getAllParsedValues(scale) {\n      var parsed = this._cachedMeta._parsed;\n      var values = [];\n      var i, ilen, value;\n\n      for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n        value = parsed[i][scale.axis];\n\n        if (isNumberFinite(value)) {\n          values.push(value);\n        }\n      }\n\n      return values;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return false;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var iScale = meta.iScale;\n      var vScale = meta.vScale;\n      var parsed = me.getParsed(index);\n      return {\n        label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n        value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n      };\n    }\n  }, {\n    key: \"_update\",\n    value: function _update(mode) {\n      var me = this;\n      var meta = me._cachedMeta;\n      me.configure();\n      me._cachedDataOpts = {};\n      me.update(mode || 'default');\n      meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {}\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n      var ctx = me._ctx;\n      var chart = me.chart;\n      var meta = me._cachedMeta;\n      var elements = meta.data || [];\n      var area = chart.chartArea;\n      var active = [];\n      var start = me._drawStart || 0;\n      var count = me._drawCount || elements.length - start;\n      var i;\n\n      if (meta.dataset) {\n        meta.dataset.draw(ctx, area, start, count);\n      }\n\n      for (i = start; i < start + count; ++i) {\n        var element = elements[i];\n\n        if (element.active) {\n          active.push(element);\n        } else {\n          element.draw(ctx, area);\n        }\n      }\n\n      for (i = 0; i < active.length; ++i) {\n        active[i].draw(ctx, area);\n      }\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle(index, active) {\n      var mode = active ? 'active' : 'default';\n      return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index, active, mode) {\n      var me = this;\n      var dataset = me.getDataset();\n      var context;\n\n      if (index >= 0 && index < me._cachedMeta.data.length) {\n        var element = me._cachedMeta.data[index];\n        context = element.$context || (element.$context = createDataContext(me.getContext(), index, element));\n        context.parsed = me.getParsed(index);\n        context.raw = dataset.data[index];\n        context.index = context.dataIndex = index;\n      } else {\n        context = me.$context || (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n        context.dataset = dataset;\n        context.index = context.datasetIndex = me.index;\n      }\n\n      context.active = !!active;\n      context.mode = mode;\n      return context;\n    }\n  }, {\n    key: \"resolveDatasetElementOptions\",\n    value: function resolveDatasetElementOptions(mode) {\n      return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n  }, {\n    key: \"_resolveElementOptions\",\n    value: function _resolveElementOptions(elementType) {\n      var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n      var index = arguments.length > 2 ? arguments[2] : undefined;\n      var me = this;\n      var active = mode === 'active';\n      var cache = me._cachedDataOpts;\n      var cacheKey = elementType + '-' + mode;\n      var cached = cache[cacheKey];\n      var sharing = me.enableOptionSharing && defined(index);\n\n      if (cached) {\n        return cloneIfNotShared(cached, sharing);\n      }\n\n      var config = me.chart.config;\n      var scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n      var prefixes = active ? [\"\".concat(elementType, \"Hover\"), 'hover', elementType, ''] : [elementType, ''];\n      var scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      var names = Object.keys(defaults.elements[elementType]);\n\n      var context = function context() {\n        return me.getContext(index, active);\n      };\n\n      var values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n      if (values.$shared) {\n        values.$shared = sharing;\n        cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n      }\n\n      return values;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations(index, transition, active) {\n      var me = this;\n      var chart = me.chart;\n      var cache = me._cachedDataOpts;\n      var cacheKey = \"animation-\".concat(transition);\n      var cached = cache[cacheKey];\n\n      if (cached) {\n        return cached;\n      }\n\n      var options;\n\n      if (chart.options.animation !== false) {\n        var config = me.chart.config;\n        var scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n        var scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n        options = config.createResolver(scopes, me.getContext(index, active, transition));\n      }\n\n      var animations = new Animations(chart, options && options.animations);\n\n      if (options && options._cacheable) {\n        cache[cacheKey] = Object.freeze(animations);\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"getSharedOptions\",\n    value: function getSharedOptions(options) {\n      if (!options.$shared) {\n        return;\n      }\n\n      return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n  }, {\n    key: \"includeOptions\",\n    value: function includeOptions(mode, sharedOptions) {\n      return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n  }, {\n    key: \"updateElement\",\n    value: function updateElement(element, index, properties, mode) {\n      if (isDirectUpdateMode(mode)) {\n        Object.assign(element, properties);\n      } else {\n        this._resolveAnimations(index, mode).update(element, properties);\n      }\n    }\n  }, {\n    key: \"updateSharedOptions\",\n    value: function updateSharedOptions(sharedOptions, mode, newOptions) {\n      if (sharedOptions && !isDirectUpdateMode(mode)) {\n        this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n      }\n    }\n  }, {\n    key: \"_setStyle\",\n    value: function _setStyle(element, index, mode, active) {\n      element.active = active;\n      var options = this.getStyle(index, active);\n\n      this._resolveAnimations(index, mode, active).update(element, {\n        options: !active && this.getSharedOptions(options) || options\n      });\n    }\n  }, {\n    key: \"removeHoverStyle\",\n    value: function removeHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', false);\n    }\n  }, {\n    key: \"setHoverStyle\",\n    value: function setHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', true);\n    }\n  }, {\n    key: \"_removeDatasetHoverStyle\",\n    value: function _removeDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n\n      if (element) {\n        this._setStyle(element, undefined, 'active', false);\n      }\n    }\n  }, {\n    key: \"_setDatasetHoverStyle\",\n    value: function _setDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n\n      if (element) {\n        this._setStyle(element, undefined, 'active', true);\n      }\n    }\n  }, {\n    key: \"_resyncElements\",\n    value: function _resyncElements(resetNewElements) {\n      var me = this;\n      var data = me._data;\n      var elements = me._cachedMeta.data;\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = me._syncList[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _step3$value = _slicedToArray(_step3.value, 3),\n              method = _step3$value[0],\n              arg1 = _step3$value[1],\n              arg2 = _step3$value[2];\n\n          me[method](arg1, arg2);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      me._syncList = [];\n      var numMeta = elements.length;\n      var numData = data.length;\n      var count = Math.min(numData, numMeta);\n\n      if (count) {\n        me.parse(0, count);\n      }\n\n      if (numData > numMeta) {\n        me._insertElements(numMeta, numData - numMeta, resetNewElements);\n      } else if (numData < numMeta) {\n        me._removeElements(numData, numMeta - numData);\n      }\n    }\n  }, {\n    key: \"_insertElements\",\n    value: function _insertElements(start, count) {\n      var resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var me = this;\n      var meta = me._cachedMeta;\n      var data = meta.data;\n      var end = start + count;\n      var i;\n\n      var move = function move(arr) {\n        arr.length += count;\n\n        for (i = arr.length - 1; i >= end; i--) {\n          arr[i] = arr[i - count];\n        }\n      };\n\n      move(data);\n\n      for (i = start; i < end; ++i) {\n        data[i] = new me.dataElementType();\n      }\n\n      if (me._parsing) {\n        move(meta._parsed);\n      }\n\n      me.parse(start, count);\n\n      if (resetNewElements) {\n        me.updateElements(data, start, count, 'reset');\n      }\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(element, start, count, mode) {}\n  }, {\n    key: \"_removeElements\",\n    value: function _removeElements(start, count) {\n      var me = this;\n      var meta = me._cachedMeta;\n\n      if (me._parsing) {\n        var removed = meta._parsed.splice(start, count);\n\n        if (meta._stacked) {\n          clearStacks(meta, removed);\n        }\n      }\n\n      meta.data.splice(start, count);\n    }\n  }, {\n    key: \"_onDataPush\",\n    value: function _onDataPush() {\n      var count = arguments.length;\n\n      this._syncList.push(['_insertElements', this.getDataset().data.length - count, count]);\n    }\n  }, {\n    key: \"_onDataPop\",\n    value: function _onDataPop() {\n      this._syncList.push(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n    }\n  }, {\n    key: \"_onDataShift\",\n    value: function _onDataShift() {\n      this._syncList.push(['_removeElements', 0, 1]);\n    }\n  }, {\n    key: \"_onDataSplice\",\n    value: function _onDataSplice(start, count) {\n      this._syncList.push(['_removeElements', start, count]);\n\n      this._syncList.push(['_insertElements', start, arguments.length - 2]);\n    }\n  }, {\n    key: \"_onDataUnshift\",\n    value: function _onDataUnshift() {\n      this._syncList.push(['_insertElements', 0, arguments.length]);\n    }\n  }]);\n\n  return DatasetController;\n}();\n\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    var metas = scale.getMatchingVisibleMetas('bar');\n    var values = [];\n\n    for (var i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n\n    scale._cache.$bar = _arrayUnique(values.sort(function (a, b) {\n      return a - b;\n    }));\n  }\n\n  return scale._cache.$bar;\n}\n\nfunction computeMinSampleSize(scale) {\n  var values = getAllScaleValues(scale);\n  var min = scale._length;\n  var i, ilen, curr, prev;\n\n  var updateMinAndPrev = function updateMinAndPrev() {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  var thickness = options.barThickness;\n  var size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio: ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\n\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n\n  var start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  var size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  var startValue = vScale.parse(entry[0], i);\n  var endValue = vScale.parse(entry[1], i);\n  var min = Math.min(startValue, endValue);\n  var max = Math.max(startValue, endValue);\n  var barStart = min;\n  var barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart: barStart,\n    barEnd: barEnd,\n    start: startValue,\n    end: endValue,\n    min: min,\n    max: max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  var iScale = meta.iScale;\n  var vScale = meta.vScale;\n  var labels = iScale.getLabels();\n  var singleScale = iScale === vScale;\n  var parsed = [];\n  var i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nvar BarController =\n/*#__PURE__*/\nfunction (_DatasetController) {\n  _inherits(BarController, _DatasetController);\n\n  function BarController() {\n    _classCallCheck(this, BarController);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BarController).apply(this, arguments));\n  }\n\n  _createClass(BarController, [{\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var iScale = meta.iScale,\n          vScale = meta.vScale;\n      var _this$_parsing2 = this._parsing,\n          _this$_parsing2$xAxis = _this$_parsing2.xAxisKey,\n          xAxisKey = _this$_parsing2$xAxis === void 0 ? 'x' : _this$_parsing2$xAxis,\n          _this$_parsing2$yAxis = _this$_parsing2.yAxisKey,\n          yAxisKey = _this$_parsing2$yAxis === void 0 ? 'y' : _this$_parsing2$yAxis;\n      var iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var parsed = [];\n      var i, ilen, item, obj;\n\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        obj = data[i];\n        item = {};\n        item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n        parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      _get(_getPrototypeOf(BarController.prototype), \"updateRangeFromParsed\", this).call(this, range, scale, parsed, stack);\n\n      var custom = parsed._custom;\n\n      if (custom && scale === this._cachedMeta.vScale) {\n        range.min = Math.min(range.min, custom.min);\n        range.max = Math.max(range.max, custom.max);\n      }\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var iScale = meta.iScale,\n          vScale = meta.vScale;\n      var parsed = me.getParsed(index);\n      var custom = parsed._custom;\n      var value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n      return {\n        label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n        value: value\n      };\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      var me = this;\n      me.enableOptionSharing = true;\n\n      _get(_getPrototypeOf(BarController.prototype), \"initialize\", this).call(this);\n\n      var meta = me._cachedMeta;\n      meta.stack = me.getDataset().stack;\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var meta = me._cachedMeta;\n      me.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(bars, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var vScale = me._cachedMeta.vScale;\n      var base = vScale.getBasePixel();\n      var horizontal = vScale.isHorizontal();\n\n      var ruler = me._getRuler();\n\n      var firstOpts = me.resolveDataElementOptions(start, mode);\n      var sharedOptions = me.getSharedOptions(firstOpts);\n      var includeOptions = me.includeOptions(mode, sharedOptions);\n      me.updateSharedOptions(sharedOptions, mode, firstOpts);\n\n      for (var i = start; i < start + count; i++) {\n        var parsed = me.getParsed(i);\n        var vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n          base: base,\n          head: base\n        } : me._calculateBarValuePixels(i);\n\n        var ipixels = me._calculateBarIndexPixels(i, ruler);\n\n        var stack = (parsed._stacks || {})[vScale.axis];\n        var properties = {\n          horizontal: horizontal,\n          base: vpixels.base,\n          enableBorderRadius: !stack || isFloatBar(parsed._custom) || me.index === stack._top || me.index === stack._bottom,\n          x: horizontal ? vpixels.head : ipixels.center,\n          y: horizontal ? ipixels.center : vpixels.head,\n          height: horizontal ? ipixels.size : undefined,\n          width: horizontal ? undefined : ipixels.size\n        };\n\n        if (includeOptions) {\n          properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n        }\n\n        me.updateElement(bars[i], i, properties, mode);\n      }\n    }\n  }, {\n    key: \"_getStacks\",\n    value: function _getStacks(last, dataIndex) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var iScale = meta.iScale;\n      var metasets = iScale.getMatchingVisibleMetas(me._type);\n      var stacked = iScale.options.stacked;\n      var ilen = metasets.length;\n      var stacks = [];\n      var i, item;\n\n      for (i = 0; i < ilen; ++i) {\n        item = metasets[i];\n\n        if (typeof dataIndex !== 'undefined') {\n          var val = item.controller.getParsed(dataIndex)[item.controller._cachedMeta.vScale.axis];\n\n          if (isNullOrUndef(val) || isNaN(val)) {\n            continue;\n          }\n        }\n\n        if (stacked === false || stacks.indexOf(item.stack) === -1 || stacked === undefined && item.stack === undefined) {\n          stacks.push(item.stack);\n        }\n\n        if (item.index === last) {\n          break;\n        }\n      }\n\n      if (!stacks.length) {\n        stacks.push(undefined);\n      }\n\n      return stacks;\n    }\n  }, {\n    key: \"_getStackCount\",\n    value: function _getStackCount(index) {\n      return this._getStacks(undefined, index).length;\n    }\n  }, {\n    key: \"_getStackIndex\",\n    value: function _getStackIndex(datasetIndex, name, dataIndex) {\n      var stacks = this._getStacks(datasetIndex, dataIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1;\n      return index === -1 ? stacks.length - 1 : index;\n    }\n  }, {\n    key: \"_getRuler\",\n    value: function _getRuler() {\n      var me = this;\n      var opts = me.options;\n      var meta = me._cachedMeta;\n      var iScale = meta.iScale;\n      var pixels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n        pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n      }\n\n      var barThickness = opts.barThickness;\n      var min = barThickness || computeMinSampleSize(iScale);\n      return {\n        min: min,\n        pixels: pixels,\n        start: iScale._startPixel,\n        end: iScale._endPixel,\n        stackCount: me._getStackCount(),\n        scale: iScale,\n        grouped: opts.grouped,\n        ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n      };\n    }\n  }, {\n    key: \"_calculateBarValuePixels\",\n    value: function _calculateBarValuePixels(index) {\n      var me = this;\n      var _me$_cachedMeta = me._cachedMeta,\n          vScale = _me$_cachedMeta.vScale,\n          _stacked = _me$_cachedMeta._stacked;\n      var _me$options = me.options,\n          baseValue = _me$options.base,\n          minBarLength = _me$options.minBarLength;\n      var parsed = me.getParsed(index);\n      var custom = parsed._custom;\n      var floating = isFloatBar(custom);\n      var value = parsed[vScale.axis];\n      var start = 0;\n      var length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n      var head, size;\n\n      if (length !== value) {\n        start = length - value;\n        length = value;\n      }\n\n      if (floating) {\n        value = custom.barStart;\n        length = custom.barEnd - custom.barStart;\n\n        if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n          start = 0;\n        }\n\n        start += value;\n      }\n\n      var startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n      var base = vScale.getPixelForValue(startValue);\n\n      if (this.chart.getDataVisibility(index)) {\n        head = vScale.getPixelForValue(start + length);\n      } else {\n        head = base;\n      }\n\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = size < 0 ? -minBarLength : minBarLength;\n\n        if (value === 0) {\n          base -= size / 2;\n        }\n\n        head = base + size;\n      }\n\n      var actualBase = baseValue || 0;\n\n      if (base === vScale.getPixelForValue(actualBase)) {\n        var halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n\n        if (size > 0) {\n          base += halfGrid;\n          size -= halfGrid;\n        } else if (size < 0) {\n          base -= halfGrid;\n          size += halfGrid;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    }\n  }, {\n    key: \"_calculateBarIndexPixels\",\n    value: function _calculateBarIndexPixels(index, ruler) {\n      var me = this;\n      var scale = ruler.scale;\n      var options = me.options;\n      var skipNull = options.skipNull;\n      var maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n      var center, size;\n\n      if (ruler.grouped) {\n        var stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n        var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n        var stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n\n        center = range.start + range.chunk * stackIndex + range.chunk / 2;\n        size = Math.min(maxBarThickness, range.chunk * range.ratio);\n      } else {\n        center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n        size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n      }\n\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me._cachedMeta;\n      var vScale = meta.vScale;\n      var rects = meta.data;\n      var ilen = rects.length;\n      var i = 0;\n      clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (me.getParsed(i)[vScale.axis] !== null) {\n          rects[i].draw(me._ctx);\n        }\n      }\n\n      unclipArea(chart.ctx);\n    }\n  }]);\n\n  return BarController;\n}(DatasetController);\n\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\n\nvar BubbleController =\n/*#__PURE__*/\nfunction (_DatasetController2) {\n  _inherits(BubbleController, _DatasetController2);\n\n  function BubbleController() {\n    _classCallCheck(this, BubbleController);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BubbleController).apply(this, arguments));\n  }\n\n  _createClass(BubbleController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n\n      _get(_getPrototypeOf(BubbleController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var xScale = meta.xScale,\n          yScale = meta.yScale;\n      var _this$_parsing3 = this._parsing,\n          _this$_parsing3$xAxis = _this$_parsing3.xAxisKey,\n          xAxisKey = _this$_parsing3$xAxis === void 0 ? 'x' : _this$_parsing3$xAxis,\n          _this$_parsing3$yAxis = _this$_parsing3.yAxisKey,\n          yAxisKey = _this$_parsing3$yAxis === void 0 ? 'y' : _this$_parsing3$yAxis;\n      var parsed = [];\n      var i, ilen, item;\n\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        item = data[i];\n        parsed.push({\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n          _custom: item && item.r && +item.r\n        });\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var _this$_cachedMeta = this._cachedMeta,\n          data = _this$_cachedMeta.data,\n          _parsed = _this$_cachedMeta._parsed;\n      var max = 0;\n\n      for (var i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n      }\n\n      return max > 0 && max;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var xScale = meta.xScale,\n          yScale = meta.yScale;\n      var parsed = me.getParsed(index);\n      var x = xScale.getLabelForValue(parsed.x);\n      var y = yScale.getLabelForValue(parsed.y);\n      var r = parsed._custom;\n      return {\n        label: meta.label,\n        value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var points = me._cachedMeta.data;\n      me.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var _me$_cachedMeta2 = me._cachedMeta,\n          iScale = _me$_cachedMeta2.iScale,\n          vScale = _me$_cachedMeta2.vScale;\n      var firstOpts = me.resolveDataElementOptions(start, mode);\n      var sharedOptions = me.getSharedOptions(firstOpts);\n      var includeOptions = me.includeOptions(mode, sharedOptions);\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var parsed = !reset && me.getParsed(i);\n        var properties = {};\n        var iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n        var vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n        if (includeOptions) {\n          properties.options = me.resolveDataElementOptions(i, mode);\n\n          if (reset) {\n            properties.options.radius = 0;\n          }\n        }\n\n        me.updateElement(point, i, properties, mode);\n      }\n\n      me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      var parsed = this.getParsed(index);\n\n      var values = _get(_getPrototypeOf(BubbleController.prototype), \"resolveDataElementOptions\", this).call(this, index, mode);\n\n      if (values.$shared) {\n        values = Object.assign({}, values, {\n          $shared: false\n        });\n      }\n\n      var radius = values.radius;\n\n      if (mode !== 'active') {\n        values.radius = 0;\n      }\n\n      values.radius += valueOrDefault(parsed && parsed._custom, radius);\n      return values;\n    }\n  }]);\n\n  return BubbleController;\n}(DatasetController);\n\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  var ratioX = 1;\n  var ratioY = 1;\n  var offsetX = 0;\n  var offsetY = 0;\n\n  if (circumference < TAU) {\n    var startAngle = rotation;\n    var endAngle = startAngle + circumference;\n    var startX = Math.cos(startAngle);\n    var startY = Math.sin(startAngle);\n    var endX = Math.cos(endAngle);\n    var endY = Math.sin(endAngle);\n\n    var calcMax = function calcMax(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    };\n\n    var calcMin = function calcMin(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    };\n\n    var maxX = calcMax(0, startX, endX);\n    var maxY = calcMax(HALF_PI, startY, endY);\n    var minX = calcMin(PI, startX, endX);\n    var minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n\n  return {\n    ratioX: ratioX,\n    ratioY: ratioY,\n    offsetX: offsetX,\n    offsetY: offsetY\n  };\n}\n\nvar DoughnutController =\n/*#__PURE__*/\nfunction (_DatasetController3) {\n  _inherits(DoughnutController, _DatasetController3);\n\n  function DoughnutController(chart, datasetIndex) {\n    var _this;\n\n    _classCallCheck(this, DoughnutController);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DoughnutController).call(this, chart, datasetIndex));\n    _this.enableOptionSharing = true;\n    _this.innerRadius = undefined;\n    _this.outerRadius = undefined;\n    _this.offsetX = undefined;\n    _this.offsetY = undefined;\n    return _this;\n  }\n\n  _createClass(DoughnutController, [{\n    key: \"linkScales\",\n    value: function linkScales() {}\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var data = this.getDataset().data;\n      var meta = this._cachedMeta;\n      var i, ilen;\n\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = +data[i];\n      }\n    }\n  }, {\n    key: \"_getRotation\",\n    value: function _getRotation() {\n      return toRadians(this.options.rotation - 90);\n    }\n  }, {\n    key: \"_getCircumference\",\n    value: function _getCircumference() {\n      return toRadians(this.options.circumference);\n    }\n  }, {\n    key: \"_getRotationExtents\",\n    value: function _getRotationExtents() {\n      var min = TAU;\n      var max = -TAU;\n      var me = this;\n\n      for (var i = 0; i < me.chart.data.datasets.length; ++i) {\n        if (me.chart.isDatasetVisible(i)) {\n          var controller = me.chart.getDatasetMeta(i).controller;\n\n          var rotation = controller._getRotation();\n\n          var circumference = controller._getCircumference();\n\n          min = Math.min(min, rotation);\n          max = Math.max(max, rotation + circumference);\n        }\n      }\n\n      return {\n        rotation: min,\n        circumference: max - min\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var meta = me._cachedMeta;\n      var arcs = meta.data;\n      var spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs);\n      var maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n      var cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var _me$_getRotationExten = me._getRotationExtents(),\n          circumference = _me$_getRotationExten.circumference,\n          rotation = _me$_getRotationExten.rotation;\n\n      var _getRatioAndOffset = getRatioAndOffset(rotation, circumference, cutout),\n          ratioX = _getRatioAndOffset.ratioX,\n          ratioY = _getRatioAndOffset.ratioY,\n          offsetX = _getRatioAndOffset.offsetX,\n          offsetY = _getRatioAndOffset.offsetY;\n\n      var maxWidth = (chartArea.width - spacing) / ratioX;\n      var maxHeight = (chartArea.height - spacing) / ratioY;\n      var maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n      var outerRadius = toDimension(me.options.radius, maxRadius);\n      var innerRadius = Math.max(outerRadius * cutout, 0);\n\n      var radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n\n      me.offsetX = offsetX * outerRadius;\n      me.offsetY = offsetY * outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n      me.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"_circumference\",\n    value: function _circumference(i, reset) {\n      var me = this;\n      var opts = me.options;\n      var meta = me._cachedMeta;\n\n      var circumference = me._getCircumference();\n\n      if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n        return 0;\n      }\n\n      return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var animateScale = reset && animationOpts.animateScale;\n      var innerRadius = animateScale ? 0 : me.innerRadius;\n      var outerRadius = animateScale ? 0 : me.outerRadius;\n      var firstOpts = me.resolveDataElementOptions(start, mode);\n      var sharedOptions = me.getSharedOptions(firstOpts);\n      var includeOptions = me.includeOptions(mode, sharedOptions);\n\n      var startAngle = me._getRotation();\n\n      var i;\n\n      for (i = 0; i < start; ++i) {\n        startAngle += me._circumference(i, reset);\n      }\n\n      for (i = start; i < start + count; ++i) {\n        var circumference = me._circumference(i, reset);\n\n        var arc = arcs[i];\n        var properties = {\n          x: centerX + me.offsetX,\n          y: centerY + me.offsetY,\n          startAngle: startAngle,\n          endAngle: startAngle + circumference,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius\n        };\n\n        if (includeOptions) {\n          properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n        }\n\n        startAngle += circumference;\n        me.updateElement(arc, i, properties, mode);\n      }\n\n      me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"calculateTotal\",\n    value: function calculateTotal() {\n      var meta = this._cachedMeta;\n      var metaData = meta.data;\n      var total = 0;\n      var i;\n\n      for (i = 0; i < metaData.length; i++) {\n        var value = meta._parsed[i];\n\n        if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n          total += Math.abs(value);\n        }\n      }\n\n      return total;\n    }\n  }, {\n    key: \"calculateCircumference\",\n    value: function calculateCircumference(value) {\n      var total = this._cachedMeta.total;\n\n      if (total > 0 && !isNaN(value)) {\n        return TAU * (Math.abs(value) / total);\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var chart = me.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index], chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"getMaxBorderWidth\",\n    value: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, controller, options;\n\n      if (!arcs) {\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n            controller = meta.controller;\n\n            if (controller !== me) {\n              controller.configure();\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        options = controller.resolveDataElementOptions(i);\n\n        if (options.borderAlign !== 'inner') {\n          max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n        }\n      }\n\n      return max;\n    }\n  }, {\n    key: \"getMaxOffset\",\n    value: function getMaxOffset(arcs) {\n      var max = 0;\n\n      for (var i = 0, ilen = arcs.length; i < ilen; ++i) {\n        var options = this.resolveDataElementOptions(i);\n        max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n      }\n\n      return max;\n    }\n  }, {\n    key: \"_getRingWeightOffset\",\n    value: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    }\n  }, {\n    key: \"_getRingWeight\",\n    value: function _getRingWeight(datasetIndex) {\n      return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n  }, {\n    key: \"_getVisibleDatasetWeightTotal\",\n    value: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n  }]);\n\n  return DoughnutController;\n}(DatasetController);\n\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  indexAxis: 'r'\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem) {\n          var dataLabel = tooltipItem.label;\n          var value = ': ' + tooltipItem.formattedValue;\n\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nvar LineController =\n/*#__PURE__*/\nfunction (_DatasetController4) {\n  _inherits(LineController, _DatasetController4);\n\n  function LineController() {\n    _classCallCheck(this, LineController);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(LineController).apply(this, arguments));\n  }\n\n  _createClass(LineController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n\n      _get(_getPrototypeOf(LineController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var line = meta.dataset,\n          _meta$data = meta.data,\n          points = _meta$data === void 0 ? [] : _meta$data,\n          _dataset = meta._dataset;\n      var animationsDisabled = me.chart._animationsDisabled;\n\n      var _getStartAndCountOfVi = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled),\n          start = _getStartAndCountOfVi.start,\n          count = _getStartAndCountOfVi.count;\n\n      me._drawStart = start;\n      me._drawCount = count;\n\n      if (scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      var options = me.resolveDatasetElementOptions(mode);\n\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      options.segment = me.options.segment;\n      me.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options: options\n      }, mode);\n      me.updateElements(points, start, count, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var _me$_cachedMeta3 = me._cachedMeta,\n          iScale = _me$_cachedMeta3.iScale,\n          vScale = _me$_cachedMeta3.vScale,\n          _stacked = _me$_cachedMeta3._stacked;\n      var firstOpts = me.resolveDataElementOptions(start, mode);\n      var sharedOptions = me.getSharedOptions(firstOpts);\n      var includeOptions = me.includeOptions(mode, sharedOptions);\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var spanGaps = me.options.spanGaps;\n      var maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      var directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n      var prevParsed = start > 0 && me.getParsed(start - 1);\n\n      for (var i = start; i < start + count; ++i) {\n        var point = points[i];\n        var parsed = me.getParsed(i);\n        var properties = directUpdate ? point : {};\n        var nullData = isNullOrUndef(parsed[vAxis]);\n        var iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        var vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && parsed[iAxis] - prevParsed[iAxis] > maxGapLength;\n        properties.parsed = parsed;\n\n        if (includeOptions) {\n          properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n        }\n\n        if (!directUpdate) {\n          me.updateElement(point, i, properties, mode);\n        }\n\n        prevParsed = parsed;\n      }\n\n      me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var me = this;\n      var meta = me._cachedMeta;\n      var dataset = meta.dataset;\n      var border = dataset.options && dataset.options.borderWidth || 0;\n      var data = meta.data || [];\n\n      if (!data.length) {\n        return border;\n      }\n\n      var firstPoint = data[0].size(me.resolveDataElementOptions(0));\n      var lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n\n      _get(_getPrototypeOf(LineController.prototype), \"draw\", this).call(this);\n    }\n  }]);\n\n  return LineController;\n}(DatasetController);\n\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\n\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  var pointCount = points.length;\n  var start = 0;\n  var count = pointCount;\n\n  if (meta._sorted) {\n    var iScale = meta.iScale,\n        _parsed = meta._parsed;\n    var axis = iScale.axis;\n\n    var _iScale$getUserBounds = iScale.getUserBounds(),\n        min = _iScale$getUserBounds.min,\n        max = _iScale$getUserBounds.max,\n        minDefined = _iScale$getUserBounds.minDefined,\n        maxDefined = _iScale$getUserBounds.maxDefined;\n\n    if (minDefined) {\n      start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n    }\n\n    if (maxDefined) {\n      count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1), start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {\n    start: start,\n    count: count\n  };\n}\n\nfunction scaleRangesChanged(meta) {\n  var xScale = meta.xScale,\n      yScale = meta.yScale,\n      _scaleRanges = meta._scaleRanges;\n  var newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n\n  var changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nvar PolarAreaController =\n/*#__PURE__*/\nfunction (_DatasetController5) {\n  _inherits(PolarAreaController, _DatasetController5);\n\n  function PolarAreaController(chart, datasetIndex) {\n    var _this2;\n\n    _classCallCheck(this, PolarAreaController);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(PolarAreaController).call(this, chart, datasetIndex));\n    _this2.innerRadius = undefined;\n    _this2.outerRadius = undefined;\n    return _this2;\n  }\n\n  _createClass(PolarAreaController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var chart = me.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index].r, chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var arcs = this._cachedMeta.data;\n\n      this._updateRadius();\n\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"_updateRadius\",\n    value: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      var outerRadius = Math.max(minSize / 2, 0);\n      var innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      var radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = outerRadius - radiusLength * me.index;\n      me.innerRadius = me.outerRadius - radiusLength;\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = me._cachedMeta.rScale;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter;\n      var datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n      var angle = datasetStartAngle;\n      var i;\n      var defaultAngle = 360 / me.countVisibleElements();\n\n      for (i = 0; i < start; ++i) {\n        angle += me._computeAngle(i, mode, defaultAngle);\n      }\n\n      for (i = start; i < start + count; i++) {\n        var arc = arcs[i];\n        var startAngle = angle;\n\n        var endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n\n        var outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n        angle = endAngle;\n\n        if (reset) {\n          if (animationOpts.animateScale) {\n            outerRadius = 0;\n          }\n\n          if (animationOpts.animateRotate) {\n            startAngle = endAngle = datasetStartAngle;\n          }\n        }\n\n        var properties = {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: outerRadius,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          options: me.resolveDataElementOptions(i, mode)\n        };\n        me.updateElement(arc, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"countVisibleElements\",\n    value: function countVisibleElements() {\n      var _this3 = this;\n\n      var dataset = this.getDataset();\n      var meta = this._cachedMeta;\n      var count = 0;\n      meta.data.forEach(function (element, index) {\n        if (!isNaN(dataset.data[index]) && _this3.chart.getDataVisibility(index)) {\n          count++;\n        }\n      });\n      return count;\n    }\n  }, {\n    key: \"_computeAngle\",\n    value: function _computeAngle(index, mode, defaultAngle) {\n      return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n  }]);\n\n  return PolarAreaController;\n}(DatasetController);\n\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nvar PieController =\n/*#__PURE__*/\nfunction (_DoughnutController) {\n  _inherits(PieController, _DoughnutController);\n\n  function PieController() {\n    _classCallCheck(this, PieController);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PieController).apply(this, arguments));\n  }\n\n  return PieController;\n}(DoughnutController);\n\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nvar RadarController =\n/*#__PURE__*/\nfunction (_DatasetController6) {\n  _inherits(RadarController, _DatasetController6);\n\n  function RadarController() {\n    _classCallCheck(this, RadarController);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RadarController).apply(this, arguments));\n  }\n\n  _createClass(RadarController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var vScale = me._cachedMeta.vScale;\n      var parsed = me.getParsed(index);\n      return {\n        label: vScale.getLabels()[index],\n        value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var labels = meta.iScale.getLabels();\n      line.points = points;\n\n      if (mode !== 'resize') {\n        var options = me.resolveDatasetElementOptions(mode);\n\n        if (!me.options.showLine) {\n          options.borderWidth = 0;\n        }\n\n        var properties = {\n          _loop: true,\n          _fullLoop: labels.length === points.length,\n          options: options\n        };\n        me.updateElement(line, undefined, properties, mode);\n      }\n\n      me.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var me = this;\n      var dataset = me.getDataset();\n      var scale = me._cachedMeta.rScale;\n      var reset = mode === 'reset';\n\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var options = me.resolveDataElementOptions(i, mode);\n        var pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n        var x = reset ? scale.xCenter : pointPosition.x;\n        var y = reset ? scale.yCenter : pointPosition.y;\n        var properties = {\n          x: x,\n          y: y,\n          angle: pointPosition.angle,\n          skip: isNaN(x) || isNaN(y),\n          options: options\n        };\n        me.updateElement(point, i, properties, mode);\n      }\n    }\n  }]);\n\n  return RadarController;\n}(DatasetController);\n\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\n\nvar ScatterController =\n/*#__PURE__*/\nfunction (_LineController) {\n  _inherits(ScatterController, _LineController);\n\n  function ScatterController() {\n    _classCallCheck(this, ScatterController);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ScatterController).apply(this, arguments));\n  }\n\n  return ScatterController;\n}(LineController);\n\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers =\n/*#__PURE__*/\nObject.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\nvar DateAdapter =\n/*#__PURE__*/\nfunction () {\n  function DateAdapter(options) {\n    _classCallCheck(this, DateAdapter);\n\n    this.options = options || {};\n  }\n\n  _createClass(DateAdapter, [{\n    key: \"formats\",\n    value: function formats() {\n      return abstract();\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(value, format) {\n      return abstract();\n    }\n  }, {\n    key: \"format\",\n    value: function format(timestamp, _format) {\n      return abstract();\n    }\n  }, {\n    key: \"add\",\n    value: function add(timestamp, amount, unit) {\n      return abstract();\n    }\n  }, {\n    key: \"diff\",\n    value: function diff(a, b, unit) {\n      return abstract();\n    }\n  }, {\n    key: \"startOf\",\n    value: function startOf(timestamp, unit, weekday) {\n      return abstract();\n    }\n  }, {\n    key: \"endOf\",\n    value: function endOf(timestamp, unit) {\n      return abstract();\n    }\n  }]);\n\n  return DateAdapter;\n}();\n\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\n\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n\n  return getRelativePosition$1(e, chart);\n}\n\nfunction evaluateAllVisibleItems(chart, handler) {\n  var metasets = chart.getSortedVisibleDatasetMetas();\n  var index, data, element;\n\n  for (var i = 0, ilen = metasets.length; i < ilen; ++i) {\n    var _metasets$i = metasets[i];\n    index = _metasets$i.index;\n    data = _metasets$i.data;\n\n    for (var j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  var controller = metaset.controller,\n      data = metaset.data,\n      _sorted = metaset._sorted;\n  var iScale = controller._cachedMeta.iScale;\n\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    var lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      var el = data[0];\n      var range = typeof el.getRange === 'function' && el.getRange(axis);\n\n      if (range) {\n        var start = lookupMethod(data, axis, value - range);\n        var end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\n\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  var metasets = chart.getSortedVisibleDatasetMetas();\n  var value = position[axis];\n\n  for (var i = 0, ilen = metasets.length; i < ilen; ++i) {\n    var _metasets$i2 = metasets[i],\n        index = _metasets$i2.index,\n        data = _metasets$i2.data;\n\n    var _binarySearch = binarySearch(metasets[i], axis, value, intersect),\n        lo = _binarySearch.lo,\n        hi = _binarySearch.hi;\n\n    for (var j = lo; j <= hi; ++j) {\n      var element = data[j];\n\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  var items = [];\n\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n\n  var evaluationFunc = function evaluationFunc(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  };\n\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  var distanceMetric = getDistanceMetricForAxis(axis);\n  var minDistance = Number.POSITIVE_INFINITY;\n  var items = [];\n\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n\n  var evaluationFunc = function evaluationFunc(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n\n    var center = element.getCenterPoint(useFinalPosition);\n\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding)) {\n      return;\n    }\n\n    var distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      items = [{\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  };\n\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  var position = getRelativePosition(e, chart);\n  var items = [];\n  var axis = options.axis;\n  var rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  var intersectsItem = false;\n  evaluateAllVisibleItems(chart, function (element, datasetIndex, index) {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n\n  return items;\n}\n\nvar Interaction = {\n  modes: {\n    index: function index(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'x';\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      var elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach(function (meta) {\n        var index = items[0].index;\n        var element = meta.data[index];\n\n        if (element && !element.skip) {\n          elements.push({\n            element: element,\n            datasetIndex: meta.index,\n            index: index\n          });\n        }\n      });\n      return elements;\n    },\n    dataset: function dataset(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n\n      if (items.length > 0) {\n        var datasetIndex = items[0].datasetIndex;\n        var data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n\n        for (var i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex: datasetIndex,\n            index: i\n          });\n        }\n      }\n\n      return items;\n    },\n    point: function point(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest: function nearest(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x: function x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y: function y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\nvar STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(function (v) {\n    return v.pos === position;\n  });\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(function (v) {\n    return STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis;\n  });\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  var layoutBoxes = [];\n  var i, ilen, box;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box: box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n\n  return layoutBoxes;\n}\n\nfunction setLayoutDims(layouts, params) {\n  var i, ilen, layout;\n\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\n\nfunction buildLayoutBoxes(boxes) {\n  var layoutBoxes = wrapBoxes(boxes);\n  var fullSize = sortByWeight(layoutBoxes.filter(function (wrap) {\n    return wrap.box.fullSize;\n  }), true);\n  var left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  var right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  var top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  var bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  var centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  var centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize: fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout) {\n  var box = layout.box;\n  var maxPadding = chartArea.maxPadding;\n\n  if (!isObject(layout.pos)) {\n    if (layout.size) {\n      chartArea[layout.pos] -= layout.size;\n    }\n\n    layout.size = layout.horizontal ? box.height : box.width;\n    chartArea[layout.pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  var newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  var newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  var widthChanged = newWidth !== chartArea.w;\n  var heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\n\nfunction handleMaxPadding(chartArea) {\n  var maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    var change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  var maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    var margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(function (pos) {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params) {\n  var refitBoxes = [];\n  var i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n\n    var _updateDims = updateDims(chartArea, params, layout),\n        same = _updateDims.same,\n        other = _updateDims.other;\n\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\n\nfunction placeBoxes(boxes, chartArea, params) {\n  var userPadding = params.padding;\n  var x = chartArea.x;\n  var y = chartArea.y;\n  var i, ilen, layout, box;\n\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.right : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n        draw: function draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure: function configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update: function update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    var padding = toPadding(chart.options.layout.padding);\n    var availableWidth = Math.max(width - padding.width, 0);\n    var availableHeight = Math.max(height - padding.height, 0);\n    var boxes = buildLayoutBoxes(chart.boxes);\n    var verticalBoxes = boxes.vertical;\n    var horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, function (box) {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    var visibleVerticalBoxCount = verticalBoxes.reduce(function (total, wrap) {\n      return wrap.box.options && wrap.box.options.display === false ? total : total + 1;\n    }, 0) || 1;\n    var params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding: padding,\n      availableWidth: availableWidth,\n      availableHeight: availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    var maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    var chartArea = Object.assign({\n      maxPadding: maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, function (layout) {\n      var box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nvar BasePlatform =\n/*#__PURE__*/\nfunction () {\n  function BasePlatform() {\n    _classCallCheck(this, BasePlatform);\n  }\n\n  _createClass(BasePlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {}\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      return false;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {}\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type, listener) {}\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return 1;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(element, width, height, aspectRatio) {\n      width = Math.max(0, width || element.width);\n      height = height || element.height;\n      return {\n        width: width,\n        height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n      };\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      return true;\n    }\n  }]);\n\n  return BasePlatform;\n}();\n\nvar BasicPlatform =\n/*#__PURE__*/\nfunction (_BasePlatform) {\n  _inherits(BasicPlatform, _BasePlatform);\n\n  function BasicPlatform() {\n    _classCallCheck(this, BasicPlatform);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BasicPlatform).apply(this, arguments));\n  }\n\n  _createClass(BasicPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(item) {\n      return item && item.getContext && item.getContext('2d') || null;\n    }\n  }]);\n\n  return BasicPlatform;\n}(BasePlatform);\n\nvar EXPANDO_KEY = '$chartjs';\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nvar isNullOrEmpty = function isNullOrEmpty(value) {\n  return value === null || value === '';\n};\n\nfunction initCanvas(canvas, aspectRatio) {\n  var style = canvas.style;\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    var displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      var displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\nvar eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n\n  var _getRelativePosition$ = getRelativePosition$1(event, chart),\n      x = _getRelativePosition$.x,\n      y = _getRelativePosition$.y;\n\n  return {\n    type: type,\n    chart: chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n\n  var container = canvas && _getParentNode(canvas);\n\n  var element = container || canvas;\n  var observer = new MutationObserver(function (entries) {\n    var parent = _getParentNode(element);\n\n    entries.forEach(function (entry) {\n      for (var i = 0; i < entry.addedNodes.length; i++) {\n        var added = entry.addedNodes[i];\n\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n\n  var container = canvas && _getParentNode(canvas);\n\n  if (!container) {\n    return;\n  }\n\n  var observer = new MutationObserver(function (entries) {\n    entries.forEach(function (entry) {\n      for (var i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {\n    childList: true\n  });\n  return observer;\n}\n\nvar drpListeningCharts = new Map();\nvar oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  var dpr = window.devicePixelRatio;\n\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach(function (resize, chart) {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n\n  var container = canvas && _getParentNode(canvas);\n\n  if (!container) {\n    return;\n  }\n\n  var resize = throttled(function (width, height) {\n    var w = container.clientWidth;\n    listener(width, height);\n\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  var observer = new ResizeObserver(function (entries) {\n    var entry = entries[0];\n    var width = entry.contentRect.width;\n    var height = entry.contentRect.height;\n\n    if (width === 0 && height === 0) {\n      return;\n    }\n\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  var canvas = chart.canvas;\n  var proxy = throttled(function (event) {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, function (args) {\n    var event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\n\nvar DomPlatform =\n/*#__PURE__*/\nfunction (_BasePlatform2) {\n  _inherits(DomPlatform, _BasePlatform2);\n\n  function DomPlatform() {\n    _classCallCheck(this, DomPlatform);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DomPlatform).apply(this, arguments));\n  }\n\n  _createClass(DomPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {\n      var context = canvas && canvas.getContext && canvas.getContext('2d');\n\n      if (context && context.canvas === canvas) {\n        initCanvas(canvas, aspectRatio);\n        return context;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return false;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      var style = initial.style || {};\n      Object.keys(style).forEach(function (key) {\n        canvas.style[key] = style[key];\n      });\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n      return true;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {\n      this.removeEventListener(chart, type);\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var handlers = {\n        attach: createAttachObserver,\n        detach: createDetachObserver,\n        resize: createResizeObserver\n      };\n      var handler = handlers[type] || createProxyAndListen;\n      proxies[type] = handler(chart, type, listener);\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type) {\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var proxy = proxies[type];\n\n      if (!proxy) {\n        return;\n      }\n\n      var handlers = {\n        attach: releaseObserver,\n        detach: releaseObserver,\n        resize: releaseObserver\n      };\n      var handler = handlers[type] || removeListener;\n      handler(chart, type, proxy);\n      proxies[type] = undefined;\n    }\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return window.devicePixelRatio;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(canvas, width, height, aspectRatio) {\n      return _getMaximumSize(canvas, width, height, aspectRatio);\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      var container = _getParentNode(canvas);\n\n      return !!(container && _getParentNode(container));\n    }\n  }]);\n\n  return DomPlatform;\n}(BasePlatform);\n\nvar Element =\n/*#__PURE__*/\nfunction () {\n  function Element() {\n    _classCallCheck(this, Element);\n\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n\n  _createClass(Element, [{\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      var _this$getProps = this.getProps(['x', 'y'], useFinalPosition),\n          x = _this$getProps.x,\n          y = _this$getProps.y;\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"hasValue\",\n    value: function hasValue() {\n      return isNumber(this.x) && isNumber(this.y);\n    }\n  }, {\n    key: \"getProps\",\n    value: function getProps(props, final) {\n      var me = this;\n      var anims = this.$animations;\n\n      if (!final || !anims) {\n        return me;\n      }\n\n      var ret = {};\n      props.forEach(function (prop) {\n        ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n      });\n      return ret;\n    }\n  }]);\n\n  return Element;\n}();\n\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nvar formatters = {\n  values: function values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric: function numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n\n    var locale = this.chart.options.locale;\n    var notation;\n    var delta = tickValue;\n\n    if (ticks.length > 1) {\n      var maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    var logDelta = log10(Math.abs(delta));\n    var numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    var options = {\n      notation: notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic: function logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n\n    var remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n\n    return '';\n  }\n};\n\nfunction calculateDelta(tickValue, ticks) {\n  var delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n\n  return delta;\n}\n\nvar Ticks = {\n  formatters: formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: function tickWidth(_ctx, options) {\n      return options.lineWidth;\n    },\n    tickColor: function tickColor(_ctx, options) {\n      return options.color;\n    },\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: function _scriptable(name) {\n    return !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'tickBorderDash';\n  }\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\n\nfunction autoSkip(scale, ticks) {\n  var tickOpts = scale.options.ticks;\n  var ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  var majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  var numMajorIndices = majorIndices.length;\n  var first = majorIndices[0];\n  var last = majorIndices[numMajorIndices - 1];\n  var newTicks = [];\n\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  var spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    var i, ilen;\n    var avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  var offset = scale.options.offset;\n\n  var tickLength = scale._tickSize();\n\n  var maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  var maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  var evenMajorSpacing = getEvenSpacing(majorIndices);\n  var spacing = ticks.length / ticksLimit;\n\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  var factors = _factorize(evenMajorSpacing);\n\n  for (var i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    var factor = factors[i];\n\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n\n  return Math.max(spacing, 1);\n}\n\nfunction getMajorIndices(ticks) {\n  var result = [];\n  var i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n\n  return result;\n}\n\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  var count = 0;\n  var next = majorIndices[0];\n  var i;\n  spacing = Math.ceil(spacing);\n\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  var start = valueOrDefault(majorStart, 0);\n  var end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  var count = 0;\n  var length, i, next;\n  spacing = Math.ceil(spacing);\n\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\nfunction getEvenSpacing(arr) {\n  var len = arr.length;\n  var i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n\n  return diff;\n}\n\nvar reverseAlign = function reverseAlign(align) {\n  return align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n};\n\nvar offsetFromEdge = function offsetFromEdge(scale, edge, offset) {\n  return edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n};\n\nfunction sample(arr, numItems) {\n  var result = [];\n  var increment = arr.length / numItems;\n  var len = arr.length;\n  var i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n\n  return result;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  var length = scale.ticks.length;\n  var validIndex = Math.min(index, length - 1);\n  var start = scale._startPixel;\n  var end = scale._endPixel;\n  var epsilon = 1e-6;\n  var lineValue = scale.getPixelForTick(validIndex);\n  var offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n\n    lineValue += validIndex < index ? offset : -offset;\n\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction garbageCollect(caches, length) {\n  each(caches, function (cache) {\n    var gc = cache.gc;\n    var gcLen = gc.length / 2;\n    var i;\n\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  var font = toFont(options.font, fallback);\n  var padding = toPadding(options.padding);\n  var lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale: scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick: tick,\n    index: index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  var ret = _toLeftRightCenter(align);\n\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  var top = scale.top,\n      left = scale.left,\n      bottom = scale.bottom,\n      right = scale.right;\n  var rotation = 0;\n  var maxWidth, titleX, titleY;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n\n  return {\n    titleX: titleX,\n    titleY: titleY,\n    maxWidth: maxWidth,\n    rotation: rotation\n  };\n}\n\nvar Scale =\n/*#__PURE__*/\nfunction (_Element) {\n  _inherits(Scale, _Element);\n\n  function Scale(cfg) {\n    var _this4;\n\n    _classCallCheck(this, Scale);\n\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(Scale).call(this));\n    _this4.id = cfg.id;\n    _this4.type = cfg.type;\n    _this4.options = undefined;\n    _this4.ctx = cfg.ctx;\n    _this4.chart = cfg.chart;\n    _this4.top = undefined;\n    _this4.bottom = undefined;\n    _this4.left = undefined;\n    _this4.right = undefined;\n    _this4.width = undefined;\n    _this4.height = undefined;\n    _this4._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    _this4.maxWidth = undefined;\n    _this4.maxHeight = undefined;\n    _this4.paddingTop = undefined;\n    _this4.paddingBottom = undefined;\n    _this4.paddingLeft = undefined;\n    _this4.paddingRight = undefined;\n    _this4.axis = undefined;\n    _this4.labelRotation = undefined;\n    _this4.min = undefined;\n    _this4.max = undefined;\n    _this4._range = undefined;\n    _this4.ticks = [];\n    _this4._gridLineItems = null;\n    _this4._labelItems = null;\n    _this4._labelSizes = null;\n    _this4._length = 0;\n    _this4._maxLength = 0;\n    _this4._longestTextCache = {};\n    _this4._startPixel = undefined;\n    _this4._endPixel = undefined;\n    _this4._reversePixels = false;\n    _this4._userMax = undefined;\n    _this4._userMin = undefined;\n    _this4._suggestedMax = undefined;\n    _this4._suggestedMin = undefined;\n    _this4._ticksLength = 0;\n    _this4._borderValue = 0;\n    _this4._cache = {};\n    _this4._dataLimitsCached = false;\n    _this4.$context = undefined;\n    return _this4;\n  }\n\n  _createClass(Scale, [{\n    key: \"init\",\n    value: function init(options) {\n      var me = this;\n      me.options = options.setContext(me.getContext());\n      me.axis = options.axis;\n      me._userMin = me.parse(options.min);\n      me._userMax = me.parse(options.max);\n      me._suggestedMin = me.parse(options.suggestedMin);\n      me._suggestedMax = me.parse(options.suggestedMax);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      return raw;\n    }\n  }, {\n    key: \"getUserBounds\",\n    value: function getUserBounds() {\n      var _userMin = this._userMin,\n          _userMax = this._userMax,\n          _suggestedMin = this._suggestedMin,\n          _suggestedMax = this._suggestedMax;\n      _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n      _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n      _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n      _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n      return {\n        min: finiteOrDefault(_userMin, _suggestedMin),\n        max: finiteOrDefault(_userMax, _suggestedMax),\n        minDefined: isNumberFinite(_userMin),\n        maxDefined: isNumberFinite(_userMax)\n      };\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(canStack) {\n      var me = this;\n\n      var _me$getUserBounds = me.getUserBounds(),\n          min = _me$getUserBounds.min,\n          max = _me$getUserBounds.max,\n          minDefined = _me$getUserBounds.minDefined,\n          maxDefined = _me$getUserBounds.maxDefined;\n\n      var range;\n\n      if (minDefined && maxDefined) {\n        return {\n          min: min,\n          max: max\n        };\n      }\n\n      var metas = me.getMatchingVisibleMetas();\n\n      for (var i = 0, ilen = metas.length; i < ilen; ++i) {\n        range = metas[i].controller.getMinMax(me, canStack);\n\n        if (!minDefined) {\n          min = Math.min(min, range.min);\n        }\n\n        if (!maxDefined) {\n          max = Math.max(max, range.max);\n        }\n      }\n\n      return {\n        min: finiteOrDefault(min, finiteOrDefault(max, min)),\n        max: finiteOrDefault(max, finiteOrDefault(min, max))\n      };\n    }\n  }, {\n    key: \"getPadding\",\n    value: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    }\n  }, {\n    key: \"getTicks\",\n    value: function getTicks() {\n      return this.ticks;\n    }\n  }, {\n    key: \"getLabels\",\n    value: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      this._cache = {};\n      this._dataLimitsCached = false;\n    }\n  }, {\n    key: \"beforeUpdate\",\n    value: function beforeUpdate() {\n      callback(this.options.beforeUpdate, [this]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var sampleSize = tickOpts.sampleSize;\n      me.beforeUpdate();\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me._margins = margins = Object.assign({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me.ticks = null;\n      me._labelSizes = null;\n      me._gridLineItems = null;\n      me._labelItems = null;\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions();\n      me._maxLength = me.isHorizontal() ? me.width + margins.left + margins.right : me.height + margins.top + margins.bottom;\n\n      if (!me._dataLimitsCached) {\n        me.beforeDataLimits();\n        me.determineDataLimits();\n        me.afterDataLimits();\n        me._range = _addGrace(me, me.options.grace);\n        me._dataLimitsCached = true;\n      }\n\n      me.beforeBuildTicks();\n      me.ticks = me.buildTicks() || [];\n      me.afterBuildTicks();\n      var samplingEnabled = sampleSize < me.ticks.length;\n\n      me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n\n      me.configure();\n      me.beforeCalculateLabelRotation();\n      me.calculateLabelRotation();\n      me.afterCalculateLabelRotation();\n\n      if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n        me.ticks = autoSkip(me, me.ticks);\n        me._labelSizes = null;\n      }\n\n      if (samplingEnabled) {\n        me._convertTicksToLabels(me.ticks);\n      }\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit();\n      me.afterUpdate();\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n      var reversePixels = me.options.reverse;\n      var startPixel, endPixel;\n\n      if (me.isHorizontal()) {\n        startPixel = me.left;\n        endPixel = me.right;\n      } else {\n        startPixel = me.top;\n        endPixel = me.bottom;\n        reversePixels = !reversePixels;\n      }\n\n      me._startPixel = startPixel;\n      me._endPixel = endPixel;\n      me._reversePixels = reversePixels;\n      me._length = endPixel - startPixel;\n      me._alignToPixels = me.options.alignToPixels;\n    }\n  }, {\n    key: \"afterUpdate\",\n    value: function afterUpdate() {\n      callback(this.options.afterUpdate, [this]);\n    }\n  }, {\n    key: \"beforeSetDimensions\",\n    value: function beforeSetDimensions() {\n      callback(this.options.beforeSetDimensions, [this]);\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight;\n        me.top = 0;\n        me.bottom = me.height;\n      }\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    }\n  }, {\n    key: \"afterSetDimensions\",\n    value: function afterSetDimensions() {\n      callback(this.options.afterSetDimensions, [this]);\n    }\n  }, {\n    key: \"_callHooks\",\n    value: function _callHooks(name) {\n      var me = this;\n      me.chart.notifyPlugins(name, me.getContext());\n      callback(me.options[name], [me]);\n    }\n  }, {\n    key: \"beforeDataLimits\",\n    value: function beforeDataLimits() {\n      this._callHooks('beforeDataLimits');\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {}\n  }, {\n    key: \"afterDataLimits\",\n    value: function afterDataLimits() {\n      this._callHooks('afterDataLimits');\n    }\n  }, {\n    key: \"beforeBuildTicks\",\n    value: function beforeBuildTicks() {\n      this._callHooks('beforeBuildTicks');\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      return [];\n    }\n  }, {\n    key: \"afterBuildTicks\",\n    value: function afterBuildTicks() {\n      this._callHooks('afterBuildTicks');\n    }\n  }, {\n    key: \"beforeTickToLabelConversion\",\n    value: function beforeTickToLabelConversion() {\n      callback(this.options.beforeTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var i, ilen, tick;\n\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        tick = ticks[i];\n        tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n      }\n\n      for (i = 0; i < ilen; i++) {\n        if (isNullOrUndef(ticks[i].label)) {\n          ticks.splice(i, 1);\n          ilen--;\n          i--;\n        }\n      }\n    }\n  }, {\n    key: \"afterTickToLabelConversion\",\n    value: function afterTickToLabelConversion() {\n      callback(this.options.afterTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"beforeCalculateLabelRotation\",\n    value: function beforeCalculateLabelRotation() {\n      callback(this.options.beforeCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"calculateLabelRotation\",\n    value: function calculateLabelRotation() {\n      var me = this;\n      var options = me.options;\n      var tickOpts = options.ticks;\n      var numTicks = me.ticks.length;\n      var minRotation = tickOpts.minRotation || 0;\n      var maxRotation = tickOpts.maxRotation;\n      var labelRotation = minRotation;\n      var tickWidth, maxHeight, maxLabelDiagonal;\n\n      if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n        me.labelRotation = minRotation;\n        return;\n      }\n\n      var labelSizes = me._getLabelSizes();\n\n      var maxLabelWidth = labelSizes.widest.width;\n      var maxLabelHeight = labelSizes.highest.height;\n\n      var maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n\n      tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n      if (maxLabelWidth + 6 > tickWidth) {\n        tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n        maxHeight = me.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n        maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n        labelRotation = toDegrees(Math.min(Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)), Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)));\n        labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n      }\n\n      me.labelRotation = labelRotation;\n    }\n  }, {\n    key: \"afterCalculateLabelRotation\",\n    value: function afterCalculateLabelRotation() {\n      callback(this.options.afterCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"beforeFit\",\n    value: function beforeFit() {\n      callback(this.options.beforeFit, [this]);\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var me = this;\n      var minSize = {\n        width: 0,\n        height: 0\n      };\n      var chart = me.chart,\n          _me$options2 = me.options,\n          tickOpts = _me$options2.ticks,\n          titleOpts = _me$options2.title,\n          gridOpts = _me$options2.grid;\n\n      var display = me._isVisible();\n\n      var isHorizontal = me.isHorizontal();\n\n      if (display) {\n        var titleHeight = getTitleHeight(titleOpts, chart.options.font);\n\n        if (isHorizontal) {\n          minSize.width = me.maxWidth;\n          minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n        } else {\n          minSize.height = me.maxHeight;\n          minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n        }\n\n        if (tickOpts.display && me.ticks.length) {\n          var _me$_getLabelSizes = me._getLabelSizes(),\n              first = _me$_getLabelSizes.first,\n              last = _me$_getLabelSizes.last,\n              widest = _me$_getLabelSizes.widest,\n              highest = _me$_getLabelSizes.highest;\n\n          var tickPadding = tickOpts.padding * 2;\n          var angleRadians = toRadians(me.labelRotation);\n          var cos = Math.cos(angleRadians);\n          var sin = Math.sin(angleRadians);\n\n          if (isHorizontal) {\n            var labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n            minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          } else {\n            var labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n            minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n          }\n\n          me._calculatePadding(first, last, sin, cos);\n        }\n      }\n\n      me._handleMargins();\n\n      if (isHorizontal) {\n        me.width = me._length = chart.width - me._margins.left - me._margins.right;\n        me.height = minSize.height;\n      } else {\n        me.width = minSize.width;\n        me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n      }\n    }\n  }, {\n    key: \"_calculatePadding\",\n    value: function _calculatePadding(first, last, sin, cos) {\n      var me = this;\n      var _me$options3 = me.options,\n          _me$options3$ticks = _me$options3.ticks,\n          align = _me$options3$ticks.align,\n          padding = _me$options3$ticks.padding,\n          position = _me$options3.position;\n      var isRotated = me.labelRotation !== 0;\n      var labelsBelowTicks = position !== 'top' && me.axis === 'x';\n\n      if (me.isHorizontal()) {\n        var offsetLeft = me.getPixelForTick(0) - me.left;\n        var offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n        var paddingLeft = 0;\n        var paddingRight = 0;\n\n        if (isRotated) {\n          if (labelsBelowTicks) {\n            paddingLeft = cos * first.width;\n            paddingRight = sin * last.height;\n          } else {\n            paddingLeft = sin * first.height;\n            paddingRight = cos * last.width;\n          }\n        } else if (align === 'start') {\n          paddingRight = last.width;\n        } else if (align === 'end') {\n          paddingLeft = first.width;\n        } else {\n          paddingLeft = first.width / 2;\n          paddingRight = last.width / 2;\n        }\n\n        me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n        me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n      } else {\n        var paddingTop = last.height / 2;\n        var paddingBottom = first.height / 2;\n\n        if (align === 'start') {\n          paddingTop = 0;\n          paddingBottom = first.height;\n        } else if (align === 'end') {\n          paddingTop = last.height;\n          paddingBottom = 0;\n        }\n\n        me.paddingTop = paddingTop + padding;\n        me.paddingBottom = paddingBottom + padding;\n      }\n    }\n  }, {\n    key: \"_handleMargins\",\n    value: function _handleMargins() {\n      var me = this;\n\n      if (me._margins) {\n        me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n        me._margins.top = Math.max(me.paddingTop, me._margins.top);\n        me._margins.right = Math.max(me.paddingRight, me._margins.right);\n        me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n      }\n    }\n  }, {\n    key: \"afterFit\",\n    value: function afterFit() {\n      callback(this.options.afterFit, [this]);\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var _this$options = this.options,\n          axis = _this$options.axis,\n          position = _this$options.position;\n      return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n  }, {\n    key: \"isFullSize\",\n    value: function isFullSize() {\n      return this.options.fullSize;\n    }\n  }, {\n    key: \"_convertTicksToLabels\",\n    value: function _convertTicksToLabels(ticks) {\n      var me = this;\n      me.beforeTickToLabelConversion();\n      me.generateTickLabels(ticks);\n      me.afterTickToLabelConversion();\n    }\n  }, {\n    key: \"_getLabelSizes\",\n    value: function _getLabelSizes() {\n      var me = this;\n      var labelSizes = me._labelSizes;\n\n      if (!labelSizes) {\n        var sampleSize = me.options.ticks.sampleSize;\n        var ticks = me.ticks;\n\n        if (sampleSize < ticks.length) {\n          ticks = sample(ticks, sampleSize);\n        }\n\n        me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n      }\n\n      return labelSizes;\n    }\n  }, {\n    key: \"_computeLabelSizes\",\n    value: function _computeLabelSizes(ticks, length) {\n      var ctx = this.ctx,\n          caches = this._longestTextCache;\n      var widths = [];\n      var heights = [];\n      var widestLabelSize = 0;\n      var highestLabelSize = 0;\n      var i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n      for (i = 0; i < length; ++i) {\n        label = ticks[i].label;\n        tickFont = this._resolveTickFontOptions(i);\n        ctx.font = fontString = tickFont.string;\n        cache = caches[fontString] = caches[fontString] || {\n          data: {},\n          gc: []\n        };\n        lineHeight = tickFont.lineHeight;\n        width = height = 0;\n\n        if (!isNullOrUndef(label) && !isArray(label)) {\n          width = _measureText(ctx, cache.data, cache.gc, width, label);\n          height = lineHeight;\n        } else if (isArray(label)) {\n          for (j = 0, jlen = label.length; j < jlen; ++j) {\n            nestedLabel = label[j];\n\n            if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n              width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n              height += lineHeight;\n            }\n          }\n        }\n\n        widths.push(width);\n        heights.push(height);\n        widestLabelSize = Math.max(width, widestLabelSize);\n        highestLabelSize = Math.max(height, highestLabelSize);\n      }\n\n      garbageCollect(caches, length);\n      var widest = widths.indexOf(widestLabelSize);\n      var highest = heights.indexOf(highestLabelSize);\n\n      var valueAt = function valueAt(idx) {\n        return {\n          width: widths[idx] || 0,\n          height: heights[idx] || 0\n        };\n      };\n\n      return {\n        first: valueAt(0),\n        last: valueAt(length - 1),\n        widest: valueAt(widest),\n        highest: valueAt(highest),\n        widths: widths,\n        heights: heights\n      };\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value;\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value, index) {\n      return NaN;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {}\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getPixelForDecimal\",\n    value: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me._reversePixels) {\n        decimal = 1 - decimal;\n      }\n\n      var pixel = me._startPixel + decimal * me._length;\n      return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n    }\n  }, {\n    key: \"getDecimalForPixel\",\n    value: function getDecimalForPixel(pixel) {\n      var decimal = (pixel - this._startPixel) / this._length;\n      return this._reversePixels ? 1 - decimal : decimal;\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    }\n  }, {\n    key: \"getBaseValue\",\n    value: function getBaseValue() {\n      var min = this.min,\n          max = this.max;\n      return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index) {\n      var me = this;\n      var ticks = me.ticks || [];\n\n      if (index >= 0 && index < ticks.length) {\n        var tick = ticks[index];\n        return tick.$context || (tick.$context = createTickContext(me.getContext(), index, tick));\n      }\n\n      return me.$context || (me.$context = createScaleContext(me.chart.getContext(), me));\n    }\n  }, {\n    key: \"_tickSize\",\n    value: function _tickSize() {\n      var me = this;\n      var optionTicks = me.options.ticks;\n      var rot = toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n\n      var labelSizes = me._getLabelSizes();\n\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = labelSizes ? labelSizes.widest.width + padding : 0;\n      var h = labelSizes ? labelSizes.highest.height + padding : 0;\n      return me.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n  }, {\n    key: \"_isVisible\",\n    value: function _isVisible() {\n      var display = this.options.display;\n\n      if (display !== 'auto') {\n        return !!display;\n      }\n\n      return this.getMatchingVisibleMetas().length > 0;\n    }\n  }, {\n    key: \"_computeGridLineItems\",\n    value: function _computeGridLineItems(chartArea) {\n      var me = this;\n      var axis = me.axis;\n      var chart = me.chart;\n      var options = me.options;\n      var grid = options.grid,\n          position = options.position;\n      var offset = grid.offset;\n      var isHorizontal = me.isHorizontal();\n      var ticks = me.ticks;\n      var ticksLength = ticks.length + (offset ? 1 : 0);\n      var tl = getTickMarkLength(grid);\n      var items = [];\n      var borderOpts = grid.setContext(me.getContext());\n      var axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n      var axisHalfWidth = axisWidth / 2;\n\n      var alignBorderValue = function alignBorderValue(pixel) {\n        return _alignPixel(chart, pixel, axisWidth);\n      };\n\n      var borderValue, i, lineValue, alignedLineValue;\n      var tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n      if (position === 'top') {\n        borderValue = alignBorderValue(me.bottom);\n        ty1 = me.bottom - tl;\n        ty2 = borderValue - axisHalfWidth;\n        y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n        y2 = chartArea.bottom;\n      } else if (position === 'bottom') {\n        borderValue = alignBorderValue(me.top);\n        y1 = chartArea.top;\n        y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignBorderValue(me.right);\n        tx1 = me.right - tl;\n        tx2 = borderValue - axisHalfWidth;\n        x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n        x2 = chartArea.right;\n      } else if (position === 'right') {\n        borderValue = alignBorderValue(me.left);\n        x1 = chartArea.left;\n        x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n        tx1 = borderValue + axisHalfWidth;\n        tx2 = me.left + tl;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n\n        y1 = chartArea.top;\n        y2 = chartArea.bottom;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = ty1 + tl;\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n        } else if (isObject(position)) {\n          var _positionAxisID = Object.keys(position)[0];\n          var _value = position[_positionAxisID];\n          borderValue = alignBorderValue(me.chart.scales[_positionAxisID].getPixelForValue(_value));\n        }\n\n        tx1 = borderValue - axisHalfWidth;\n        tx2 = tx1 - tl;\n        x1 = chartArea.left;\n        x2 = chartArea.right;\n      }\n\n      for (i = 0; i < ticksLength; ++i) {\n        var optsAtIndex = grid.setContext(me.getContext(i));\n        var lineWidth = optsAtIndex.lineWidth;\n        var lineColor = optsAtIndex.color;\n        var borderDash = grid.borderDash || [];\n        var borderDashOffset = optsAtIndex.borderDashOffset;\n        var tickWidth = optsAtIndex.tickWidth;\n        var tickColor = optsAtIndex.tickColor;\n        var tickBorderDash = optsAtIndex.tickBorderDash || [];\n        var tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n        lineValue = getPixelForGridLine(me, i, offset);\n\n        if (lineValue === undefined) {\n          continue;\n        }\n\n        alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n        if (isHorizontal) {\n          tx1 = tx2 = x1 = x2 = alignedLineValue;\n        } else {\n          ty1 = ty2 = y1 = y2 = alignedLineValue;\n        }\n\n        items.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          width: lineWidth,\n          color: lineColor,\n          borderDash: borderDash,\n          borderDashOffset: borderDashOffset,\n          tickWidth: tickWidth,\n          tickColor: tickColor,\n          tickBorderDash: tickBorderDash,\n          tickBorderDashOffset: tickBorderDashOffset\n        });\n      }\n\n      me._ticksLength = ticksLength;\n      me._borderValue = borderValue;\n      return items;\n    }\n  }, {\n    key: \"_computeLabelItems\",\n    value: function _computeLabelItems(chartArea) {\n      var me = this;\n      var axis = me.axis;\n      var options = me.options;\n      var position = options.position,\n          optionTicks = options.ticks;\n      var isHorizontal = me.isHorizontal();\n      var ticks = me.ticks;\n      var align = optionTicks.align,\n          crossAlign = optionTicks.crossAlign,\n          padding = optionTicks.padding,\n          mirror = optionTicks.mirror;\n      var tl = getTickMarkLength(options.grid);\n      var tickAndPadding = tl + padding;\n      var hTickAndPadding = mirror ? -padding : tickAndPadding;\n      var rotation = -toRadians(me.labelRotation);\n      var items = [];\n      var i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n      var textBaseline = 'middle';\n\n      if (position === 'top') {\n        y = me.bottom - hTickAndPadding;\n        textAlign = me._getXAxisLabelAlignment();\n      } else if (position === 'bottom') {\n        y = me.top + hTickAndPadding;\n        textAlign = me._getXAxisLabelAlignment();\n      } else if (position === 'left') {\n        var ret = me._getYAxisLabelAlignment(tl);\n\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (position === 'right') {\n        var _ret = me._getYAxisLabelAlignment(tl);\n\n        textAlign = _ret.textAlign;\n        x = _ret.x;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n        }\n\n        textAlign = me._getXAxisLabelAlignment();\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n        } else if (isObject(position)) {\n          var _positionAxisID2 = Object.keys(position)[0];\n          var _value2 = position[_positionAxisID2];\n          x = me.chart.scales[_positionAxisID2].getPixelForValue(_value2);\n        }\n\n        textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n      }\n\n      if (axis === 'y') {\n        if (align === 'start') {\n          textBaseline = 'top';\n        } else if (align === 'end') {\n          textBaseline = 'bottom';\n        }\n      }\n\n      var labelSizes = me._getLabelSizes();\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        label = tick.label;\n        var optsAtIndex = optionTicks.setContext(me.getContext(i));\n        pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n        font = me._resolveTickFontOptions(i);\n        lineHeight = font.lineHeight;\n        lineCount = isArray(label) ? label.length : 1;\n        var halfCount = lineCount / 2;\n        var color = optsAtIndex.color;\n        var strokeColor = optsAtIndex.textStrokeColor;\n        var strokeWidth = optsAtIndex.textStrokeWidth;\n\n        if (isHorizontal) {\n          x = pixel;\n\n          if (position === 'top') {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = -lineCount * lineHeight + lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n            } else {\n              textOffset = -labelSizes.highest.height + lineHeight / 2;\n            }\n          } else {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n            } else {\n              textOffset = labelSizes.highest.height - lineCount * lineHeight;\n            }\n          }\n\n          if (mirror) {\n            textOffset *= -1;\n          }\n        } else {\n          y = pixel;\n          textOffset = (1 - lineCount) * lineHeight / 2;\n        }\n\n        var backdrop = void 0;\n\n        if (optsAtIndex.showLabelBackdrop) {\n          var labelPadding = toPadding(optsAtIndex.backdropPadding);\n          var height = labelSizes.heights[i];\n          var width = labelSizes.widths[i];\n          var top = y + textOffset - labelPadding.top;\n          var left = x - labelPadding.left;\n\n          switch (textBaseline) {\n            case 'middle':\n              top -= height / 2;\n              break;\n\n            case 'bottom':\n              top -= height;\n              break;\n          }\n\n          switch (textAlign) {\n            case 'center':\n              left -= width / 2;\n              break;\n\n            case 'right':\n              left -= width;\n              break;\n          }\n\n          backdrop = {\n            left: left,\n            top: top,\n            width: width + labelPadding.width,\n            height: height + labelPadding.height,\n            color: optsAtIndex.backdropColor\n          };\n        }\n\n        items.push({\n          rotation: rotation,\n          label: label,\n          font: font,\n          color: color,\n          strokeColor: strokeColor,\n          strokeWidth: strokeWidth,\n          textOffset: textOffset,\n          textAlign: textAlign,\n          textBaseline: textBaseline,\n          translation: [x, y],\n          backdrop: backdrop\n        });\n      }\n\n      return items;\n    }\n  }, {\n    key: \"_getXAxisLabelAlignment\",\n    value: function _getXAxisLabelAlignment() {\n      var me = this;\n      var _me$options4 = me.options,\n          position = _me$options4.position,\n          ticks = _me$options4.ticks;\n      var rotation = -toRadians(me.labelRotation);\n\n      if (rotation) {\n        return position === 'top' ? 'left' : 'right';\n      }\n\n      var align = 'center';\n\n      if (ticks.align === 'start') {\n        align = 'left';\n      } else if (ticks.align === 'end') {\n        align = 'right';\n      }\n\n      return align;\n    }\n  }, {\n    key: \"_getYAxisLabelAlignment\",\n    value: function _getYAxisLabelAlignment(tl) {\n      var me = this;\n      var _me$options5 = me.options,\n          position = _me$options5.position,\n          _me$options5$ticks = _me$options5.ticks,\n          crossAlign = _me$options5$ticks.crossAlign,\n          mirror = _me$options5$ticks.mirror,\n          padding = _me$options5$ticks.padding;\n\n      var labelSizes = me._getLabelSizes();\n\n      var tickAndPadding = tl + padding;\n      var widest = labelSizes.widest.width;\n      var textAlign;\n      var x;\n\n      if (position === 'left') {\n        if (mirror) {\n          textAlign = 'left';\n          x = me.right + padding;\n        } else {\n          x = me.right - tickAndPadding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x = me.left;\n          }\n        }\n      } else if (position === 'right') {\n        if (mirror) {\n          textAlign = 'right';\n          x = me.left + padding;\n        } else {\n          x = me.left + tickAndPadding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x = me.right;\n          }\n        }\n      } else {\n        textAlign = 'right';\n      }\n\n      return {\n        textAlign: textAlign,\n        x: x\n      };\n    }\n  }, {\n    key: \"_computeLabelArea\",\n    value: function _computeLabelArea() {\n      var me = this;\n\n      if (me.options.ticks.mirror) {\n        return;\n      }\n\n      var chart = me.chart;\n      var position = me.options.position;\n\n      if (position === 'left' || position === 'right') {\n        return {\n          top: 0,\n          left: me.left,\n          bottom: chart.height,\n          right: me.right\n        };\n      }\n\n      if (position === 'top' || position === 'bottom') {\n        return {\n          top: me.top,\n          left: 0,\n          bottom: me.bottom,\n          right: chart.width\n        };\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var ctx = this.ctx,\n          backgroundColor = this.options.backgroundColor,\n          left = this.left,\n          top = this.top,\n          width = this.width,\n          height = this.height;\n\n      if (backgroundColor) {\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        ctx.fillRect(left, top, width, height);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getLineWidthForValue\",\n    value: function getLineWidthForValue(value) {\n      var me = this;\n      var grid = me.options.grid;\n\n      if (!me._isVisible() || !grid.display) {\n        return 0;\n      }\n\n      var ticks = me.ticks;\n      var index = ticks.findIndex(function (t) {\n        return t.value === value;\n      });\n\n      if (index >= 0) {\n        var opts = grid.setContext(me.getContext(index));\n        return opts.lineWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid(chartArea) {\n      var me = this;\n      var grid = me.options.grid;\n      var ctx = me.ctx;\n\n      var items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n\n      var i, ilen;\n\n      var drawLine = function drawLine(p1, p2, style) {\n        if (!style.width || !style.color) {\n          return;\n        }\n\n        ctx.save();\n        ctx.lineWidth = style.width;\n        ctx.strokeStyle = style.color;\n        ctx.setLineDash(style.borderDash || []);\n        ctx.lineDashOffset = style.borderDashOffset;\n        ctx.beginPath();\n        ctx.moveTo(p1.x, p1.y);\n        ctx.lineTo(p2.x, p2.y);\n        ctx.stroke();\n        ctx.restore();\n      };\n\n      if (grid.display) {\n        for (i = 0, ilen = items.length; i < ilen; ++i) {\n          var item = items[i];\n\n          if (grid.drawOnChartArea) {\n            drawLine({\n              x: item.x1,\n              y: item.y1\n            }, {\n              x: item.x2,\n              y: item.y2\n            }, item);\n          }\n\n          if (grid.drawTicks) {\n            drawLine({\n              x: item.tx1,\n              y: item.ty1\n            }, {\n              x: item.tx2,\n              y: item.ty2\n            }, {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {\n      var me = this;\n      var chart = me.chart,\n          ctx = me.ctx,\n          grid = me.options.grid;\n      var borderOpts = grid.setContext(me.getContext());\n      var axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n\n      if (!axisWidth) {\n        return;\n      }\n\n      var lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n      var borderValue = me._borderValue;\n      var x1, x2, y1, y2;\n\n      if (me.isHorizontal()) {\n        x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n\n      ctx.save();\n      ctx.lineWidth = borderOpts.borderWidth;\n      ctx.strokeStyle = borderOpts.borderColor;\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.restore();\n    }\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels(chartArea) {\n      var me = this;\n      var optionTicks = me.options.ticks;\n\n      if (!optionTicks.display) {\n        return;\n      }\n\n      var ctx = me.ctx;\n\n      var area = me._computeLabelArea();\n\n      if (area) {\n        clipArea(ctx, area);\n      }\n\n      var items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n\n      var i, ilen;\n\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        var item = items[i];\n        var tickFont = item.font;\n        var label = item.label;\n\n        if (item.backdrop) {\n          ctx.fillStyle = item.backdrop.color;\n          ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n        }\n\n        var y = item.textOffset;\n        renderText(ctx, label, 0, y, tickFont, item);\n      }\n\n      if (area) {\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var ctx = this.ctx,\n          _this$options2 = this.options,\n          position = _this$options2.position,\n          title = _this$options2.title,\n          reverse = _this$options2.reverse;\n\n      if (!title.display) {\n        return;\n      }\n\n      var font = toFont(title.font);\n      var padding = toPadding(title.padding);\n      var align = title.align;\n      var offset = font.lineHeight / 2;\n\n      if (position === 'bottom') {\n        offset += padding.bottom;\n\n        if (isArray(title.text)) {\n          offset += font.lineHeight * (title.text.length - 1);\n        }\n      } else {\n        offset += padding.top;\n      }\n\n      var _titleArgs = titleArgs(this, offset, position, align),\n          titleX = _titleArgs.titleX,\n          titleY = _titleArgs.titleY,\n          maxWidth = _titleArgs.maxWidth,\n          rotation = _titleArgs.rotation;\n\n      renderText(ctx, title.text, 0, 0, font, {\n        color: title.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: titleAlign(align, position, reverse),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(chartArea) {\n      var me = this;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      me.drawBackground();\n      me.drawGrid(chartArea);\n      me.drawBorder();\n      me.drawTitle();\n      me.drawLabels(chartArea);\n    }\n  }, {\n    key: \"_layers\",\n    value: function _layers() {\n      var me = this;\n      var opts = me.options;\n      var tz = opts.ticks && opts.ticks.z || 0;\n      var gz = opts.grid && opts.grid.z || 0;\n\n      if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n        return [{\n          z: tz,\n          draw: function draw(chartArea) {\n            me.draw(chartArea);\n          }\n        }];\n      }\n\n      return [{\n        z: gz,\n        draw: function draw(chartArea) {\n          me.drawBackground();\n          me.drawGrid(chartArea);\n          me.drawTitle();\n        }\n      }, {\n        z: gz + 1,\n        draw: function draw() {\n          me.drawBorder();\n        }\n      }, {\n        z: tz,\n        draw: function draw(chartArea) {\n          me.drawLabels(chartArea);\n        }\n      }];\n    }\n  }, {\n    key: \"getMatchingVisibleMetas\",\n    value: function getMatchingVisibleMetas(type) {\n      var me = this;\n      var metas = me.chart.getSortedVisibleDatasetMetas();\n      var axisID = me.axis + 'AxisID';\n      var result = [];\n      var i, ilen;\n\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        var meta = metas[i];\n\n        if (meta[axisID] === me.id && (!type || meta.type === type)) {\n          result.push(meta);\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_resolveTickFontOptions\",\n    value: function _resolveTickFontOptions(index) {\n      var opts = this.options.ticks.setContext(this.getContext(index));\n      return toFont(opts.font);\n    }\n  }, {\n    key: \"_maxDigits\",\n    value: function _maxDigits() {\n      var me = this;\n\n      var fontSize = me._resolveTickFontOptions(0).lineHeight;\n\n      return (me.isHorizontal() ? me.width : me.height) / fontSize;\n    }\n  }]);\n\n  return Scale;\n}(Element);\n\nvar TypedRegistry =\n/*#__PURE__*/\nfunction () {\n  function TypedRegistry(type, scope, override) {\n    _classCallCheck(this, TypedRegistry);\n\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  _createClass(TypedRegistry, [{\n    key: \"isForType\",\n    value: function isForType(type) {\n      return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n  }, {\n    key: \"register\",\n    value: function register(item) {\n      var me = this;\n      var proto = Object.getPrototypeOf(item);\n      var parentScope;\n\n      if (isIChartComponent(proto)) {\n        parentScope = me.register(proto);\n      }\n\n      var items = me.items;\n      var id = item.id;\n      var scope = me.scope + '.' + id;\n\n      if (!id) {\n        throw new Error('class does not have id: ' + item);\n      }\n\n      if (id in items) {\n        return scope;\n      }\n\n      items[id] = item;\n      registerDefaults(item, scope, parentScope);\n\n      if (me.override) {\n        defaults.override(item.id, item.overrides);\n      }\n\n      return scope;\n    }\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      return this.items[id];\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister(item) {\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope;\n\n      if (id in items) {\n        delete items[id];\n      }\n\n      if (scope && id in defaults[scope]) {\n        delete defaults[scope][id];\n\n        if (this.override) {\n          delete overrides[id];\n        }\n      }\n    }\n  }]);\n\n  return TypedRegistry;\n}();\n\nfunction registerDefaults(item, scope, parentScope) {\n  var itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(function (property) {\n    var propertyParts = property.split('.');\n    var sourceName = propertyParts.pop();\n    var sourceScope = [scope].concat(propertyParts).join('.');\n    var parts = routes[property].split('.');\n    var targetName = parts.pop();\n    var targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nvar Registry =\n/*#__PURE__*/\nfunction () {\n  function Registry() {\n    _classCallCheck(this, Registry);\n\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  _createClass(Registry, [{\n    key: \"add\",\n    value: function add() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      this._each('register', args);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      this._each('unregister', args);\n    }\n  }, {\n    key: \"addControllers\",\n    value: function addControllers() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      this._each('register', args, this.controllers);\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      this._each('register', args, this.elements);\n    }\n  }, {\n    key: \"addPlugins\",\n    value: function addPlugins() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      this._each('register', args, this.plugins);\n    }\n  }, {\n    key: \"addScales\",\n    value: function addScales() {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n\n      this._each('register', args, this.scales);\n    }\n  }, {\n    key: \"getController\",\n    value: function getController(id) {\n      return this._get(id, this.controllers, 'controller');\n    }\n  }, {\n    key: \"getElement\",\n    value: function getElement(id) {\n      return this._get(id, this.elements, 'element');\n    }\n  }, {\n    key: \"getPlugin\",\n    value: function getPlugin(id) {\n      return this._get(id, this.plugins, 'plugin');\n    }\n  }, {\n    key: \"getScale\",\n    value: function getScale(id) {\n      return this._get(id, this.scales, 'scale');\n    }\n  }, {\n    key: \"removeControllers\",\n    value: function removeControllers() {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n\n      this._each('unregister', args, this.controllers);\n    }\n  }, {\n    key: \"removeElements\",\n    value: function removeElements() {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n\n      this._each('unregister', args, this.elements);\n    }\n  }, {\n    key: \"removePlugins\",\n    value: function removePlugins() {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n\n      this._each('unregister', args, this.plugins);\n    }\n  }, {\n    key: \"removeScales\",\n    value: function removeScales() {\n      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        args[_key10] = arguments[_key10];\n      }\n\n      this._each('unregister', args, this.scales);\n    }\n  }, {\n    key: \"_each\",\n    value: function _each(method, args, typedRegistry) {\n      var me = this;\n\n      _toConsumableArray(args).forEach(function (arg) {\n        var reg = typedRegistry || me._getRegistryForType(arg);\n\n        if (typedRegistry || reg.isForType(arg) || reg === me.plugins && arg.id) {\n          me._exec(method, reg, arg);\n        } else {\n          each(arg, function (item) {\n            var itemReg = typedRegistry || me._getRegistryForType(item);\n\n            me._exec(method, itemReg, item);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_exec\",\n    value: function _exec(method, registry, component) {\n      var camelMethod = _capitalize(method);\n\n      callback(component['before' + camelMethod], [], component);\n      registry[method](component);\n      callback(component['after' + camelMethod], [], component);\n    }\n  }, {\n    key: \"_getRegistryForType\",\n    value: function _getRegistryForType(type) {\n      for (var i = 0; i < this._typedRegistries.length; i++) {\n        var reg = this._typedRegistries[i];\n\n        if (reg.isForType(type)) {\n          return reg;\n        }\n      }\n\n      return this.plugins;\n    }\n  }, {\n    key: \"_get\",\n    value: function _get(id, typedRegistry, type) {\n      var item = typedRegistry.get(id);\n\n      if (item === undefined) {\n        throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n      }\n\n      return item;\n    }\n  }]);\n\n  return Registry;\n}();\n\nvar registry = new Registry();\n\nvar PluginService =\n/*#__PURE__*/\nfunction () {\n  function PluginService() {\n    _classCallCheck(this, PluginService);\n\n    this._init = [];\n  }\n\n  _createClass(PluginService, [{\n    key: \"notify\",\n    value: function notify(chart, hook, args, filter) {\n      var me = this;\n\n      if (hook === 'beforeInit') {\n        me._init = me._createDescriptors(chart, true);\n\n        me._notify(me._init, chart, 'install');\n      }\n\n      var descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n\n      var result = me._notify(descriptors, chart, hook, args);\n\n      if (hook === 'destroy') {\n        me._notify(descriptors, chart, 'stop');\n\n        me._notify(me._init, chart, 'uninstall');\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(descriptors, chart, hook, args) {\n      args = args || {};\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = descriptors[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var descriptor = _step4.value;\n          var plugin = descriptor.plugin;\n          var method = plugin[hook];\n          var params = [chart, args, descriptor.options];\n\n          if (callback(method, params, plugin) === false && args.cancelable) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"invalidate\",\n    value: function invalidate() {\n      if (!isNullOrUndef(this._cache)) {\n        this._oldCache = this._cache;\n        this._cache = undefined;\n      }\n    }\n  }, {\n    key: \"_descriptors\",\n    value: function _descriptors(chart) {\n      if (this._cache) {\n        return this._cache;\n      }\n\n      var descriptors = this._cache = this._createDescriptors(chart);\n\n      this._notifyStateChanges(chart);\n\n      return descriptors;\n    }\n  }, {\n    key: \"_createDescriptors\",\n    value: function _createDescriptors(chart, all) {\n      var config = chart && chart.config;\n      var options = valueOrDefault(config.options && config.options.plugins, {});\n      var plugins = allPlugins(config);\n      return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n  }, {\n    key: \"_notifyStateChanges\",\n    value: function _notifyStateChanges(chart) {\n      var previousDescriptors = this._oldCache || [];\n      var descriptors = this._cache;\n\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.plugin.id === y.plugin.id;\n          });\n        });\n      };\n\n      this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n\n      this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n  }]);\n\n  return PluginService;\n}();\n\nfunction allPlugins(config) {\n  var plugins = [];\n  var keys = Object.keys(registry.plugins.items);\n\n  for (var i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  var local = config.plugins || [];\n\n  for (var _i2 = 0; _i2 < local.length; _i2++) {\n    var plugin = local[_i2];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n\n  return plugins;\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n\n  if (options === true) {\n    return {};\n  }\n\n  return options;\n}\n\nfunction createDescriptors(chart, plugins, options, all) {\n  var result = [];\n  var context = chart.getContext();\n\n  for (var i = 0; i < plugins.length; i++) {\n    var plugin = plugins[i];\n    var id = plugin.id;\n    var opts = getOpts(options[id], all);\n\n    if (opts === null) {\n      continue;\n    }\n\n    result.push({\n      plugin: plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, plugin, opts, context) {\n  var keys = config.pluginScopeKeys(plugin);\n  var scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  var datasetDefaults = defaults.datasets[type] || {};\n  var datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  var axis = id;\n\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\n\nfunction mergeScaleConfig(config, options) {\n  var chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  var configScales = options.scales || {};\n  var chartIndexAxis = getIndexAxis(config.type, options);\n  var firstIDs = Object.create(null);\n  var scales = Object.create(null);\n  Object.keys(configScales).forEach(function (id) {\n    var scaleConf = configScales[id];\n    var axis = determineAxis(id, scaleConf);\n    var defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    var defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis: axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(function (dataset) {\n    var type = dataset.type || config.type;\n    var indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    var datasetDefaults = overrides[type] || {};\n    var defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(function (defaultID) {\n      var axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      var id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis: axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(function (key) {\n    var scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\n\nfunction initOptions(config) {\n  var options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\n\nvar keyCache = new Map();\nvar keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  var keys = keyCache.get(cacheKey);\n\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n\n  return keys;\n}\n\nvar addIfFound = function addIfFound(set, obj, key) {\n  var opts = resolveObjectKey(obj, key);\n\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nvar Config =\n/*#__PURE__*/\nfunction () {\n  function Config(config) {\n    _classCallCheck(this, Config);\n\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  _createClass(Config, [{\n    key: \"update\",\n    value: function update() {\n      var config = this._config;\n      this.clearCache();\n      initOptions(config);\n    }\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this._scopeCache.clear();\n\n      this._resolverCache.clear();\n    }\n  }, {\n    key: \"datasetScopeKeys\",\n    value: function datasetScopeKeys(datasetType) {\n      return cachedKeys(datasetType, function () {\n        return [[\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetAnimationScopeKeys\",\n    value: function datasetAnimationScopeKeys(datasetType, transition) {\n      return cachedKeys(\"\".concat(datasetType, \".transition.\").concat(transition), function () {\n        return [[\"datasets.\".concat(datasetType, \".transitions.\").concat(transition), \"transitions.\".concat(transition)], [\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetElementScopeKeys\",\n    value: function datasetElementScopeKeys(datasetType, elementType) {\n      return cachedKeys(\"\".concat(datasetType, \"-\").concat(elementType), function () {\n        return [[\"datasets.\".concat(datasetType, \".elements.\").concat(elementType), \"datasets.\".concat(datasetType), \"elements.\".concat(elementType), '']];\n      });\n    }\n  }, {\n    key: \"pluginScopeKeys\",\n    value: function pluginScopeKeys(plugin) {\n      var id = plugin.id;\n      var type = this.type;\n      return cachedKeys(\"\".concat(type, \"-plugin-\").concat(id), function () {\n        return [[\"plugins.\".concat(id)].concat(_toConsumableArray(plugin.additionalOptionScopes || []))];\n      });\n    }\n  }, {\n    key: \"_cachedScopes\",\n    value: function _cachedScopes(mainScope, resetCache) {\n      var _scopeCache = this._scopeCache;\n\n      var cache = _scopeCache.get(mainScope);\n\n      if (!cache || resetCache) {\n        cache = new Map();\n\n        _scopeCache.set(mainScope, cache);\n      }\n\n      return cache;\n    }\n  }, {\n    key: \"getOptionScopes\",\n    value: function getOptionScopes(mainScope, keyLists, resetCache) {\n      var options = this.options,\n          type = this.type;\n\n      var cache = this._cachedScopes(mainScope, resetCache);\n\n      var cached = cache.get(keyLists);\n\n      if (cached) {\n        return cached;\n      }\n\n      var scopes = new Set();\n      keyLists.forEach(function (keys) {\n        if (mainScope) {\n          scopes.add(mainScope);\n          keys.forEach(function (key) {\n            return addIfFound(scopes, mainScope, key);\n          });\n        }\n\n        keys.forEach(function (key) {\n          return addIfFound(scopes, options, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, overrides[type] || {}, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, defaults, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, descriptors, key);\n        });\n      });\n\n      var array = _toConsumableArray(scopes);\n\n      if (keysCached.has(keyLists)) {\n        cache.set(keyLists, array);\n      }\n\n      return array;\n    }\n  }, {\n    key: \"chartOptionScopes\",\n    value: function chartOptionScopes() {\n      var options = this.options,\n          type = this.type;\n      return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n        type: type\n      }, defaults, descriptors];\n    }\n  }, {\n    key: \"resolveNamedOptions\",\n    value: function resolveNamedOptions(scopes, names, context) {\n      var prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n      var result = {\n        $shared: true\n      };\n\n      var _getResolver = getResolver(this._resolverCache, scopes, prefixes),\n          resolver = _getResolver.resolver,\n          subPrefixes = _getResolver.subPrefixes;\n\n      var options = resolver;\n\n      if (needContext(resolver, names)) {\n        result.$shared = false;\n        context = isFunction(context) ? context() : context;\n        var subResolver = this.createResolver(scopes, context, subPrefixes);\n        options = _attachContext(resolver, context, subResolver);\n      }\n\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = names[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var prop = _step5.value;\n          result[prop] = options[prop];\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"createResolver\",\n    value: function createResolver(scopes, context) {\n      var prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n      var descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n\n      var _getResolver2 = getResolver(this._resolverCache, scopes, prefixes),\n          resolver = _getResolver2.resolver;\n\n      return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this._config.type;\n    },\n    set: function set(type) {\n      this._config.type = type;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._config.data;\n    },\n    set: function set(data) {\n      this._config.data = initData(data);\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._config.options;\n    },\n    set: function set(options) {\n      this._config.options = options;\n    }\n  }, {\n    key: \"plugins\",\n    get: function get() {\n      return this._config.plugins;\n    }\n  }]);\n\n  return Config;\n}();\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  var cache = resolverCache.get(scopes);\n\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n\n  var cacheKey = prefixes.join();\n  var cached = cache.get(cacheKey);\n\n  if (!cached) {\n    var resolver = _createResolver(scopes, prefixes);\n\n    cached = {\n      resolver: resolver,\n      subPrefixes: prefixes.filter(function (p) {\n        return !p.toLowerCase().includes('hover');\n      })\n    };\n    cache.set(cacheKey, cached);\n  }\n\n  return cached;\n}\n\nfunction needContext(proxy, names) {\n  var _descriptors2 = _descriptors(proxy),\n      isScriptable = _descriptors2.isScriptable,\n      isIndexable = _descriptors2.isIndexable;\n\n  var _iteratorNormalCompletion6 = true;\n  var _didIteratorError6 = false;\n  var _iteratorError6 = undefined;\n\n  try {\n    for (var _iterator6 = names[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n      var prop = _step6.value;\n\n      if (isScriptable(prop) && isFunction(proxy[prop]) || isIndexable(prop) && isArray(proxy[prop])) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _didIteratorError6 = true;\n    _iteratorError6 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n        _iterator6.return();\n      }\n    } finally {\n      if (_didIteratorError6) {\n        throw _iteratorError6;\n      }\n    }\n  }\n\n  return false;\n}\n\nvar version = \"3.3.2\";\nvar KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\n\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\n\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n\n  return item;\n}\n\nvar instances = {};\n\nvar getChart = function getChart(key) {\n  var canvas = getCanvas(key);\n  return Object.values(instances).filter(function (c) {\n    return c.canvas === canvas;\n  }).pop();\n};\n\nvar Chart =\n/*#__PURE__*/\nfunction () {\n  function Chart(item, config) {\n    var _this5 = this;\n\n    _classCallCheck(this, Chart);\n\n    var me = this;\n    this.config = config = new Config(config);\n    var initialCanvas = getCanvas(item);\n    var existingChart = getChart(initialCanvas);\n\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas can be reused.');\n    }\n\n    var options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    var context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    var canvas = context && context.canvas;\n    var height = canvas && canvas.height;\n    var width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(function () {\n      return _this5.update('resize');\n    }, options.resizeDelay || 0);\n    instances[me.id] = me;\n\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n\n    me._initialize();\n\n    if (me.attached) {\n      me.update();\n    }\n  }\n\n  _createClass(Chart, [{\n    key: \"_initialize\",\n    value: function _initialize() {\n      var me = this;\n      me.notifyPlugins('beforeInit');\n\n      if (me.options.responsive) {\n        me.resize();\n      } else {\n        retinaScale(me, me.options.devicePixelRatio);\n      }\n\n      me.bindEvents();\n      me.notifyPlugins('afterInit');\n      return me;\n    }\n  }, {\n    key: \"_initializePlatform\",\n    value: function _initializePlatform(canvas, config) {\n      if (config.platform) {\n        return new config.platform();\n      } else if (!isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return new BasicPlatform();\n      }\n\n      return new DomPlatform();\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      clearCanvas(this.canvas, this.ctx);\n      return this;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      animator.stop(this);\n      return this;\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {\n      if (!animator.running(this)) {\n        this._resize(width, height);\n      } else {\n        this._resizeBeforeDraw = {\n          width: width,\n          height: height\n        };\n      }\n    }\n  }, {\n    key: \"_resize\",\n    value: function _resize(width, height) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n      var newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n      var newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n      me.width = newSize.width;\n      me.height = newSize.height;\n      me._aspectRatio = me.aspectRatio;\n\n      if (!retinaScale(me, newRatio, true)) {\n        return;\n      }\n\n      me.notifyPlugins('resize', {\n        size: newSize\n      });\n      callback(options.onResize, [me, newSize], me);\n\n      if (me.attached) {\n        if (me._doResize()) {\n          me.render();\n        }\n      }\n    }\n  }, {\n    key: \"ensureScalesHaveIDs\",\n    value: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      each(scalesOptions, function (axisOptions, axisID) {\n        axisOptions.id = axisID;\n      });\n    }\n  }, {\n    key: \"buildOrUpdateScales\",\n    value: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scaleOpts = options.scales;\n      var scales = me.scales;\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n      var items = [];\n\n      if (scaleOpts) {\n        items = items.concat(Object.keys(scaleOpts).map(function (id) {\n          var scaleOptions = scaleOpts[id];\n          var axis = determineAxis(id, scaleOptions);\n          var isRadial = axis === 'r';\n          var isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        }));\n      }\n\n      each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var axis = determineAxis(id, scaleOptions);\n        var scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n        if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n        } else {\n          var scaleClass = registry.getScale(scaleType);\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.init(scaleOptions, options);\n      });\n      each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      each(scales, function (scale) {\n        layouts.configure(me, scale, scale.options);\n        layouts.addBox(me, scale);\n      });\n    }\n  }, {\n    key: \"_updateMetasets\",\n    value: function _updateMetasets() {\n      var me = this;\n      var metasets = me._metasets;\n      var numData = me.data.datasets.length;\n      var numMeta = metasets.length;\n      metasets.sort(function (a, b) {\n        return a.index - b.index;\n      });\n\n      if (numMeta > numData) {\n        for (var i = numData; i < numMeta; ++i) {\n          me._destroyDatasetMeta(i);\n        }\n\n        metasets.splice(numData, numMeta - numData);\n      }\n\n      me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n  }, {\n    key: \"_removeUnreferencedMetasets\",\n    value: function _removeUnreferencedMetasets() {\n      var me = this;\n      var metasets = me._metasets,\n          datasets = me.data.datasets;\n\n      if (metasets.length > datasets.length) {\n        delete me._stacks;\n      }\n\n      metasets.forEach(function (meta, index) {\n        if (datasets.filter(function (x) {\n          return x === meta._dataset;\n        }).length === 0) {\n          me._destroyDatasetMeta(index);\n        }\n      });\n    }\n  }, {\n    key: \"buildOrUpdateControllers\",\n    value: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      var datasets = me.data.datasets;\n      var i, ilen;\n\n      me._removeUnreferencedMetasets();\n\n      for (i = 0, ilen = datasets.length; i < ilen; i++) {\n        var dataset = datasets[i];\n        var meta = me.getDatasetMeta(i);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me._destroyDatasetMeta(i);\n\n          meta = me.getDatasetMeta(i);\n        }\n\n        meta.type = type;\n        meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n        meta.order = dataset.order || 0;\n        meta.index = i;\n        meta.label = '' + dataset.label;\n        meta.visible = me.isDatasetVisible(i);\n\n        if (meta.controller) {\n          meta.controller.updateIndex(i);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = registry.getController(type);\n          var _defaults$datasets$ty = defaults.datasets[type],\n              datasetElementType = _defaults$datasets$ty.datasetElementType,\n              dataElementType = _defaults$datasets$ty.dataElementType;\n          Object.assign(ControllerClass.prototype, {\n            dataElementType: registry.getElement(dataElementType),\n            datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n          });\n          meta.controller = new ControllerClass(me, i);\n          newControllers.push(meta.controller);\n        }\n      }\n\n      me._updateMetasets();\n\n      return newControllers;\n    }\n  }, {\n    key: \"_resetElements\",\n    value: function _resetElements() {\n      var me = this;\n      each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._resetElements();\n\n      this.notifyPlugins('reset');\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var config = me.config;\n      config.update();\n      me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n      each(me.scales, function (scale) {\n        layouts.removeBox(me, scale);\n      });\n      var animsDisabled = me._animationsDisabled = !me.options.animation;\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      var existingEvents = new Set(Object.keys(me._listeners));\n      var newEvents = new Set(me.options.events);\n\n      if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n        me.unbindEvents();\n        me.bindEvents();\n      }\n\n      me._plugins.invalidate();\n\n      if (me.notifyPlugins('beforeUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      var newControllers = me.buildOrUpdateControllers();\n      me.notifyPlugins('beforeElementsUpdate');\n      var minPadding = 0;\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n        var _me$getDatasetMeta = me.getDatasetMeta(i),\n            controller = _me$getDatasetMeta.controller;\n\n        var reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n        controller.buildOrUpdateElements(reset);\n        minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n      }\n\n      me._minPadding = minPadding;\n\n      me._updateLayout(minPadding);\n\n      if (!animsDisabled) {\n        each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me._updateDatasets(mode);\n\n      me.notifyPlugins('afterUpdate', {\n        mode: mode\n      });\n\n      me._layers.sort(compare2Level('z', '_idx'));\n\n      if (me._lastEvent) {\n        me._eventHandler(me._lastEvent, true);\n      }\n\n      me.render();\n    }\n  }, {\n    key: \"_updateLayout\",\n    value: function _updateLayout(minPadding) {\n      var me = this;\n\n      if (me.notifyPlugins('beforeLayout', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      layouts.update(me, me.width, me.height, minPadding);\n      var area = me.chartArea;\n      var noArea = area.width <= 0 || area.height <= 0;\n      me._layers = [];\n      each(me.boxes, function (box) {\n        var _me$_layers;\n\n        if (noArea && box.position === 'chartArea') {\n          return;\n        }\n\n        if (box.configure) {\n          box.configure();\n        }\n\n        (_me$_layers = me._layers).push.apply(_me$_layers, _toConsumableArray(box._layers()));\n      }, me);\n\n      me._layers.forEach(function (item, index) {\n        item._idx = index;\n      });\n\n      me.notifyPlugins('afterLayout');\n    }\n  }, {\n    key: \"_updateDatasets\",\n    value: function _updateDatasets(mode) {\n      var me = this;\n      var isFunction = typeof mode === 'function';\n\n      if (me.notifyPlugins('beforeDatasetsUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me._updateDataset(i, isFunction ? mode({\n          datasetIndex: i\n        }) : mode);\n      }\n\n      me.notifyPlugins('afterDatasetsUpdate', {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"_updateDataset\",\n    value: function _updateDataset(index, mode) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        mode: mode,\n        cancelable: true\n      };\n\n      if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n        return;\n      }\n\n      meta.controller._update(mode);\n\n      args.cancelable = false;\n      me.notifyPlugins('afterDatasetUpdate', args);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var me = this;\n\n      if (me.notifyPlugins('beforeRender', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      if (animator.has(me)) {\n        if (me.attached && !animator.running(me)) {\n          animator.start(me);\n        }\n      } else {\n        me.draw();\n        onAnimationsComplete({\n          chart: me\n        });\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n      var i;\n\n      if (me._resizeBeforeDraw) {\n        var _me$_resizeBeforeDraw = me._resizeBeforeDraw,\n            width = _me$_resizeBeforeDraw.width,\n            height = _me$_resizeBeforeDraw.height;\n\n        me._resize(width, height);\n\n        me._resizeBeforeDraw = null;\n      }\n\n      me.clear();\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (me.notifyPlugins('beforeDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      var layers = me._layers;\n\n      for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n        layers[i].draw(me.chartArea);\n      }\n\n      me._drawDatasets();\n\n      for (; i < layers.length; ++i) {\n        layers[i].draw(me.chartArea);\n      }\n\n      me.notifyPlugins('afterDraw');\n    }\n  }, {\n    key: \"_getSortedDatasetMetas\",\n    value: function _getSortedDatasetMetas(filterVisible) {\n      var me = this;\n      var metasets = me._sortedMetasets;\n      var result = [];\n      var i, ilen;\n\n      for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n        var meta = metasets[i];\n\n        if (!filterVisible || meta.visible) {\n          result.push(meta);\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"getSortedVisibleDatasetMetas\",\n    value: function getSortedVisibleDatasetMetas() {\n      return this._getSortedDatasetMetas(true);\n    }\n  }, {\n    key: \"_drawDatasets\",\n    value: function _drawDatasets() {\n      var me = this;\n\n      if (me.notifyPlugins('beforeDatasetsDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      var metasets = me.getSortedVisibleDatasetMetas();\n\n      for (var i = metasets.length - 1; i >= 0; --i) {\n        me._drawDataset(metasets[i]);\n      }\n\n      me.notifyPlugins('afterDatasetsDraw');\n    }\n  }, {\n    key: \"_drawDataset\",\n    value: function _drawDataset(meta) {\n      var me = this;\n      var ctx = me.ctx;\n      var clip = meta._clip;\n      var area = me.chartArea;\n      var args = {\n        meta: meta,\n        index: meta.index,\n        cancelable: true\n      };\n\n      if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n        return;\n      }\n\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? me.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n      });\n      meta.controller.draw();\n      unclipArea(ctx);\n      args.cancelable = false;\n      me.notifyPlugins('afterDatasetDraw', args);\n    }\n  }, {\n    key: \"getElementsAtEventForMode\",\n    value: function getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n      var method = Interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options, useFinalPosition);\n      }\n\n      return [];\n    }\n  }, {\n    key: \"getDatasetMeta\",\n    value: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n      var metasets = me._metasets;\n      var meta = metasets.filter(function (x) {\n        return x && x._dataset === dataset;\n      }).pop();\n\n      if (!meta) {\n        meta = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          xAxisID: null,\n          yAxisID: null,\n          order: dataset && dataset.order || 0,\n          index: datasetIndex,\n          _dataset: dataset,\n          _parsed: [],\n          _sorted: false\n        };\n        metasets.push(meta);\n      }\n\n      return meta;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = {\n        chart: this,\n        type: 'chart'\n      });\n    }\n  }, {\n    key: \"getVisibleDatasetCount\",\n    value: function getVisibleDatasetCount() {\n      return this.getSortedVisibleDatasetMetas().length;\n    }\n  }, {\n    key: \"isDatasetVisible\",\n    value: function isDatasetVisible(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n\n      if (!dataset) {\n        return false;\n      }\n\n      var meta = this.getDatasetMeta(datasetIndex);\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n  }, {\n    key: \"setDatasetVisibility\",\n    value: function setDatasetVisibility(datasetIndex, visible) {\n      var meta = this.getDatasetMeta(datasetIndex);\n      meta.hidden = !visible;\n    }\n  }, {\n    key: \"toggleDataVisibility\",\n    value: function toggleDataVisibility(index) {\n      this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"getDataVisibility\",\n    value: function getDataVisibility(index) {\n      return !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"_updateDatasetVisibility\",\n    value: function _updateDatasetVisibility(datasetIndex, visible) {\n      var me = this;\n      var mode = visible ? 'show' : 'hide';\n      var meta = me.getDatasetMeta(datasetIndex);\n\n      var anims = meta.controller._resolveAnimations(undefined, mode);\n\n      me.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {\n        visible: visible\n      });\n      me.update(function (ctx) {\n        return ctx.datasetIndex === datasetIndex ? mode : undefined;\n      });\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(datasetIndex) {\n      this._updateDatasetVisibility(datasetIndex, false);\n    }\n  }, {\n    key: \"show\",\n    value: function show(datasetIndex) {\n      this._updateDatasetVisibility(datasetIndex, true);\n    }\n  }, {\n    key: \"_destroyDatasetMeta\",\n    value: function _destroyDatasetMeta(datasetIndex) {\n      var me = this;\n      var meta = me._metasets && me._metasets[datasetIndex];\n\n      if (meta && meta.controller) {\n        meta.controller._destroy();\n\n        delete me._metasets[datasetIndex];\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var me = this;\n      var canvas = me.canvas,\n          ctx = me.ctx;\n      var i, ilen;\n      me.stop();\n      animator.remove(me);\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n\n      me.config.clearCache();\n\n      if (canvas) {\n        me.unbindEvents();\n        clearCanvas(canvas, ctx);\n        me.platform.releaseContext(ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      me.notifyPlugins('destroy');\n      delete instances[me.id];\n    }\n  }, {\n    key: \"toBase64Image\",\n    value: function toBase64Image() {\n      var _this$canvas;\n\n      return (_this$canvas = this.canvas).toDataURL.apply(_this$canvas, arguments);\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      this.bindUserEvents();\n\n      if (this.options.responsive) {\n        this.bindResponsiveEvents();\n      } else {\n        this.attached = true;\n      }\n    }\n  }, {\n    key: \"bindUserEvents\",\n    value: function bindUserEvents() {\n      var me = this;\n      var listeners = me._listeners;\n      var platform = me.platform;\n\n      var _add = function _add(type, listener) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      };\n\n      var listener = function listener(e, x, y) {\n        e.offsetX = x;\n        e.offsetY = y;\n\n        me._eventHandler(e);\n      };\n\n      each(me.options.events, function (type) {\n        return _add(type, listener);\n      });\n    }\n  }, {\n    key: \"bindResponsiveEvents\",\n    value: function bindResponsiveEvents() {\n      var me = this;\n\n      if (!me._responsiveListeners) {\n        me._responsiveListeners = {};\n      }\n\n      var listeners = me._responsiveListeners;\n      var platform = me.platform;\n\n      var _add = function _add(type, listener) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      };\n\n      var _remove = function _remove(type, listener) {\n        if (listeners[type]) {\n          platform.removeEventListener(me, type, listener);\n          delete listeners[type];\n        }\n      };\n\n      var listener = function listener(width, height) {\n        if (me.canvas) {\n          me.resize(width, height);\n        }\n      };\n\n      var detached;\n\n      var attached = function attached() {\n        _remove('attach', attached);\n\n        me.attached = true;\n        me.resize();\n\n        _add('resize', listener);\n\n        _add('detach', detached);\n      };\n\n      detached = function detached() {\n        me.attached = false;\n\n        _remove('resize', listener);\n\n        _add('attach', attached);\n      };\n\n      if (platform.isAttached(me.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    }\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      var me = this;\n      each(me._listeners, function (listener, type) {\n        me.platform.removeEventListener(me, type, listener);\n      });\n      me._listeners = {};\n      each(me._responsiveListeners, function (listener, type) {\n        me.platform.removeEventListener(me, type, listener);\n      });\n      me._responsiveListeners = undefined;\n    }\n  }, {\n    key: \"updateHoverStyle\",\n    value: function updateHoverStyle(items, mode, enabled) {\n      var prefix = enabled ? 'set' : 'remove';\n      var meta, item, i, ilen;\n\n      if (mode === 'dataset') {\n        meta = this.getDatasetMeta(items[0].datasetIndex);\n        meta.controller['_' + prefix + 'DatasetHoverStyle']();\n      }\n\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        item = items[i];\n        var controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n\n        if (controller) {\n          controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n        }\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements) {\n      var me = this;\n      var lastActive = me._active || [];\n      var active = activeElements.map(function (_ref) {\n        var datasetIndex = _ref.datasetIndex,\n            index = _ref.index;\n        var meta = me.getDatasetMeta(datasetIndex);\n\n        if (!meta) {\n          throw new Error('No dataset found at index ' + datasetIndex);\n        }\n\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(active, lastActive);\n\n      if (changed) {\n        me._active = active;\n\n        me._updateHoverStyles(active, lastActive);\n      }\n    }\n  }, {\n    key: \"notifyPlugins\",\n    value: function notifyPlugins(hook, args, filter) {\n      return this._plugins.notify(this, hook, args, filter);\n    }\n  }, {\n    key: \"_updateHoverStyles\",\n    value: function _updateHoverStyles(active, lastActive, replay) {\n      var me = this;\n      var hoverOptions = me.options.hover;\n\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.datasetIndex === y.datasetIndex && x.index === y.index;\n          });\n        });\n      };\n\n      var deactivated = diff(lastActive, active);\n      var activated = replay ? active : diff(active, lastActive);\n\n      if (deactivated.length) {\n        me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n      }\n\n      if (activated.length && hoverOptions.mode) {\n        me.updateHoverStyle(activated, hoverOptions.mode, true);\n      }\n    }\n  }, {\n    key: \"_eventHandler\",\n    value: function _eventHandler(e, replay) {\n      var _this6 = this;\n\n      var me = this;\n      var args = {\n        event: e,\n        replay: replay,\n        cancelable: true\n      };\n\n      var eventFilter = function eventFilter(plugin) {\n        return (plugin.options.events || _this6.options.events).includes(e.type);\n      };\n\n      if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n        return;\n      }\n\n      var changed = me._handleEvent(e, replay);\n\n      args.cancelable = false;\n      me.notifyPlugins('afterEvent', args, eventFilter);\n\n      if (changed || args.changed) {\n        me.render();\n      }\n\n      return me;\n    }\n  }, {\n    key: \"_handleEvent\",\n    value: function _handleEvent(e, replay) {\n      var me = this;\n      var _me$_active = me._active,\n          lastActive = _me$_active === void 0 ? [] : _me$_active,\n          options = me.options;\n      var hoverOptions = options.hover;\n      var useFinalPosition = replay;\n      var active = [];\n      var changed = false;\n      var lastEvent = null;\n\n      if (e.type !== 'mouseout') {\n        active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n        lastEvent = e.type === 'click' ? me._lastEvent : e;\n      }\n\n      me._lastEvent = null;\n\n      if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n        callback(options.onHover, [e, active, me], me);\n\n        if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n          callback(options.onClick, [e, active, me], me);\n        }\n      }\n\n      changed = !_elementsEqual(active, lastActive);\n\n      if (changed || replay) {\n        me._active = active;\n\n        me._updateHoverStyles(active, lastActive, replay);\n      }\n\n      me._lastEvent = lastEvent;\n      return changed;\n    }\n  }, {\n    key: \"aspectRatio\",\n    get: function get() {\n      var _this$options3 = this.options,\n          aspectRatio = _this$options3.aspectRatio,\n          maintainAspectRatio = _this$options3.maintainAspectRatio,\n          width = this.width,\n          height = this.height,\n          _aspectRatio = this._aspectRatio;\n\n      if (!isNullOrUndef(aspectRatio)) {\n        return aspectRatio;\n      }\n\n      if (maintainAspectRatio && _aspectRatio) {\n        return _aspectRatio;\n      }\n\n      return height ? width / height : null;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this.config.data;\n    },\n    set: function set(data) {\n      this.config.data = data;\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._options;\n    },\n    set: function set(options) {\n      this.config.options = options;\n    }\n  }]);\n\n  return Chart;\n}();\n\nvar invalidatePlugins = function invalidatePlugins() {\n  return each(Chart.instances, function (chart) {\n    return chart._plugins.invalidate();\n  });\n};\n\nvar enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable: enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable: enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable: enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable: enumerable,\n    value: registry\n  },\n  version: {\n    enumerable: enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable: enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable: enumerable,\n    value: function value() {\n      registry.add.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable: enumerable,\n    value: function value() {\n      registry.remove.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  var startAngle = element.startAngle,\n      pixelMargin = element.pixelMargin,\n      x = element.x,\n      y = element.y,\n      outerRadius = element.outerRadius,\n      innerRadius = element.innerRadius;\n  var angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  var o = toRadiusCorners(arc.options.borderRadius);\n  var halfThickness = (outerRadius - innerRadius) / 2;\n  var innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  var computeOuterLimit = function computeOuterLimit(val) {\n    var outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\n\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\n\nfunction pathArc(ctx, element, offset, end) {\n  var x = element.x,\n      y = element.y,\n      start = element.startAngle,\n      pixelMargin = element.pixelMargin,\n      innerR = element.innerRadius;\n  var outerRadius = Math.max(element.outerRadius + offset - pixelMargin, 0);\n  var innerRadius = innerR > 0 ? innerR + offset + pixelMargin : 0;\n  var alpha = end - start;\n  var beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  var angleOffset = (alpha - beta) / 2;\n  var startAngle = start + angleOffset;\n  var endAngle = end - angleOffset;\n\n  var _parseBorderRadius$ = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle),\n      outerStart = _parseBorderRadius$.outerStart,\n      outerEnd = _parseBorderRadius$.outerEnd,\n      innerStart = _parseBorderRadius$.innerStart,\n      innerEnd = _parseBorderRadius$.innerEnd;\n\n  var outerStartAdjustedRadius = outerRadius - outerStart;\n  var outerEndAdjustedRadius = outerRadius - outerEnd;\n  var outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  var outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  var innerStartAdjustedRadius = innerRadius + innerStart;\n  var innerEndAdjustedRadius = innerRadius + innerEnd;\n  var innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  var innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n\n  if (outerEnd > 0) {\n    var pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n\n  var p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n\n  if (innerEnd > 0) {\n    var _pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n\n    ctx.arc(_pCenter.x, _pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n\n  ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n\n  if (innerStart > 0) {\n    var _pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n\n    ctx.arc(_pCenter2.x, _pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n\n  var p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n\n  if (outerStart > 0) {\n    var _pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n\n    ctx.arc(_pCenter3.x, _pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(ctx, element, offset) {\n  var fullCircles = element.fullCircles,\n      startAngle = element.startAngle,\n      circumference = element.circumference;\n  var endAngle = element.endAngle;\n\n  if (fullCircles) {\n    pathArc(ctx, element, offset, startAngle + TAU);\n\n    for (var i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n\n  pathArc(ctx, element, offset, endAngle);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawFullCircleBorders(ctx, element, inner) {\n  var x = element.x,\n      y = element.y,\n      startAngle = element.startAngle,\n      pixelMargin = element.pixelMargin,\n      fullCircles = element.fullCircles;\n  var outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  var innerRadius = element.innerRadius + pixelMargin;\n  var i;\n\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\n\nfunction drawBorder(ctx, element, offset, endAngle) {\n  var options = element.options;\n  var inner = options.borderAlign === 'inner';\n\n  if (!options.borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  pathArc(ctx, element, offset, endAngle);\n  ctx.stroke();\n}\n\nvar ArcElement =\n/*#__PURE__*/\nfunction (_Element2) {\n  _inherits(ArcElement, _Element2);\n\n  function ArcElement(cfg) {\n    var _this7;\n\n    _classCallCheck(this, ArcElement);\n\n    _this7 = _possibleConstructorReturn(this, _getPrototypeOf(ArcElement).call(this));\n    _this7.options = undefined;\n    _this7.circumference = undefined;\n    _this7.startAngle = undefined;\n    _this7.endAngle = undefined;\n    _this7.innerRadius = undefined;\n    _this7.outerRadius = undefined;\n    _this7.pixelMargin = 0;\n    _this7.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this7), cfg);\n    }\n\n    return _this7;\n  }\n\n  _createClass(ArcElement, [{\n    key: \"inRange\",\n    value: function inRange(chartX, chartY, useFinalPosition) {\n      var point = this.getProps(['x', 'y'], useFinalPosition);\n\n      var _getAngleFromPoint = getAngleFromPoint(point, {\n        x: chartX,\n        y: chartY\n      }),\n          angle = _getAngleFromPoint.angle,\n          distance = _getAngleFromPoint.distance;\n\n      var _this$getProps2 = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n          startAngle = _this$getProps2.startAngle,\n          endAngle = _this$getProps2.endAngle,\n          innerRadius = _this$getProps2.innerRadius,\n          outerRadius = _this$getProps2.outerRadius,\n          circumference = _this$getProps2.circumference;\n\n      var betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n\n      var withinRadius = distance >= innerRadius && distance <= outerRadius;\n      return betweenAngles && withinRadius;\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps3 = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n          x = _this$getProps3.x,\n          y = _this$getProps3.y,\n          startAngle = _this$getProps3.startAngle,\n          endAngle = _this$getProps3.endAngle,\n          innerRadius = _this$getProps3.innerRadius,\n          outerRadius = _this$getProps3.outerRadius;\n\n      var halfAngle = (startAngle + endAngle) / 2;\n      var halfRadius = (innerRadius + outerRadius) / 2;\n      return {\n        x: x + Math.cos(halfAngle) * halfRadius,\n        y: y + Math.sin(halfAngle) * halfRadius\n      };\n    }\n  }, {\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      return this.getCenterPoint(useFinalPosition);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var me = this;\n      var options = me.options,\n          circumference = me.circumference;\n      var offset = (options.offset || 0) / 2;\n      me.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n      me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n      if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n        return;\n      }\n\n      ctx.save();\n      var radiusOffset = 0;\n\n      if (offset) {\n        radiusOffset = offset / 2;\n        var halfAngle = (me.startAngle + me.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n\n        if (me.circumference >= PI) {\n          radiusOffset = offset;\n        }\n      }\n\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      var endAngle = drawArc(ctx, me, radiusOffset);\n      drawBorder(ctx, me, radiusOffset, endAngle);\n      ctx.restore();\n    }\n  }]);\n\n  return ArcElement;\n}(Element);\n\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  angle: undefined\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options) {\n  var style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment) {\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var count = points.length;\n  var _params$start = params.start,\n      paramsStart = _params$start === void 0 ? 0 : _params$start,\n      _params$end = params.end,\n      paramsEnd = _params$end === void 0 ? count - 1 : _params$end;\n  var segmentStart = segment.start,\n      segmentEnd = segment.end;\n  var start = Math.max(paramsStart, segmentStart);\n  var end = Math.min(paramsEnd, segmentEnd);\n  var outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count: count,\n    start: start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\nfunction pathSegment(ctx, line, segment, params) {\n  var points = line.points,\n      options = line.options;\n\n  var _pathVars = pathVars(points, segment, params),\n      count = _pathVars.count,\n      start = _pathVars.start,\n      loop = _pathVars.loop,\n      ilen = _pathVars.ilen;\n\n  var lineMethod = getLineMethod(options);\n\n  var _ref2 = params || {},\n      _ref2$move = _ref2.move,\n      move = _ref2$move === void 0 ? true : _ref2$move,\n      reverse = _ref2.reverse;\n\n  var i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\nfunction fastPathSegment(ctx, line, segment, params) {\n  var points = line.points;\n\n  var _pathVars2 = pathVars(points, segment, params),\n      count = _pathVars2.count,\n      start = _pathVars2.start,\n      ilen = _pathVars2.ilen;\n\n  var _ref3 = params || {},\n      _ref3$move = _ref3.move,\n      move = _ref3$move === void 0 ? true : _ref3$move,\n      reverse = _ref3.reverse;\n\n  var avgX = 0;\n  var countX = 0;\n  var i, point, prevX, minY, maxY, lastY;\n\n  var pointIndex = function pointIndex(index) {\n    return (start + (reverse ? ilen - index : index)) % count;\n  };\n\n  var drawX = function drawX() {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      continue;\n    }\n\n    var x = point.x;\n    var y = point.y;\n    var truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n\n    lastY = y;\n  }\n\n  drawX();\n}\n\nfunction _getSegmentMethod(line) {\n  var opts = line.options;\n  var borderDash = opts.borderDash && opts.borderDash.length;\n  var useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  var path = line._path;\n\n  if (!path) {\n    path = line._path = new Path2D();\n\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  var segments = line.segments,\n      options = line.options;\n\n  var segmentMethod = _getSegmentMethod(line);\n\n  var _iteratorNormalCompletion7 = true;\n  var _didIteratorError7 = false;\n  var _iteratorError7 = undefined;\n\n  try {\n    for (var _iterator7 = segments[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n      var segment = _step7.value;\n      setStyle(ctx, options, segment.style);\n      ctx.beginPath();\n\n      if (segmentMethod(ctx, line, segment, {\n        start: start,\n        end: start + count - 1\n      })) {\n        ctx.closePath();\n      }\n\n      ctx.stroke();\n    }\n  } catch (err) {\n    _didIteratorError7 = true;\n    _iteratorError7 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n        _iterator7.return();\n      }\n    } finally {\n      if (_didIteratorError7) {\n        throw _iteratorError7;\n      }\n    }\n  }\n}\n\nvar usePath2D = typeof Path2D === 'function';\n\nfunction _draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nvar LineElement =\n/*#__PURE__*/\nfunction (_Element3) {\n  _inherits(LineElement, _Element3);\n\n  function LineElement(cfg) {\n    var _this8;\n\n    _classCallCheck(this, LineElement);\n\n    _this8 = _possibleConstructorReturn(this, _getPrototypeOf(LineElement).call(this));\n    _this8.animated = true;\n    _this8.options = undefined;\n    _this8._loop = undefined;\n    _this8._fullLoop = undefined;\n    _this8._path = undefined;\n    _this8._points = undefined;\n    _this8._segments = undefined;\n    _this8._decimated = false;\n    _this8._pointsUpdated = false;\n\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this8), cfg);\n    }\n\n    return _this8;\n  }\n\n  _createClass(LineElement, [{\n    key: \"updateControlPoints\",\n    value: function updateControlPoints(chartArea, indexAxis) {\n      var me = this;\n      var options = me.options;\n\n      if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n        var loop = options.spanGaps ? me._loop : me._fullLoop;\n\n        _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n\n        me._pointsUpdated = true;\n      }\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      var segments = this.segments;\n      var points = this.points;\n      return segments.length && points[segments[0].start];\n    }\n  }, {\n    key: \"last\",\n    value: function last() {\n      var segments = this.segments;\n      var points = this.points;\n      var count = segments.length;\n      return count && points[segments[count - 1].end];\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point, property) {\n      var me = this;\n      var options = me.options;\n      var value = point[property];\n      var points = me.points;\n\n      var segments = _boundSegments(me, {\n        property: property,\n        start: value,\n        end: value\n      });\n\n      if (!segments.length) {\n        return;\n      }\n\n      var result = [];\n\n      var _interpolate = _getInterpolationMethod(options);\n\n      var i, ilen;\n\n      for (i = 0, ilen = segments.length; i < ilen; ++i) {\n        var _segments$i = segments[i],\n            start = _segments$i.start,\n            end = _segments$i.end;\n        var p1 = points[start];\n        var p2 = points[end];\n\n        if (p1 === p2) {\n          result.push(p1);\n          continue;\n        }\n\n        var t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n\n        var interpolated = _interpolate(p1, p2, t, options.stepped);\n\n        interpolated[property] = point[property];\n        result.push(interpolated);\n      }\n\n      return result.length === 1 ? result[0] : result;\n    }\n  }, {\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, segment, params) {\n      var segmentMethod = _getSegmentMethod(this);\n\n      return segmentMethod(ctx, this, segment, params);\n    }\n  }, {\n    key: \"path\",\n    value: function path(ctx, start, count) {\n      var me = this;\n      var segments = me.segments;\n\n      var segmentMethod = _getSegmentMethod(me);\n\n      var loop = me._loop;\n      start = start || 0;\n      count = count || me.points.length - start;\n      var _iteratorNormalCompletion8 = true;\n      var _didIteratorError8 = false;\n      var _iteratorError8 = undefined;\n\n      try {\n        for (var _iterator8 = segments[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n          var segment = _step8.value;\n          loop &= segmentMethod(ctx, me, segment, {\n            start: start,\n            end: start + count - 1\n          });\n        }\n      } catch (err) {\n        _didIteratorError8 = true;\n        _iteratorError8 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n            _iterator8.return();\n          }\n        } finally {\n          if (_didIteratorError8) {\n            throw _iteratorError8;\n          }\n        }\n      }\n\n      return !!loop;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, chartArea, start, count) {\n      var me = this;\n      var options = me.options || {};\n      var points = me.points || [];\n\n      if (!points.length || !options.borderWidth) {\n        return;\n      }\n\n      ctx.save();\n\n      _draw(ctx, me, start, count);\n\n      ctx.restore();\n\n      if (me.animated) {\n        me._pointsUpdated = false;\n        me._path = undefined;\n      }\n    }\n  }, {\n    key: \"points\",\n    set: function set(points) {\n      var me = this;\n      me._points = points;\n      delete me._segments;\n      delete me._path;\n      me._pointsUpdated = false;\n    },\n    get: function get() {\n      return this._points;\n    }\n  }, {\n    key: \"segments\",\n    get: function get() {\n      return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n  }]);\n\n  return LineElement;\n}(Element);\n\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'fill';\n  }\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  var options = el.options;\n\n  var _el$getProps = el.getProps([axis], useFinalPosition),\n      value = _el$getProps[axis];\n\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\n\nvar PointElement =\n/*#__PURE__*/\nfunction (_Element4) {\n  _inherits(PointElement, _Element4);\n\n  function PointElement(cfg) {\n    var _this9;\n\n    _classCallCheck(this, PointElement);\n\n    _this9 = _possibleConstructorReturn(this, _getPrototypeOf(PointElement).call(this));\n    _this9.options = undefined;\n    _this9.parsed = undefined;\n    _this9.skip = undefined;\n    _this9.stop = undefined;\n\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this9), cfg);\n    }\n\n    return _this9;\n  }\n\n  _createClass(PointElement, [{\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      var options = this.options;\n\n      var _this$getProps4 = this.getProps(['x', 'y'], useFinalPosition),\n          x = _this$getProps4.x,\n          y = _this$getProps4.y;\n\n      return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps5 = this.getProps(['x', 'y'], useFinalPosition),\n          x = _this$getProps5.x,\n          y = _this$getProps5.y;\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"size\",\n    value: function size(options) {\n      options = options || this.options || {};\n      var radius = options.radius || 0;\n      radius = Math.max(radius, radius && options.hoverRadius || 0);\n      var borderWidth = radius && options.borderWidth || 0;\n      return (radius + borderWidth) * 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var me = this;\n      var options = me.options;\n\n      if (me.skip || options.radius < 0.1) {\n        return;\n      }\n\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.fillStyle = options.backgroundColor;\n      drawPoint(ctx, options, me.x, me.y);\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange() {\n      var options = this.options || {};\n      return options.radius + options.hitRadius;\n    }\n  }]);\n\n  return PointElement;\n}(Element);\n\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  var _bar$getProps = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition),\n      x = _bar$getProps.x,\n      y = _bar$getProps.y,\n      base = _bar$getProps.base,\n      width = _bar$getProps.width,\n      height = _bar$getProps.height;\n\n  var left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom\n  };\n}\n\nfunction parseBorderSkipped(bar) {\n  var edge = bar.options.borderSkipped;\n  var res = {};\n\n  if (!edge) {\n    return res;\n  }\n\n  edge = bar.horizontal ? parseEdge(edge, 'left', 'right', bar.base > bar.x) : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  var value = bar.options.borderWidth;\n  var skip = parseBorderSkipped(bar);\n  var o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  var _bar$getProps2 = bar.getProps(['enableBorderRadius']),\n      enableBorderRadius = _bar$getProps2.enableBorderRadius;\n\n  var value = bar.options.borderRadius;\n  var o = toTRBLCorners(value);\n  var maxR = Math.min(maxW, maxH);\n  var skip = parseBorderSkipped(bar);\n  var enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  var bounds = getBarBounds(bar);\n  var width = bounds.right - bounds.left;\n  var height = bounds.bottom - bounds.top;\n  var border = parseBorderWidth(bar, width / 2, height / 2);\n  var radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius: radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\n\nfunction _inRange(bar, x, y, useFinalPosition) {\n  var skipX = x === null;\n  var skipY = y === null;\n  var skipBoth = skipX && skipY;\n  var bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nvar BarElement =\n/*#__PURE__*/\nfunction (_Element5) {\n  _inherits(BarElement, _Element5);\n\n  function BarElement(cfg) {\n    var _this10;\n\n    _classCallCheck(this, BarElement);\n\n    _this10 = _possibleConstructorReturn(this, _getPrototypeOf(BarElement).call(this));\n    _this10.options = undefined;\n    _this10.horizontal = undefined;\n    _this10.base = undefined;\n    _this10.width = undefined;\n    _this10.height = undefined;\n\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this10), cfg);\n    }\n\n    return _this10;\n  }\n\n  _createClass(BarElement, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options;\n\n      var _boundingRects = boundingRects(this),\n          inner = _boundingRects.inner,\n          outer = _boundingRects.outer;\n\n      var addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n      ctx.save();\n\n      if (outer.w !== inner.w || outer.h !== inner.h) {\n        ctx.beginPath();\n        addRectPath(ctx, outer);\n        ctx.clip();\n        addRectPath(ctx, inner);\n        ctx.fillStyle = options.borderColor;\n        ctx.fill('evenodd');\n      }\n\n      ctx.beginPath();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }, {\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      return _inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return _inRange(this, mouseX, null, useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return _inRange(this, null, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps6 = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition),\n          x = _this$getProps6.x,\n          y = _this$getProps6.y,\n          base = _this$getProps6.base,\n          horizontal = _this$getProps6.horizontal;\n\n      return {\n        x: horizontal ? (x + base) / 2 : x,\n        y: horizontal ? y : (y + base) / 2\n      };\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange(axis) {\n      return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n  }]);\n\n  return BarElement;\n}(Element);\n\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements =\n/*#__PURE__*/\nObject.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  var samples = options.samples || availableWidth;\n\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  var decimated = [];\n  var bucketWidth = (count - 2) / (samples - 2);\n  var sampledIndex = 0;\n  var endIndex = start + count - 1;\n  var a = start;\n  var i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    var avgX = 0;\n    var avgY = 0;\n    var j = void 0;\n    var avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    var avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    var avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    var rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    var rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    var _data$a = data[a],\n        pointAx = _data$a.x,\n        pointAy = _data$a.y;\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  var avgX = 0;\n  var countX = 0;\n  var i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  var decimated = [];\n  var endIndex = start + count - 1;\n  var xMin = data[start].x;\n  var xMax = data[endIndex].x;\n  var dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    var truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      var lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        var intermediateIndex1 = Math.min(minIndex, maxIndex);\n        var intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push(_objectSpread({}, data[intermediateIndex1], {\n            x: avgX\n          }));\n        }\n\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push(_objectSpread({}, data[intermediateIndex2], {\n            x: avgX\n          }));\n        }\n      }\n\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    var data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(function (dataset) {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  var pointCount = points.length;\n  var start = 0;\n  var count;\n  var iScale = meta.iScale;\n\n  var _iScale$getUserBounds2 = iScale.getUserBounds(),\n      min = _iScale$getUserBounds2.min,\n      max = _iScale$getUserBounds2.max,\n      minDefined = _iScale$getUserBounds2.minDefined,\n      maxDefined = _iScale$getUserBounds2.maxDefined;\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {\n    start: start,\n    count: count\n  };\n}\n\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: function beforeElementsUpdate(chart, args, options) {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    var availableWidth = chart.width;\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      var _data = dataset._data,\n          indexAxis = dataset.indexAxis;\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n\n      if (meta.type !== 'line') {\n        return;\n      }\n\n      var xAxis = chart.scales[meta.xAxisID];\n\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n\n      if (chart.options.parsing) {\n        return;\n      }\n\n      var _getStartAndCountOfVi2 = getStartAndCountOfVisiblePointsSimplified(meta, data),\n          start = _getStartAndCountOfVi2.start,\n          count = _getStartAndCountOfVi2.count;\n\n      if (count <= 4 * availableWidth) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function get() {\n            return this._decimated;\n          },\n          set: function set(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      var decimated;\n\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n\n        default:\n          throw new Error(\"Unsupported decimation algorithm '\".concat(options.algorithm, \"'\"));\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n  destroy: function destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  var meta = chart.getDatasetMeta(index);\n  var visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction parseFillOption(line) {\n  var options = line.options;\n  var fillOption = options.fill;\n  var fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  return fill;\n}\n\nfunction decodeFill(line, index, count) {\n  var fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  var target = parseFloat(fill);\n\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n\n    return target;\n  }\n\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\n\nfunction computeLinearBoundary(source) {\n  var _source$scale = source.scale,\n      scale = _source$scale === void 0 ? {} : _source$scale,\n      fill = source.fill;\n  var target = null;\n  var horizontal;\n\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n\n  return null;\n}\n\nvar simpleArc =\n/*#__PURE__*/\nfunction () {\n  function simpleArc(opts) {\n    _classCallCheck(this, simpleArc);\n\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  _createClass(simpleArc, [{\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, bounds, opts) {\n      var x = this.x,\n          y = this.y,\n          radius = this.radius;\n      bounds = bounds || {\n        start: 0,\n        end: TAU\n      };\n      ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n      return !opts.bounds;\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point) {\n      var x = this.x,\n          y = this.y,\n          radius = this.radius;\n      var angle = point.angle;\n      return {\n        x: x + Math.cos(angle) * radius,\n        y: y + Math.sin(angle) * radius,\n        angle: angle\n      };\n    }\n  }]);\n\n  return simpleArc;\n}();\n\nfunction computeCircularBoundary(source) {\n  var scale = source.scale,\n      fill = source.fill;\n  var options = scale.options;\n  var length = scale.getLabels().length;\n  var target = [];\n  var start = options.reverse ? scale.max : scale.min;\n  var end = options.reverse ? scale.min : scale.max;\n  var i, center, value;\n\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n\n  return target;\n}\n\nfunction computeBoundary(source) {\n  var scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n\n  return computeLinearBoundary(source);\n}\n\nfunction pointsFromSegments(boundary, line) {\n  var _ref4 = boundary || {},\n      _ref4$x = _ref4.x,\n      x = _ref4$x === void 0 ? null : _ref4$x,\n      _ref4$y = _ref4.y,\n      y = _ref4$y === void 0 ? null : _ref4$y;\n\n  var linePoints = line.points;\n  var points = [];\n  line.segments.forEach(function (segment) {\n    var first = linePoints[segment.start];\n    var last = linePoints[segment.end];\n\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y: y\n      });\n      points.push({\n        x: last.x,\n        y: y\n      });\n    } else if (x !== null) {\n      points.push({\n        x: x,\n        y: first.y\n      });\n      points.push({\n        x: x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\n\nfunction buildStackLine(source) {\n  var chart = source.chart,\n      scale = source.scale,\n      index = source.index,\n      line = source.line;\n  var points = [];\n  var segments = line.segments;\n  var sourcePoints = line.points;\n  var linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n\n    for (var j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n\n  return new LineElement({\n    points: points,\n    options: {}\n  });\n}\n\nvar isLineAndNotInHideAnimation = function isLineAndNotInHideAnimation(meta) {\n  return meta.type === 'line' && !meta.hidden;\n};\n\nfunction getLinesBelow(chart, index) {\n  var below = [];\n  var metas = chart.getSortedVisibleDatasetMetas();\n\n  for (var i = 0; i < metas.length; i++) {\n    var meta = metas[i];\n\n    if (meta.index === index) {\n      break;\n    }\n\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n\n  return below;\n}\n\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  var postponed = [];\n\n  for (var j = 0; j < linesBelow.length; j++) {\n    var line = linesBelow[j];\n\n    var _findPoint = findPoint(line, sourcePoint, 'x'),\n        first = _findPoint.first,\n        last = _findPoint.last,\n        point = _findPoint.point;\n\n    if (!point || first && last) {\n      continue;\n    }\n\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n\n      if (!last) {\n        break;\n      }\n    }\n  }\n\n  points.push.apply(points, postponed);\n}\n\nfunction findPoint(line, sourcePoint, property) {\n  var point = line.interpolate(sourcePoint, property);\n\n  if (!point) {\n    return {};\n  }\n\n  var pointValue = point[property];\n  var segments = line.segments;\n  var linePoints = line.points;\n  var first = false;\n  var last = false;\n\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    var firstValue = linePoints[segment.start][property];\n    var lastValue = linePoints[segment.end][property];\n\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n\n  return {\n    first: first,\n    last: last,\n    point: point\n  };\n}\n\nfunction getTarget(source) {\n  var chart = source.chart,\n      fill = source.fill,\n      line = source.line;\n\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n\n  var boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return createBoundaryLine(boundary, line);\n}\n\nfunction createBoundaryLine(boundary, line) {\n  var points = [];\n  var _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points: points,\n    options: {\n      tension: 0\n    },\n    _loop: _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n\n  var start = first[property];\n  var end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n\n  return {\n    property: property,\n    start: start,\n    end: end\n  };\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _segments(line, target, property) {\n  var segments = line.segments;\n  var points = line.points;\n  var tpoints = target.points;\n  var parts = [];\n  var _iteratorNormalCompletion9 = true;\n  var _didIteratorError9 = false;\n  var _iteratorError9 = undefined;\n\n  try {\n    for (var _iterator9 = segments[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n      var segment = _step9.value;\n      var bounds = getBounds(property, points[segment.start], points[segment.end], segment.loop);\n\n      if (!target.segments) {\n        parts.push({\n          source: segment,\n          target: bounds,\n          start: points[segment.start],\n          end: points[segment.end]\n        });\n        continue;\n      }\n\n      var targetSegments = _boundSegments(target, bounds);\n\n      var _iteratorNormalCompletion10 = true;\n      var _didIteratorError10 = false;\n      var _iteratorError10 = undefined;\n\n      try {\n        for (var _iterator10 = targetSegments[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n          var tgt = _step10.value;\n          var subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n\n          var fillSources = _boundSegment(segment, points, subBounds);\n\n          var _iteratorNormalCompletion11 = true;\n          var _didIteratorError11 = false;\n          var _iteratorError11 = undefined;\n\n          try {\n            for (var _iterator11 = fillSources[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n              var fillSource = _step11.value;\n              parts.push({\n                source: fillSource,\n                target: tgt,\n                start: _defineProperty({}, property, _getEdge(bounds, subBounds, 'start', Math.max)),\n                end: _defineProperty({}, property, _getEdge(bounds, subBounds, 'end', Math.min))\n              });\n            }\n          } catch (err) {\n            _didIteratorError11 = true;\n            _iteratorError11 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion11 && _iterator11.return != null) {\n                _iterator11.return();\n              }\n            } finally {\n              if (_didIteratorError11) {\n                throw _iteratorError11;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError10 = true;\n        _iteratorError10 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion10 && _iterator10.return != null) {\n            _iterator10.return();\n          }\n        } finally {\n          if (_didIteratorError10) {\n            throw _iteratorError10;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError9 = true;\n    _iteratorError9 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n        _iterator9.return();\n      }\n    } finally {\n      if (_didIteratorError9) {\n        throw _iteratorError9;\n      }\n    }\n  }\n\n  return parts;\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  var _scale$chart$chartAre = scale.chart.chartArea,\n      top = _scale$chart$chartAre.top,\n      bottom = _scale$chart$chartAre.bottom;\n\n  var _ref5 = bounds || {},\n      property = _ref5.property,\n      start = _ref5.start,\n      end = _ref5.end;\n\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  var interpolatedPoint = target.interpolate(point, property);\n\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nfunction _fill(ctx, cfg) {\n  var line = cfg.line,\n      target = cfg.target,\n      property = cfg.property,\n      color = cfg.color,\n      scale = cfg.scale;\n\n  var segments = _segments(line, target, property);\n\n  var _iteratorNormalCompletion12 = true;\n  var _didIteratorError12 = false;\n  var _iteratorError12 = undefined;\n\n  try {\n    for (var _iterator12 = segments[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n      var _step12$value = _step12.value,\n          src = _step12$value.source,\n          tgt = _step12$value.target,\n          start = _step12$value.start,\n          end = _step12$value.end;\n      var _src$style = src.style;\n      _src$style = _src$style === void 0 ? {} : _src$style;\n      var _src$style$background = _src$style.backgroundColor,\n          backgroundColor = _src$style$background === void 0 ? color : _src$style$background;\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      clipBounds(ctx, scale, getBounds(property, start, end));\n      ctx.beginPath();\n      var lineLoop = !!line.pathSegment(ctx, src);\n\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      var targetLoop = !!target.pathSegment(ctx, tgt, {\n        move: lineLoop,\n        reverse: true\n      });\n      var loop = lineLoop && targetLoop;\n\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n\n      ctx.closePath();\n      ctx.fill(loop ? 'evenodd' : 'nonzero');\n      ctx.restore();\n    }\n  } catch (err) {\n    _didIteratorError12 = true;\n    _iteratorError12 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion12 && _iterator12.return != null) {\n        _iterator12.return();\n      }\n    } finally {\n      if (_didIteratorError12) {\n        throw _iteratorError12;\n      }\n    }\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  var line = cfg.line,\n      target = cfg.target,\n      above = cfg.above,\n      below = cfg.below,\n      area = cfg.area,\n      scale = cfg.scale;\n  var property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n\n    _fill(ctx, {\n      line: line,\n      target: target,\n      color: above,\n      scale: scale,\n      property: property\n    });\n\n    ctx.restore();\n    ctx.save();\n\n    _clip(ctx, target, area.bottom);\n  }\n\n  _fill(ctx, {\n    line: line,\n    target: target,\n    color: below,\n    scale: scale,\n    property: property\n  });\n\n  ctx.restore();\n}\n\nfunction drawfill(ctx, source, area) {\n  var target = getTarget(source);\n  var line = source.line,\n      scale = source.scale,\n      axis = source.axis;\n  var lineOpts = line.options;\n  var fillOption = lineOpts.fill;\n  var color = lineOpts.backgroundColor;\n\n  var _ref6 = fillOption || {},\n      _ref6$above = _ref6.above,\n      above = _ref6$above === void 0 ? color : _ref6$above,\n      _ref6$below = _ref6.below,\n      below = _ref6$below === void 0 ? color : _ref6$below;\n\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line: line,\n      target: target,\n      above: above,\n      below: below,\n      area: area,\n      scale: scale,\n      axis: axis\n    });\n    unclipArea(ctx);\n  }\n}\n\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, _args, options) {\n    var count = (chart.data.datasets || []).length;\n    var sources = [];\n    var meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart: chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line: line\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw: function beforeDraw(chart, _args, options) {\n    var draw = options.drawTime === 'beforeDraw';\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    var area = chart.chartArea;\n\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw: function beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    var metasets = chart.getSortedVisibleDatasetMetas();\n\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args, options) {\n    var source = args.meta.$filler;\n\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nvar getBoxSize = function getBoxSize(labelOpts, fontSize) {\n  var _labelOpts$boxHeight = labelOpts.boxHeight,\n      boxHeight = _labelOpts$boxHeight === void 0 ? fontSize : _labelOpts$boxHeight,\n      _labelOpts$boxWidth = labelOpts.boxWidth,\n      boxWidth = _labelOpts$boxWidth === void 0 ? fontSize : _labelOpts$boxWidth;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth: boxWidth,\n    boxHeight: boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nvar itemsEqual = function itemsEqual(a, b) {\n  return a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n};\n\nvar Legend =\n/*#__PURE__*/\nfunction (_Element6) {\n  _inherits(Legend, _Element6);\n\n  function Legend(config) {\n    var _this11;\n\n    _classCallCheck(this, Legend);\n\n    _this11 = _possibleConstructorReturn(this, _getPrototypeOf(Legend).call(this));\n    _this11._added = false;\n    _this11.legendHitBoxes = [];\n    _this11._hoveredItem = null;\n    _this11.doughnutMode = false;\n    _this11.chart = config.chart;\n    _this11.options = config.options;\n    _this11.ctx = config.ctx;\n    _this11.legendItems = undefined;\n    _this11.columnSizes = undefined;\n    _this11.lineWidths = undefined;\n    _this11.maxHeight = undefined;\n    _this11.maxWidth = undefined;\n    _this11.top = undefined;\n    _this11.bottom = undefined;\n    _this11.left = undefined;\n    _this11.right = undefined;\n    _this11.height = undefined;\n    _this11.width = undefined;\n    _this11._margins = undefined;\n    _this11.position = undefined;\n    _this11.weight = undefined;\n    _this11.fullSize = undefined;\n    return _this11;\n  }\n\n  _createClass(Legend, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me._margins = margins;\n      me.setDimensions();\n      me.buildLabels();\n      me.fit();\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight;\n        me.top = 0;\n        me.bottom = me.height;\n      }\n    }\n  }, {\n    key: \"buildLabels\",\n    value: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (labelOpts.sort) {\n        legendItems = legendItems.sort(function (a, b) {\n          return labelOpts.sort(a, b, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var me = this;\n      var options = me.options,\n          ctx = me.ctx;\n\n      if (!options.display) {\n        me.width = me.height = 0;\n        return;\n      }\n\n      var labelOpts = options.labels;\n      var labelFont = toFont(labelOpts.font);\n      var fontSize = labelFont.size;\n\n      var titleHeight = me._computeTitleHeight();\n\n      var _getBoxSize = getBoxSize(labelOpts, fontSize),\n          boxWidth = _getBoxSize.boxWidth,\n          itemHeight = _getBoxSize.itemHeight;\n\n      var width, height;\n      ctx.font = labelFont.string;\n\n      if (me.isHorizontal()) {\n        width = me.maxWidth;\n        height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      } else {\n        height = me.maxHeight;\n        width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      }\n\n      me.width = Math.min(width, options.maxWidth || me.maxWidth);\n      me.height = Math.min(height, options.maxHeight || me.maxHeight);\n    }\n  }, {\n    key: \"_fitRows\",\n    value: function _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n      var me = this;\n      var ctx = me.ctx,\n          maxWidth = me.maxWidth,\n          padding = me.options.labels.padding;\n      var hitboxes = me.legendHitBoxes = [];\n      var lineWidths = me.lineWidths = [0];\n      var lineHeight = itemHeight + padding;\n      var totalHeight = titleHeight;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      var row = -1;\n      var top = -lineHeight;\n      me.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n        if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n          totalHeight += lineHeight;\n          lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n          top += lineHeight;\n          row++;\n        }\n\n        hitboxes[i] = {\n          left: 0,\n          top: top,\n          row: row,\n          width: itemWidth,\n          height: itemHeight\n        };\n        lineWidths[lineWidths.length - 1] += itemWidth + padding;\n      });\n      return totalHeight;\n    }\n  }, {\n    key: \"_fitCols\",\n    value: function _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n      var me = this;\n      var ctx = me.ctx,\n          maxHeight = me.maxHeight,\n          padding = me.options.labels.padding;\n      var hitboxes = me.legendHitBoxes = [];\n      var columnSizes = me.columnSizes = [];\n      var heightLimit = maxHeight - titleHeight;\n      var totalWidth = padding;\n      var currentColWidth = 0;\n      var currentColHeight = 0;\n      var left = 0;\n      var top = 0;\n      var col = 0;\n      me.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n        if (i > 0 && currentColHeight + fontSize + 2 * padding > heightLimit) {\n          totalWidth += currentColWidth + padding;\n          columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n          });\n          left += currentColWidth + padding;\n          col++;\n          top = 0;\n          currentColWidth = currentColHeight = 0;\n        }\n\n        currentColWidth = Math.max(currentColWidth, itemWidth);\n        currentColHeight += fontSize + padding;\n        hitboxes[i] = {\n          left: left,\n          top: top,\n          col: col,\n          width: itemWidth,\n          height: itemHeight\n        };\n        top += itemHeight + padding;\n      });\n      totalWidth += currentColWidth;\n      columnSizes.push({\n        width: currentColWidth,\n        height: currentColHeight\n      });\n      return totalWidth;\n    }\n  }, {\n    key: \"adjustHitBoxes\",\n    value: function adjustHitBoxes() {\n      var me = this;\n\n      if (!me.options.display) {\n        return;\n      }\n\n      var titleHeight = me._computeTitleHeight();\n\n      var hitboxes = me.legendHitBoxes,\n          _me$options6 = me.options,\n          align = _me$options6.align,\n          padding = _me$options6.labels.padding;\n\n      if (this.isHorizontal()) {\n        var row = 0;\n\n        var left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n\n        var _iteratorNormalCompletion13 = true;\n        var _didIteratorError13 = false;\n        var _iteratorError13 = undefined;\n\n        try {\n          for (var _iterator13 = hitboxes[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n            var hitbox = _step13.value;\n\n            if (row !== hitbox.row) {\n              row = hitbox.row;\n              left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n            }\n\n            hitbox.top += me.top + titleHeight + padding;\n            hitbox.left = left;\n            left += hitbox.width + padding;\n          }\n        } catch (err) {\n          _didIteratorError13 = true;\n          _iteratorError13 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion13 && _iterator13.return != null) {\n              _iterator13.return();\n            }\n          } finally {\n            if (_didIteratorError13) {\n              throw _iteratorError13;\n            }\n          }\n        }\n      } else {\n        var col = 0;\n\n        var top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n\n        var _iteratorNormalCompletion14 = true;\n        var _didIteratorError14 = false;\n        var _iteratorError14 = undefined;\n\n        try {\n          for (var _iterator14 = hitboxes[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {\n            var _hitbox = _step14.value;\n\n            if (_hitbox.col !== col) {\n              col = _hitbox.col;\n              top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n            }\n\n            _hitbox.top = top;\n            _hitbox.left += me.left + padding;\n            top += _hitbox.height + padding;\n          }\n        } catch (err) {\n          _didIteratorError14 = true;\n          _iteratorError14 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion14 && _iterator14.return != null) {\n              _iterator14.return();\n            }\n          } finally {\n            if (_didIteratorError14) {\n              throw _iteratorError14;\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n\n      if (me.options.display) {\n        var ctx = me.ctx;\n        clipArea(ctx, me);\n\n        me._draw();\n\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"_draw\",\n    value: function _draw() {\n      var me = this;\n      var opts = me.options,\n          columnSizes = me.columnSizes,\n          lineWidths = me.lineWidths,\n          ctx = me.ctx;\n      var align = opts.align,\n          labelOpts = opts.labels;\n      var defaultColor = defaults.color;\n      var rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n      var labelFont = toFont(labelOpts.font);\n      var fontColor = labelOpts.color,\n          padding = labelOpts.padding;\n      var fontSize = labelFont.size;\n      var halfFontSize = fontSize / 2;\n      var cursor;\n      me.drawTitle();\n      ctx.textAlign = rtlHelper.textAlign('left');\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.font = labelFont.string;\n\n      var _getBoxSize2 = getBoxSize(labelOpts, fontSize),\n          boxWidth = _getBoxSize2.boxWidth,\n          boxHeight = _getBoxSize2.boxHeight,\n          itemHeight = _getBoxSize2.itemHeight;\n\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n          return;\n        }\n\n        ctx.save();\n        var lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n        ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n        if (labelOpts.usePointStyle) {\n          var drawOptions = {\n            radius: boxWidth * Math.SQRT2 / 2,\n            pointStyle: legendItem.pointStyle,\n            rotation: legendItem.rotation,\n            borderWidth: lineWidth\n          };\n          var centerX = rtlHelper.xPlus(x, boxWidth / 2);\n          var centerY = y + halfFontSize;\n          drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n          var yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n          var xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n          var borderRadius = toTRBLCorners(legendItem.borderRadius);\n          ctx.beginPath();\n\n          if (Object.values(borderRadius).some(function (v) {\n            return v !== 0;\n          })) {\n            addRoundedRectPath(ctx, {\n              x: xBoxLeft,\n              y: yBoxTop,\n              w: boxWidth,\n              h: boxHeight,\n              radius: borderRadius\n            });\n          } else {\n            ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n          }\n\n          ctx.fill();\n\n          if (lineWidth !== 0) {\n            ctx.stroke();\n          }\n        }\n\n        ctx.restore();\n      };\n\n      var fillText = function fillText(x, y, legendItem) {\n        renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n          strikethrough: legendItem.hidden,\n          textAlign: legendItem.textAlign\n        });\n      };\n\n      var isHorizontal = me.isHorizontal();\n\n      var titleHeight = this._computeTitleHeight();\n\n      if (isHorizontal) {\n        cursor = {\n          x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n          y: me.top + padding + titleHeight,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: me.left + padding,\n          y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n          line: 0\n        };\n      }\n\n      overrideTextDirection(me.ctx, opts.textDirection);\n      var lineHeight = itemHeight + padding;\n      me.legendItems.forEach(function (legendItem, i) {\n        ctx.strokeStyle = legendItem.fontColor || fontColor;\n        ctx.fillStyle = legendItem.fontColor || fontColor;\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n        var width = boxWidth + fontSize / 2 + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n        rtlHelper.setWidth(me.width);\n\n        if (isHorizontal) {\n          if (i > 0 && x + width + padding > me.right) {\n            y = cursor.y += lineHeight;\n            cursor.line++;\n            x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n          }\n        } else if (i > 0 && y + lineHeight > me.bottom) {\n          x = cursor.x = x + columnSizes[cursor.line].width + padding;\n          cursor.line++;\n          y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n        }\n\n        var realX = rtlHelper.x(x);\n        drawLegendBox(realX, y, legendItem);\n        x = _textX(textAlign, x + boxWidth + halfFontSize, me.right);\n        fillText(rtlHelper.x(x), y, legendItem);\n\n        if (isHorizontal) {\n          cursor.x += width + padding;\n        } else {\n          cursor.y += lineHeight;\n        }\n      });\n      restoreTextDirection(me.ctx, opts.textDirection);\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var me = this;\n      var opts = me.options;\n      var titleOpts = opts.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n\n      if (!titleOpts.display) {\n        return;\n      }\n\n      var rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n      var ctx = me.ctx;\n      var position = titleOpts.position;\n      var halfFontSize = titleFont.size / 2;\n      var topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n      var y;\n      var left = me.left;\n      var maxWidth = me.width;\n\n      if (this.isHorizontal()) {\n        maxWidth = Math.max.apply(Math, _toConsumableArray(me.lineWidths));\n        y = me.top + topPaddingPlusHalfFontSize;\n        left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n      } else {\n        var maxHeight = me.columnSizes.reduce(function (acc, size) {\n          return Math.max(acc, size.height);\n        }, 0);\n        y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n      }\n\n      var x = _alignStartEnd(position, left, left + maxWidth);\n\n      ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n      ctx.textBaseline = 'middle';\n      ctx.strokeStyle = titleOpts.color;\n      ctx.fillStyle = titleOpts.color;\n      ctx.font = titleFont.string;\n      renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n  }, {\n    key: \"_computeTitleHeight\",\n    value: function _computeTitleHeight() {\n      var titleOpts = this.options.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n      return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n  }, {\n    key: \"_getLegendItemAt\",\n    value: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n\n      if (!isListened(e.type, opts)) {\n        return;\n      }\n\n      var hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (e.type === 'mousemove') {\n        var previous = me._hoveredItem;\n        var sameItem = itemsEqual(previous, hoveredItem);\n\n        if (previous && !sameItem) {\n          callback(opts.onLeave, [e, previous, me], me);\n        }\n\n        me._hoveredItem = hoveredItem;\n\n        if (hoveredItem && !sameItem) {\n          callback(opts.onHover, [e, hoveredItem, me], me);\n        }\n      } else if (hoveredItem) {\n        callback(opts.onClick, [e, hoveredItem, me], me);\n      }\n    }\n  }]);\n\n  return Legend;\n}(Element);\n\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n\n  return false;\n}\n\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start: function start(chart, _args, options) {\n    var legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate: function afterUpdate(chart) {\n    var legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick: function onClick(e, legendItem, legend) {\n      var index = legendItem.datasetIndex;\n      var ci = legend.chart;\n\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      boxWidth: 40,\n      padding: 10,\n      generateLabels: function generateLabels(chart) {\n        var datasets = chart.data.datasets;\n        var _chart$legend$options = chart.legend.options.labels,\n            usePointStyle = _chart$legend$options.usePointStyle,\n            pointStyle = _chart$legend$options.pointStyle,\n            textAlign = _chart$legend$options.textAlign,\n            color = _chart$legend$options.color;\n        return chart._getSortedDatasetMetas().map(function (meta) {\n          var style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          var borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return !name.startsWith('on');\n    },\n    labels: {\n      _scriptable: function _scriptable(name) {\n        return !['generateLabels', 'filter', 'sort'].includes(name);\n      }\n    }\n  }\n};\n\nvar Title =\n/*#__PURE__*/\nfunction (_Element7) {\n  _inherits(Title, _Element7);\n\n  function Title(config) {\n    var _this12;\n\n    _classCallCheck(this, Title);\n\n    _this12 = _possibleConstructorReturn(this, _getPrototypeOf(Title).call(this));\n    _this12.chart = config.chart;\n    _this12.options = config.options;\n    _this12.ctx = config.ctx;\n    _this12._padding = undefined;\n    _this12.top = undefined;\n    _this12.bottom = undefined;\n    _this12.left = undefined;\n    _this12.right = undefined;\n    _this12.width = undefined;\n    _this12.height = undefined;\n    _this12.position = undefined;\n    _this12.weight = undefined;\n    _this12.fullSize = undefined;\n    return _this12;\n  }\n\n  _createClass(Title, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight) {\n      var me = this;\n      var opts = me.options;\n      me.left = 0;\n      me.top = 0;\n\n      if (!opts.display) {\n        me.width = me.height = me.right = me.bottom = 0;\n        return;\n      }\n\n      me.width = me.right = maxWidth;\n      me.height = me.bottom = maxHeight;\n      var lineCount = isArray(opts.text) ? opts.text.length : 1;\n      me._padding = toPadding(opts.padding);\n\n      var textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n\n      if (me.isHorizontal()) {\n        me.height = textSize;\n      } else {\n        me.width = textSize;\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    }\n  }, {\n    key: \"_drawArgs\",\n    value: function _drawArgs(offset) {\n      var top = this.top,\n          left = this.left,\n          bottom = this.bottom,\n          right = this.right,\n          options = this.options;\n      var align = options.align;\n      var rotation = 0;\n      var maxWidth, titleX, titleY;\n\n      if (this.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        if (options.position === 'left') {\n          titleX = left + offset;\n          titleY = _alignStartEnd(align, bottom, top);\n          rotation = PI * -0.5;\n        } else {\n          titleX = right - offset;\n          titleY = _alignStartEnd(align, top, bottom);\n          rotation = PI * 0.5;\n        }\n\n        maxWidth = bottom - top;\n      }\n\n      return {\n        titleX: titleX,\n        titleY: titleY,\n        maxWidth: maxWidth,\n        rotation: rotation\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (!opts.display) {\n        return;\n      }\n\n      var fontOpts = toFont(opts.font);\n      var lineHeight = fontOpts.lineHeight;\n      var offset = lineHeight / 2 + me._padding.top;\n\n      var _me$_drawArgs = me._drawArgs(offset),\n          titleX = _me$_drawArgs.titleX,\n          titleY = _me$_drawArgs.titleY,\n          maxWidth = _me$_drawArgs.maxWidth,\n          rotation = _me$_drawArgs.rotation;\n\n      renderText(ctx, opts.text, 0, 0, fontOpts, {\n        color: opts.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: _toLeftRightCenter(opts.align),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }]);\n\n  return Title;\n}(Element);\n\nfunction createTitle(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start: function start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop: function stop(chart) {\n    var titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar positioners = {\n  average: function average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    var i, len;\n    var x = 0;\n    var y = 0;\n    var count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest: function nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    var x = eventPosition.x;\n    var y = eventPosition.y;\n    var minDistance = Number.POSITIVE_INFINITY;\n    var i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n\n      if (el && el.hasValue()) {\n        var center = el.getCenterPoint();\n\n        var _d = distanceBetweenPoints(eventPosition, center);\n\n        if (_d < minDistance) {\n          minDistance = _d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      var tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n};\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n}\n\nfunction createTooltipItem(chart, item) {\n  var element = item.element,\n      datasetIndex = item.datasetIndex,\n      index = item.index;\n  var controller = chart.getDatasetMeta(datasetIndex).controller;\n\n  var _controller$getLabelA = controller.getLabelAndValue(index),\n      label = _controller$getLabelA.label,\n      value = _controller$getLabelA.value;\n\n  return {\n    chart: chart,\n    label: label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex: datasetIndex,\n    element: element\n  };\n}\n\nfunction getTooltipSize(tooltip, options) {\n  var ctx = tooltip._chart.ctx;\n  var body = tooltip.body,\n      footer = tooltip.footer,\n      title = tooltip.title;\n  var boxWidth = options.boxWidth,\n      boxHeight = options.boxHeight;\n  var bodyFont = toFont(options.bodyFont);\n  var titleFont = toFont(options.titleFont);\n  var footerFont = toFont(options.footerFont);\n  var titleLineCount = title.length;\n  var footerLineCount = footer.length;\n  var bodyLineItemCount = body.length;\n  var padding = toPadding(options.padding);\n  var height = padding.height;\n  var width = 0;\n  var combinedBodyLength = body.reduce(function (count, bodyItem) {\n    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n  }, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n\n  if (combinedBodyLength) {\n    var bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  var widthPadding = 0;\n\n  var maxLineWidth = function maxLineWidth(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 : 0;\n  each(body, function (bodyItem) {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction determineYAlign(chart, size) {\n  var y = size.y,\n      height = size.height;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  var x = size.x,\n      width = size.width;\n  var caret = options.caretSize + options.caretPadding;\n\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  var x = size.x,\n      width = size.width;\n  var chartWidth = chart.width,\n      _chart$chartArea = chart.chartArea,\n      left = _chart$chartArea.left,\n      right = _chart$chartArea.right;\n  var xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\nfunction determineAlignment(chart, options, size) {\n  var yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign: yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  var x = size.x,\n      width = size.width;\n\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  var y = size.y,\n      height = size.height;\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n\n  return y;\n}\n\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  var caretSize = options.caretSize,\n      caretPadding = options.caretPadding,\n      cornerRadius = options.cornerRadius;\n  var xAlign = alignment.xAlign,\n      yAlign = alignment.yAlign;\n  var paddingAndSize = caretSize + caretPadding;\n  var radiusAndPadding = cornerRadius + caretPadding;\n  var x = alignX(size, xAlign);\n  var y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  var padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip: tooltip,\n    tooltipItems: tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  var override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nvar Tooltip =\n/*#__PURE__*/\nfunction (_Element8) {\n  _inherits(Tooltip, _Element8);\n\n  function Tooltip(config) {\n    var _this13;\n\n    _classCallCheck(this, Tooltip);\n\n    _this13 = _possibleConstructorReturn(this, _getPrototypeOf(Tooltip).call(this));\n    _this13.opacity = 0;\n    _this13._active = [];\n    _this13._chart = config._chart;\n    _this13._eventPosition = undefined;\n    _this13._size = undefined;\n    _this13._cachedAnimations = undefined;\n    _this13._tooltipItems = [];\n    _this13.$animations = undefined;\n    _this13.$context = undefined;\n    _this13.options = config.options;\n    _this13.dataPoints = undefined;\n    _this13.title = undefined;\n    _this13.beforeBody = undefined;\n    _this13.body = undefined;\n    _this13.afterBody = undefined;\n    _this13.footer = undefined;\n    _this13.xAlign = undefined;\n    _this13.yAlign = undefined;\n    _this13.x = undefined;\n    _this13.y = undefined;\n    _this13.height = undefined;\n    _this13.width = undefined;\n    _this13.caretX = undefined;\n    _this13.caretY = undefined;\n    _this13.labelColors = undefined;\n    _this13.labelPointStyles = undefined;\n    _this13.labelTextColors = undefined;\n    return _this13;\n  }\n\n  _createClass(Tooltip, [{\n    key: \"initialize\",\n    value: function initialize(options) {\n      this.options = options;\n      this._cachedAnimations = undefined;\n      this.$context = undefined;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations() {\n      var me = this;\n      var cached = me._cachedAnimations;\n\n      if (cached) {\n        return cached;\n      }\n\n      var chart = me._chart;\n      var options = me.options.setContext(me.getContext());\n      var opts = options.enabled && chart.options.animation && options.animations;\n      var animations = new Animations(me._chart, opts);\n\n      if (opts._cacheable) {\n        me._cachedAnimations = Object.freeze(animations);\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      var me = this;\n      return me.$context || (me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n    }\n  }, {\n    key: \"getTitle\",\n    value: function getTitle(context, options) {\n      var me = this;\n      var callbacks = options.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n      var title = callbacks.title.apply(me, [context]);\n      var afterTitle = callbacks.afterTitle.apply(me, [context]);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    }\n  }, {\n    key: \"getBeforeBody\",\n    value: function getBeforeBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n    }\n  }, {\n    key: \"getBody\",\n    value: function getBody(tooltipItems, options) {\n      var me = this;\n      var callbacks = options.callbacks;\n      var bodyItems = [];\n      each(tooltipItems, function (context) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        var scoped = overrideCallbacks(callbacks, context);\n        pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n        pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n        pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    }\n  }, {\n    key: \"getAfterBody\",\n    value: function getAfterBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n    }\n  }, {\n    key: \"getFooter\",\n    value: function getFooter(tooltipItems, options) {\n      var me = this;\n      var callbacks = options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n      var footer = callbacks.footer.apply(me, [tooltipItems]);\n      var afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    }\n  }, {\n    key: \"_createItems\",\n    value: function _createItems(options) {\n      var me = this;\n      var active = me._active;\n      var data = me._chart.data;\n      var labelColors = [];\n      var labelPointStyles = [];\n      var labelTextColors = [];\n      var tooltipItems = [];\n      var i, len;\n\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(me._chart, active[i]));\n      }\n\n      if (options.filter) {\n        tooltipItems = tooltipItems.filter(function (element, index, array) {\n          return options.filter(element, index, array, data);\n        });\n      }\n\n      if (options.itemSort) {\n        tooltipItems = tooltipItems.sort(function (a, b) {\n          return options.itemSort(a, b, data);\n        });\n      }\n\n      each(tooltipItems, function (context) {\n        var scoped = overrideCallbacks(options.callbacks, context);\n        labelColors.push(scoped.labelColor.call(me, context));\n        labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n        labelTextColors.push(scoped.labelTextColor.call(me, context));\n      });\n      me.labelColors = labelColors;\n      me.labelPointStyles = labelPointStyles;\n      me.labelTextColors = labelTextColors;\n      me.dataPoints = tooltipItems;\n      return tooltipItems;\n    }\n  }, {\n    key: \"update\",\n    value: function update(changed, replay) {\n      var me = this;\n      var options = me.options.setContext(me.getContext());\n      var active = me._active;\n      var properties;\n      var tooltipItems = [];\n\n      if (!active.length) {\n        if (me.opacity !== 0) {\n          properties = {\n            opacity: 0\n          };\n        }\n      } else {\n        var position = positioners[options.position].call(me, active, me._eventPosition);\n        tooltipItems = me._createItems(options);\n        me.title = me.getTitle(tooltipItems, options);\n        me.beforeBody = me.getBeforeBody(tooltipItems, options);\n        me.body = me.getBody(tooltipItems, options);\n        me.afterBody = me.getAfterBody(tooltipItems, options);\n        me.footer = me.getFooter(tooltipItems, options);\n        var size = me._size = getTooltipSize(me, options);\n        var positionAndSize = Object.assign({}, position, size);\n        var alignment = determineAlignment(me._chart, options, positionAndSize);\n        var backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        properties = {\n          opacity: 1,\n          x: backgroundPoint.x,\n          y: backgroundPoint.y,\n          width: size.width,\n          height: size.height,\n          caretX: position.x,\n          caretY: position.y\n        };\n      }\n\n      me._tooltipItems = tooltipItems;\n      me.$context = undefined;\n\n      if (properties) {\n        me._resolveAnimations().update(me, properties);\n      }\n\n      if (changed && options.external) {\n        options.external.call(me, {\n          chart: me._chart,\n          tooltip: me,\n          replay: replay\n        });\n      }\n    }\n  }, {\n    key: \"drawCaret\",\n    value: function drawCaret(tooltipPoint, ctx, size, options) {\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n  }, {\n    key: \"getCaretPosition\",\n    value: function getCaretPosition(tooltipPoint, size, options) {\n      var xAlign = this.xAlign,\n          yAlign = this.yAlign;\n      var cornerRadius = options.cornerRadius,\n          caretSize = options.caretSize;\n      var ptX = tooltipPoint.x,\n          ptY = tooltipPoint.y;\n      var width = size.width,\n          height = size.height;\n      var x1, x2, x3, y1, y2, y3;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n\n        x3 = x1;\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n        } else {\n          x2 = this.caretX;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          x1 = x2 + caretSize;\n          x3 = x2 - caretSize;\n        }\n\n        y3 = y1;\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle(pt, ctx, options) {\n      var me = this;\n      var title = me.title;\n      var length = title.length;\n      var titleFont, titleSpacing, i;\n\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n        pt.x = getAlignedX(me, options.titleAlign, options);\n        ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n        ctx.textBaseline = 'middle';\n        titleFont = toFont(options.titleFont);\n        titleSpacing = options.titleSpacing;\n        ctx.fillStyle = options.titleColor;\n        ctx.font = titleFont.string;\n\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n          pt.y += titleFont.lineHeight + titleSpacing;\n\n          if (i + 1 === length) {\n            pt.y += options.titleMarginBottom - titleSpacing;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_drawColorBox\",\n    value: function _drawColorBox(ctx, pt, i, rtlHelper, options) {\n      var me = this;\n      var labelColors = me.labelColors[i];\n      var labelPointStyle = me.labelPointStyles[i];\n      var boxHeight = options.boxHeight,\n          boxWidth = options.boxWidth;\n      var bodyFont = toFont(options.bodyFont);\n      var colorX = getAlignedX(me, 'left', options);\n      var rtlColorX = rtlHelper.x(colorX);\n      var yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n      var colorY = pt.y + yOffSet;\n\n      if (options.usePointStyle) {\n        var drawOptions = {\n          radius: Math.min(boxWidth, boxHeight) / 2,\n          pointStyle: labelPointStyle.pointStyle,\n          rotation: labelPointStyle.rotation,\n          borderWidth: 1\n        };\n        var centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n        var centerY = colorY + boxHeight / 2;\n        ctx.strokeStyle = options.multiKeyBackground;\n        ctx.fillStyle = options.multiKeyBackground;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.fillStyle = labelColors.backgroundColor;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        ctx.lineWidth = labelColors.borderWidth || 1;\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.setLineDash(labelColors.borderDash || []);\n        ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n        var outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n        var innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n        var borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n        if (Object.values(borderRadius).some(function (v) {\n          return v !== 0;\n        })) {\n          ctx.beginPath();\n          ctx.fillStyle = options.multiKeyBackground;\n          addRoundedRectPath(ctx, {\n            x: outerX,\n            y: colorY,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n          ctx.fill();\n          ctx.stroke();\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.beginPath();\n          addRoundedRectPath(ctx, {\n            x: innerX,\n            y: colorY + 1,\n            w: boxWidth - 2,\n            h: boxHeight - 2,\n            radius: borderRadius\n          });\n          ctx.fill();\n        } else {\n          ctx.fillStyle = options.multiKeyBackground;\n          ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n        }\n      }\n\n      ctx.fillStyle = me.labelTextColors[i];\n    }\n  }, {\n    key: \"drawBody\",\n    value: function drawBody(pt, ctx, options) {\n      var me = this;\n      var body = me.body;\n      var bodySpacing = options.bodySpacing,\n          bodyAlign = options.bodyAlign,\n          displayColors = options.displayColors,\n          boxHeight = options.boxHeight,\n          boxWidth = options.boxWidth;\n      var bodyFont = toFont(options.bodyFont);\n      var bodyLineHeight = bodyFont.lineHeight;\n      var xLinePadding = 0;\n      var rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n        pt.y += bodyLineHeight + bodySpacing;\n      };\n\n      var bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n      var bodyItem, textColor, lines, i, j, ilen, jlen;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'middle';\n      ctx.font = bodyFont.string;\n      pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n      ctx.fillStyle = options.bodyColor;\n      each(me.beforeBody, fillLineOfText);\n      xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + 1 : boxWidth + 2 : 0;\n\n      for (i = 0, ilen = body.length; i < ilen; ++i) {\n        bodyItem = body[i];\n        textColor = me.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        each(bodyItem.before, fillLineOfText);\n        lines = bodyItem.lines;\n\n        if (displayColors && lines.length) {\n          me._drawColorBox(ctx, pt, i, rtlHelper, options);\n\n          bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n        }\n\n        for (j = 0, jlen = lines.length; j < jlen; ++j) {\n          fillLineOfText(lines[j]);\n          bodyLineHeight = bodyFont.lineHeight;\n        }\n\n        each(bodyItem.after, fillLineOfText);\n      }\n\n      xLinePadding = 0;\n      bodyLineHeight = bodyFont.lineHeight;\n      each(me.afterBody, fillLineOfText);\n      pt.y -= bodySpacing;\n    }\n  }, {\n    key: \"drawFooter\",\n    value: function drawFooter(pt, ctx, options) {\n      var me = this;\n      var footer = me.footer;\n      var length = footer.length;\n      var footerFont, i;\n\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n        pt.x = getAlignedX(me, options.footerAlign, options);\n        pt.y += options.footerMarginTop;\n        ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n        ctx.textBaseline = 'middle';\n        footerFont = toFont(options.footerFont);\n        ctx.fillStyle = options.footerColor;\n        ctx.font = footerFont.string;\n\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n          pt.y += footerFont.lineHeight + options.footerSpacing;\n        }\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground(pt, ctx, tooltipSize, options) {\n      var xAlign = this.xAlign,\n          yAlign = this.yAlign;\n      var x = pt.x,\n          y = pt.y;\n      var width = tooltipSize.width,\n          height = tooltipSize.height;\n      var radius = options.cornerRadius;\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (options.borderWidth > 0) {\n        ctx.stroke();\n      }\n    }\n  }, {\n    key: \"_updateAnimationTarget\",\n    value: function _updateAnimationTarget(options) {\n      var me = this;\n      var chart = me._chart;\n      var anims = me.$animations;\n      var animX = anims && anims.x;\n      var animY = anims && anims.y;\n\n      if (animX || animY) {\n        var position = positioners[options.position].call(me, me._active, me._eventPosition);\n\n        if (!position) {\n          return;\n        }\n\n        var size = me._size = getTooltipSize(me, options);\n        var positionAndSize = Object.assign({}, position, me._size);\n        var alignment = determineAlignment(chart, options, positionAndSize);\n        var point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n\n        if (animX._to !== point.x || animY._to !== point.y) {\n          me.xAlign = alignment.xAlign;\n          me.yAlign = alignment.yAlign;\n          me.width = size.width;\n          me.height = size.height;\n          me.caretX = position.x;\n          me.caretY = position.y;\n\n          me._resolveAnimations().update(me, point);\n        }\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var me = this;\n      var options = me.options.setContext(me.getContext());\n      var opacity = me.opacity;\n\n      if (!opacity) {\n        return;\n      }\n\n      me._updateAnimationTarget(options);\n\n      var tooltipSize = {\n        width: me.width,\n        height: me.height\n      };\n      var pt = {\n        x: me.x,\n        y: me.y\n      };\n      opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n      var padding = toPadding(options.padding);\n      var hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n\n      if (options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        me.drawBackground(pt, ctx, tooltipSize, options);\n        overrideTextDirection(ctx, options.textDirection);\n        pt.y += padding.top;\n        me.drawTitle(pt, ctx, options);\n        me.drawBody(pt, ctx, options);\n        me.drawFooter(pt, ctx, options);\n        restoreTextDirection(ctx, options.textDirection);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements, eventPosition) {\n      var me = this;\n      var lastActive = me._active;\n      var active = activeElements.map(function (_ref7) {\n        var datasetIndex = _ref7.datasetIndex,\n            index = _ref7.index;\n\n        var meta = me._chart.getDatasetMeta(datasetIndex);\n\n        if (!meta) {\n          throw new Error('Cannot find a dataset at index ' + datasetIndex);\n        }\n\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(lastActive, active);\n\n      var positionChanged = me._positionChanged(active, eventPosition);\n\n      if (changed || positionChanged) {\n        me._active = active;\n        me._eventPosition = eventPosition;\n        me.update(true);\n      }\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e, replay) {\n      var me = this;\n      var options = me.options;\n      var lastActive = me._active || [];\n      var changed = false;\n      var active = [];\n\n      if (e.type !== 'mouseout') {\n        active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n        if (options.reverse) {\n          active.reverse();\n        }\n      }\n\n      var positionChanged = me._positionChanged(active, e);\n\n      changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n      if (changed) {\n        me._active = active;\n\n        if (options.enabled || options.external) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true, replay);\n        }\n      }\n\n      return changed;\n    }\n  }, {\n    key: \"_positionChanged\",\n    value: function _positionChanged(active, e) {\n      var caretX = this.caretX,\n          caretY = this.caretY,\n          options = this.options;\n      var position = positioners[options.position].call(this, active, e);\n      return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n  }]);\n\n  return Tooltip;\n}(Element);\n\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners: positioners,\n  afterInit: function afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        _chart: chart,\n        options: options\n      });\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset: function reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw: function afterDraw(chart) {\n    var tooltip = chart.tooltip;\n    var args = {\n      tooltip: tooltip\n    };\n\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (chart.tooltip) {\n      var useFinalPosition = args.replay;\n\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: function boxHeight(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    boxWidth: function boxWidth(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title: function title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          var item = tooltipItems[0];\n          var labels = item.chart.data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label: function label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n\n        var label = tooltipItem.dataset.label || '';\n\n        if (label) {\n          label += ': ';\n        }\n\n        var value = tooltipItem.formattedValue;\n\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n\n        return label;\n      },\n      labelColor: function labelColor(tooltipItem) {\n        var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0\n        };\n      },\n      labelTextColor: function labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle: function labelPointStyle(tooltipItem) {\n        var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return name !== 'filter' && name !== 'itemSort' && name !== 'external';\n    },\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins =\n/*#__PURE__*/\nObject.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: plugin_filler,\n  Legend: plugin_legend,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\n\nvar addIfString = function addIfString(labels, raw, index) {\n  return typeof raw === 'string' ? labels.push(raw) - 1 : isNaN(raw) ? null : index;\n};\n\nfunction findOrAddLabel(labels, raw, index) {\n  var first = labels.indexOf(raw);\n\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n\n  var last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nvar validIndex = function validIndex(index, max) {\n  return index === null ? null : _limitValue(Math.round(index), 0, max);\n};\n\nvar CategoryScale =\n/*#__PURE__*/\nfunction (_Scale) {\n  _inherits(CategoryScale, _Scale);\n\n  function CategoryScale(cfg) {\n    var _this14;\n\n    _classCallCheck(this, CategoryScale);\n\n    _this14 = _possibleConstructorReturn(this, _getPrototypeOf(CategoryScale).call(this, cfg));\n    _this14._startValue = undefined;\n    _this14._valueRange = 0;\n    return _this14;\n  }\n\n  _createClass(CategoryScale, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n\n      var labels = this.getLabels();\n      index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n      return validIndex(index, labels.length - 1);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n\n      var _me$getUserBounds2 = me.getUserBounds(),\n          minDefined = _me$getUserBounds2.minDefined,\n          maxDefined = _me$getUserBounds2.maxDefined;\n\n      var _me$getMinMax = me.getMinMax(true),\n          min = _me$getMinMax.min,\n          max = _me$getMinMax.max;\n\n      if (me.options.bounds === 'ticks') {\n        if (!minDefined) {\n          min = 0;\n        }\n\n        if (!maxDefined) {\n          max = me.getLabels().length - 1;\n        }\n      }\n\n      me.min = min;\n      me.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var offset = me.options.offset;\n      var ticks = [];\n      var labels = me.getLabels();\n      labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n      me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n      me._startValue = me.min - (offset ? 0.5 : 0);\n\n      for (var value = min; value <= max; value++) {\n        ticks.push({\n          value: value\n        });\n      }\n\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var me = this;\n      var labels = me.getLabels();\n\n      if (value >= 0 && value < labels.length) {\n        return labels[value];\n      }\n\n      return value;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n\n      _get(_getPrototypeOf(CategoryScale.prototype), \"configure\", this).call(this);\n\n      if (!me.isHorizontal()) {\n        me._reversePixels = !me._reversePixels;\n      }\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var me = this;\n\n      if (typeof value !== 'number') {\n        value = me.parse(value);\n      }\n\n      return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n    }\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var me = this;\n      var ticks = me.ticks;\n\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n\n      return me.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var me = this;\n      return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.bottom;\n    }\n  }]);\n\n  return CategoryScale;\n}(Scale);\n\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  var ticks = [];\n  var MIN_SPACING = 1e-14;\n  var bounds = generationOptions.bounds,\n      step = generationOptions.step,\n      min = generationOptions.min,\n      max = generationOptions.max,\n      precision = generationOptions.precision,\n      count = generationOptions.count,\n      maxTicks = generationOptions.maxTicks,\n      maxDigits = generationOptions.maxDigits,\n      includeBounds = generationOptions.includeBounds;\n  var unit = step || 1;\n  var maxSpaces = maxTicks - 1;\n  var rmin = dataRange.min,\n      rmax = dataRange.max;\n  var minDefined = !isNullOrUndef(min);\n  var maxDefined = !isNullOrUndef(max);\n  var countDefined = !isNullOrUndef(count);\n  var minSpacing = (rmax - rmin) / (maxDigits + 1);\n  var spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  var factor, niceMin, niceMax, numSpaces;\n\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  var decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  var j = 0;\n\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n\n      if (niceMin < min) {\n        j++;\n      }\n\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, _ref8) {\n  var horizontal = _ref8.horizontal,\n      minRotation = _ref8.minRotation;\n  var rad = toRadians(minRotation);\n  var ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  var length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nvar LinearScaleBase =\n/*#__PURE__*/\nfunction (_Scale2) {\n  _inherits(LinearScaleBase, _Scale2);\n\n  function LinearScaleBase(cfg) {\n    var _this15;\n\n    _classCallCheck(this, LinearScaleBase);\n\n    _this15 = _possibleConstructorReturn(this, _getPrototypeOf(LinearScaleBase).call(this, cfg));\n    _this15.start = undefined;\n    _this15.end = undefined;\n    _this15._startValue = undefined;\n    _this15._endValue = undefined;\n    _this15._valueRange = 0;\n    return _this15;\n  }\n\n  _createClass(LinearScaleBase, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n\n      if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n        return null;\n      }\n\n      return +raw;\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var me = this;\n      var beginAtZero = me.options.beginAtZero;\n\n      var _me$getUserBounds3 = me.getUserBounds(),\n          minDefined = _me$getUserBounds3.minDefined,\n          maxDefined = _me$getUserBounds3.maxDefined;\n\n      var min = me.min,\n          max = me.max;\n\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n\n      if (beginAtZero) {\n        var minSign = sign(min);\n        var maxSign = sign(max);\n\n        if (minSign < 0 && maxSign < 0) {\n          setMax(0);\n        } else if (minSign > 0 && maxSign > 0) {\n          setMin(0);\n        }\n      }\n\n      if (min === max) {\n        setMax(max + 1);\n\n        if (!beginAtZero) {\n          setMin(min - 1);\n        }\n      }\n\n      me.min = min;\n      me.max = max;\n    }\n  }, {\n    key: \"getTickLimit\",\n    value: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var maxTicksLimit = tickOpts.maxTicksLimit,\n          stepSize = tickOpts.stepSize;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me.computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        bounds: opts.bounds,\n        min: opts.min,\n        max: opts.max,\n        precision: tickOpts.precision,\n        step: tickOpts.stepSize,\n        count: tickOpts.count,\n        maxDigits: me._maxDigits(),\n        horizontal: me.isHorizontal(),\n        minRotation: tickOpts.minRotation || 0,\n        includeBounds: tickOpts.includeBounds !== false\n      };\n      var dataRange = me._range || me;\n      var ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, me, 'value');\n      }\n\n      if (opts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      return ticks;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n      var ticks = me.ticks;\n      var start = me.min;\n      var end = me.max;\n\n      _get(_getPrototypeOf(LinearScaleBase.prototype), \"configure\", this).call(this);\n\n      if (me.options.offset && ticks.length) {\n        var offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n        start -= offset;\n        end += offset;\n      }\n\n      me._startValue = start;\n      me._endValue = end;\n      me._valueRange = end - start;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return formatNumber(value, this.chart.options.locale);\n    }\n  }]);\n\n  return LinearScaleBase;\n}(Scale);\n\nvar LinearScale =\n/*#__PURE__*/\nfunction (_LinearScaleBase) {\n  _inherits(LinearScale, _LinearScaleBase);\n\n  function LinearScale() {\n    _classCallCheck(this, LinearScale);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(LinearScale).apply(this, arguments));\n  }\n\n  _createClass(LinearScale, [{\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n\n      var _me$getMinMax2 = me.getMinMax(true),\n          min = _me$getMinMax2.min,\n          max = _me$getMinMax2.max;\n\n      me.min = isNumberFinite(min) ? min : 0;\n      me.max = isNumberFinite(max) ? max : 1;\n      me.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      var me = this;\n      var horizontal = me.isHorizontal();\n      var length = horizontal ? me.width : me.height;\n      var minRotation = toRadians(me.options.ticks.minRotation);\n      var ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n\n      var tickFont = me._resolveTickFontOptions(0);\n\n      return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n  }]);\n\n  return LinearScale;\n}(LinearScaleBase);\n\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  var remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\n\nfunction generateTicks(generationOptions, dataRange) {\n  var endExp = Math.floor(log10(dataRange.max));\n  var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  var ticks = [];\n  var tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  var exp = Math.floor(log10(tickVal));\n  var significand = Math.floor(tickVal / Math.pow(10, exp));\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n  var lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\n\nvar LogarithmicScale =\n/*#__PURE__*/\nfunction (_Scale3) {\n  _inherits(LogarithmicScale, _Scale3);\n\n  function LogarithmicScale(cfg) {\n    var _this16;\n\n    _classCallCheck(this, LogarithmicScale);\n\n    _this16 = _possibleConstructorReturn(this, _getPrototypeOf(LogarithmicScale).call(this, cfg));\n    _this16.start = undefined;\n    _this16.end = undefined;\n    _this16._startValue = undefined;\n    _this16._valueRange = 0;\n    return _this16;\n  }\n\n  _createClass(LogarithmicScale, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      var value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n\n      if (value === 0) {\n        this._zero = true;\n        return undefined;\n      }\n\n      return isNumberFinite(value) && value > 0 ? value : null;\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n\n      var _me$getMinMax3 = me.getMinMax(true),\n          min = _me$getMinMax3.min,\n          max = _me$getMinMax3.max;\n\n      me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n      me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n\n      if (me.options.beginAtZero) {\n        me._zero = true;\n      }\n\n      me.handleTickRangeOptions();\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var me = this;\n\n      var _me$getUserBounds4 = me.getUserBounds(),\n          minDefined = _me$getUserBounds4.minDefined,\n          maxDefined = _me$getUserBounds4.maxDefined;\n\n      var min = me.min;\n      var max = me.max;\n\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n\n      var exp = function exp(v, m) {\n        return Math.pow(10, Math.floor(log10(v)) + m);\n      };\n\n      if (min === max) {\n        if (min <= 0) {\n          setMin(1);\n          setMax(10);\n        } else {\n          setMin(exp(min, -1));\n          setMax(exp(max, +1));\n        }\n      }\n\n      if (min <= 0) {\n        setMin(exp(max, -1));\n      }\n\n      if (max <= 0) {\n        setMax(exp(min, +1));\n      }\n\n      if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n        setMin(exp(min, -1));\n      }\n\n      me.min = min;\n      me.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var generationOptions = {\n        min: me._userMin,\n        max: me._userMax\n      };\n      var ticks = generateTicks(generationOptions, me);\n\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, me, 'value');\n      }\n\n      if (opts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n      var start = me.min;\n\n      _get(_getPrototypeOf(LogarithmicScale.prototype), \"configure\", this).call(this);\n\n      me._startValue = log10(start);\n      me._valueRange = log10(me.max) - log10(start);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var me = this;\n\n      if (value === undefined || value === 0) {\n        value = me.min;\n      }\n\n      if (value === null || isNaN(value)) {\n        return NaN;\n      }\n\n      return me.getPixelForDecimal(value === me.min ? 0 : (log10(value) - me._startValue) / me._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var me = this;\n      var decimal = me.getDecimalForPixel(pixel);\n      return Math.pow(10, me._startValue + decimal * me._valueRange);\n    }\n  }]);\n\n  return LogarithmicScale;\n}(Scale);\n\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  var tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    var padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n\n  return 0;\n}\n\nfunction measureLabelSize(ctx, lineHeight, label) {\n  if (isArray(label)) {\n    return {\n      w: _longestText(ctx, ctx.font, label),\n      h: label.length * lineHeight\n    };\n  }\n\n  return {\n    w: ctx.measureText(label).width,\n    h: lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\nfunction fitWithPointLabels(scale) {\n  var furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  var furthestAngles = {};\n  var i, textSize, pointPosition;\n  var labelSizes = [];\n  var padding = [];\n  var valueCount = scale.getLabels().length;\n\n  for (i = 0; i < valueCount; i++) {\n    var _opts = scale.options.pointLabels.setContext(scale.getContext(i));\n\n    padding[i] = _opts.padding;\n    pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    var plFont = toFont(_opts.font);\n    scale.ctx.font = plFont.string;\n    textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    var angleRadians = scale.getIndexAngle(i);\n    var angle = toDegrees(angleRadians);\n    var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n\n  scale._pointLabelItems = [];\n  var opts = scale.options;\n  var tickBackdropHeight = getTickBackdropHeight(opts);\n  var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n  for (i = 0; i < valueCount; i++) {\n    var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n    var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n\n    var _angle = toDegrees(scale.getIndexAngle(i));\n\n    var size = labelSizes[i];\n    adjustPointPositionForLabelHeight(_angle, size, pointLabelPosition);\n    var textAlign = getTextAlignForAngle(_angle);\n    var left = void 0;\n\n    if (textAlign === 'left') {\n      left = pointLabelPosition.x;\n    } else if (textAlign === 'center') {\n      left = pointLabelPosition.x - size.w / 2;\n    } else {\n      left = pointLabelPosition.x - size.w;\n    }\n\n    var right = left + size.w;\n    scale._pointLabelItems[i] = {\n      x: pointLabelPosition.x,\n      y: pointLabelPosition.y,\n      textAlign: textAlign,\n      left: left,\n      top: pointLabelPosition.y,\n      right: right,\n      bottom: pointLabelPosition.y + size.h\n    };\n  }\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n  if (angle === 90 || angle === 270) {\n    position.y -= textSize.h / 2;\n  } else if (angle > 270 || angle < 90) {\n    position.y -= textSize.h;\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  var ctx = scale.ctx,\n      pointLabels = scale.options.pointLabels;\n\n  for (var i = labelCount - 1; i >= 0; i--) {\n    var optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    var plFont = toFont(optsAtIndex.font);\n    var _scale$_pointLabelIte = scale._pointLabelItems[i],\n        x = _scale$_pointLabelIte.x,\n        y = _scale$_pointLabelIte.y,\n        textAlign = _scale$_pointLabelIte.textAlign,\n        left = _scale$_pointLabelIte.left,\n        top = _scale$_pointLabelIte.top,\n        right = _scale$_pointLabelIte.right,\n        bottom = _scale$_pointLabelIte.bottom;\n    var backdropColor = optsAtIndex.backdropColor;\n\n    if (!isNullOrUndef(backdropColor)) {\n      var padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  var ctx = scale.ctx;\n\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    var pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (var i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  var ctx = scale.ctx;\n  var circular = gridLineOpts.circular;\n  var color = gridLineOpts.color,\n      lineWidth = gridLineOpts.lineWidth;\n\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\n\nvar RadialLinearScale =\n/*#__PURE__*/\nfunction (_LinearScaleBase2) {\n  _inherits(RadialLinearScale, _LinearScaleBase2);\n\n  function RadialLinearScale(cfg) {\n    var _this17;\n\n    _classCallCheck(this, RadialLinearScale);\n\n    _this17 = _possibleConstructorReturn(this, _getPrototypeOf(RadialLinearScale).call(this, cfg));\n    _this17.xCenter = undefined;\n    _this17.yCenter = undefined;\n    _this17.drawingArea = undefined;\n    _this17._pointLabels = [];\n    _this17._pointLabelItems = [];\n    return _this17;\n  }\n\n  _createClass(RadialLinearScale, [{\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var me = this;\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n\n      var _me$getMinMax4 = me.getMinMax(false),\n          min = _me$getMinMax4.min,\n          max = _me$getMinMax4.max;\n\n      me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n      me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n      me.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var me = this;\n      LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n      me._pointLabels = me.getLabels().map(function (value, index) {\n        var label = callback(me.options.pointLabels.callback, [value, index], me);\n        return label || label === 0 ? label : '';\n      });\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    }\n  }, {\n    key: \"_setReductions\",\n    value: function _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    }\n  }, {\n    key: \"setCenterPoint\",\n    value: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    }\n  }, {\n    key: \"getIndexAngle\",\n    value: function getIndexAngle(index) {\n      var angleMultiplier = TAU / this.getLabels().length;\n      var startAngle = this.options.startAngle || 0;\n      return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n  }, {\n    key: \"getDistanceFromCenterForValue\",\n    value: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (isNullOrUndef(value)) {\n        return NaN;\n      }\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    }\n  }, {\n    key: \"getValueForDistanceFromCenter\",\n    value: function getValueForDistanceFromCenter(distance) {\n      if (isNullOrUndef(distance)) {\n        return NaN;\n      }\n\n      var me = this;\n      var scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n      return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n    }\n  }, {\n    key: \"getPointPosition\",\n    value: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var angle = me.getIndexAngle(index) - HALF_PI;\n      return {\n        x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n        angle: angle\n      };\n    }\n  }, {\n    key: \"getPointPositionForValue\",\n    value: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n  }, {\n    key: \"getBasePosition\",\n    value: function getBasePosition(index) {\n      return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n  }, {\n    key: \"getPointLabelPosition\",\n    value: function getPointLabelPosition(index) {\n      var _this$_pointLabelItem = this._pointLabelItems[index],\n          left = _this$_pointLabelItem.left,\n          top = _this$_pointLabelItem.top,\n          right = _this$_pointLabelItem.right,\n          bottom = _this$_pointLabelItem.bottom;\n      return {\n        left: left,\n        top: top,\n        right: right,\n        bottom: bottom\n      };\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var me = this;\n      var _me$options7 = me.options,\n          backgroundColor = _me$options7.backgroundColor,\n          circular = _me$options7.grid.circular;\n\n      if (backgroundColor) {\n        var ctx = me.ctx;\n        ctx.save();\n        ctx.beginPath();\n        pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n        ctx.closePath();\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n      var angleLines = opts.angleLines,\n          grid = opts.grid;\n      var labelCount = me.getLabels().length;\n      var i, offset, position;\n\n      if (opts.pointLabels.display) {\n        drawPointLabels(me, labelCount);\n      }\n\n      if (grid.display) {\n        me.ticks.forEach(function (tick, index) {\n          if (index !== 0) {\n            offset = me.getDistanceFromCenterForValue(tick.value);\n            var optsAtIndex = grid.setContext(me.getContext(index - 1));\n            drawRadiusLine(me, optsAtIndex, offset, labelCount);\n          }\n        });\n      }\n\n      if (angleLines.display) {\n        ctx.save();\n\n        for (i = me.getLabels().length - 1; i >= 0; i--) {\n          var optsAtIndex = angleLines.setContext(me.getContext(i));\n          var color = optsAtIndex.color,\n              lineWidth = optsAtIndex.lineWidth;\n\n          if (!lineWidth || !color) {\n            continue;\n          }\n\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = color;\n          ctx.setLineDash(optsAtIndex.borderDash);\n          ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n          offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n          position = me.getPointPosition(i, offset);\n          ctx.beginPath();\n          ctx.moveTo(me.xCenter, me.yCenter);\n          ctx.lineTo(position.x, position.y);\n          ctx.stroke();\n        }\n\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {}\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n\n      if (!tickOpts.display) {\n        return;\n      }\n\n      var startAngle = me.getIndexAngle(0);\n      var offset, width;\n      ctx.save();\n      ctx.translate(me.xCenter, me.yCenter);\n      ctx.rotate(startAngle);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      me.ticks.forEach(function (tick, index) {\n        if (index === 0 && !opts.reverse) {\n          return;\n        }\n\n        var optsAtIndex = tickOpts.setContext(me.getContext(index));\n        var tickFont = toFont(optsAtIndex.font);\n        offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n\n        if (optsAtIndex.showLabelBackdrop) {\n          width = ctx.measureText(tick.label).width;\n          ctx.fillStyle = optsAtIndex.backdropColor;\n          var padding = toPadding(optsAtIndex.backdropPadding);\n          ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n        }\n\n        renderText(ctx, tick.label, 0, -offset, tickFont, {\n          color: optsAtIndex.color\n        });\n      });\n      ctx.restore();\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {}\n  }]);\n\n  return RadialLinearScale;\n}(LinearScaleBase);\n\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback: function callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction _parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  var adapter = scale._adapter;\n  var _scale$_parseOpts = scale._parseOpts,\n      parser = _scale$_parseOpts.parser,\n      round = _scale$_parseOpts.round,\n      isoWeekday = _scale$_parseOpts.isoWeekday;\n  var value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n\n  for (var i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    var interval = INTERVALS[UNITS[i]];\n    var factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (var i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    var unit = UNITS[i];\n\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    var _lookup2 = _lookup(timestamps, time),\n        lo = _lookup2.lo,\n        hi = _lookup2.hi;\n\n    var timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  var adapter = scale._adapter;\n  var first = +adapter.startOf(ticks[0].value, majorUnit);\n  var last = ticks[ticks.length - 1].value;\n  var major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n\n  return ticks;\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  var ticks = [];\n  var map = {};\n  var ilen = values.length;\n  var i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value: value,\n      major: false\n    });\n  }\n\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nvar TimeScale =\n/*#__PURE__*/\nfunction (_Scale4) {\n  _inherits(TimeScale, _Scale4);\n\n  function TimeScale(props) {\n    var _this18;\n\n    _classCallCheck(this, TimeScale);\n\n    _this18 = _possibleConstructorReturn(this, _getPrototypeOf(TimeScale).call(this, props));\n    _this18._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    _this18._unit = 'day';\n    _this18._majorUnit = undefined;\n    _this18._offsets = {};\n    _this18._normalized = false;\n    _this18._parseOpts = undefined;\n    return _this18;\n  }\n\n  _createClass(TimeScale, [{\n    key: \"init\",\n    value: function init(scaleOpts, opts) {\n      var time = scaleOpts.time || (scaleOpts.time = {});\n      var adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n      mergeIf(time.displayFormats, adapter.formats());\n      this._parseOpts = {\n        parser: time.parser,\n        round: time.round,\n        isoWeekday: time.isoWeekday\n      };\n\n      _get(_getPrototypeOf(TimeScale.prototype), \"init\", this).call(this, scaleOpts);\n\n      this._normalized = opts.normalized;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (raw === undefined) {\n        return null;\n      }\n\n      return _parse(this, raw);\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      _get(_getPrototypeOf(TimeScale.prototype), \"beforeLayout\", this).call(this);\n\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n      var options = me.options;\n      var adapter = me._adapter;\n      var unit = options.time.unit || 'day';\n\n      var _me$getUserBounds5 = me.getUserBounds(),\n          min = _me$getUserBounds5.min,\n          max = _me$getUserBounds5.max,\n          minDefined = _me$getUserBounds5.minDefined,\n          maxDefined = _me$getUserBounds5.maxDefined;\n\n      function _applyBounds(bounds) {\n        if (!minDefined && !isNaN(bounds.min)) {\n          min = Math.min(min, bounds.min);\n        }\n\n        if (!maxDefined && !isNaN(bounds.max)) {\n          max = Math.max(max, bounds.max);\n        }\n      }\n\n      if (!minDefined || !maxDefined) {\n        _applyBounds(me._getLabelBounds());\n\n        if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n          _applyBounds(me.getMinMax(false));\n        }\n      }\n\n      min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n      max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n      me.min = Math.min(min, max - 1);\n      me.max = Math.max(min + 1, max);\n    }\n  }, {\n    key: \"_getLabelBounds\",\n    value: function _getLabelBounds() {\n      var arr = this.getLabelTimestamps();\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n\n      if (arr.length) {\n        min = arr[0];\n        max = arr[arr.length - 1];\n      }\n\n      return {\n        min: min,\n        max: max\n      };\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var me = this;\n      var options = me.options;\n      var timeOpts = options.time;\n      var tickOpts = options.ticks;\n      var timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        me.min = me._userMin || timestamps[0];\n        me.max = me._userMax || timestamps[timestamps.length - 1];\n      }\n\n      var min = me.min;\n      var max = me.max;\n\n      var ticks = _filterBetween(timestamps, min, max);\n\n      me._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min)) : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n      me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined : determineMajorUnit(me._unit);\n      me.initOffsets(timestamps);\n\n      if (options.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    }\n  }, {\n    key: \"initOffsets\",\n    value: function initOffsets(timestamps) {\n      var me = this;\n      var start = 0;\n      var end = 0;\n      var first, last;\n\n      if (me.options.offset && timestamps.length) {\n        first = me.getDecimalForValue(timestamps[0]);\n\n        if (timestamps.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n        }\n\n        last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n\n        if (timestamps.length === 1) {\n          end = last;\n        } else {\n          end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n        }\n      }\n\n      var limit = timestamps.length < 3 ? 0.5 : 0.25;\n      start = _limitValue(start, 0, limit);\n      end = _limitValue(end, 0, limit);\n      me._offsets = {\n        start: start,\n        end: end,\n        factor: 1 / (start + 1 + end)\n      };\n    }\n  }, {\n    key: \"_generate\",\n    value: function _generate() {\n      var me = this;\n      var adapter = me._adapter;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n      var stepSize = valueOrDefault(timeOpts.stepSize, 1);\n      var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n      var hasWeekday = isNumber(weekday) || weekday === true;\n      var ticks = {};\n      var first = min;\n      var time, count;\n\n      if (hasWeekday) {\n        first = +adapter.startOf(first, 'isoWeek', weekday);\n      }\n\n      first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n      if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n        throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n      }\n\n      var timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n\n      for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n        addTick(ticks, time, timestamps);\n      }\n\n      if (time === max || options.bounds === 'ticks' || count === 1) {\n        addTick(ticks, time, timestamps);\n      }\n\n      return Object.keys(ticks).sort(function (a, b) {\n        return a - b;\n      }).map(function (x) {\n        return +x;\n      });\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var me = this;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(value, timeOpts.tooltipFormat);\n      }\n\n      return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n  }, {\n    key: \"_tickFormatFunction\",\n    value: function _tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var unit = me._unit;\n      var majorUnit = me._majorUnit;\n      var minorFormat = unit && formats[unit];\n      var majorFormat = majorUnit && formats[majorUnit];\n      var tick = ticks[index];\n      var major = majorUnit && majorFormat && tick && tick.major;\n\n      var label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n\n      var formatter = options.ticks.callback;\n      return formatter ? callback(formatter, [label, index, ticks], me) : label;\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var i, ilen, tick;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        tick.label = this._tickFormatFunction(tick.value, i, ticks);\n      }\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      var me = this;\n      return value === null ? NaN : (value - me.min) / (me.max - me.min);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var me = this;\n      var offsets = me._offsets;\n      var pos = me.getDecimalForValue(value);\n      return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var me = this;\n      var offsets = me._offsets;\n      var pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return me.min + pos * (me.max - me.min);\n    }\n  }, {\n    key: \"_getLabelSize\",\n    value: function _getLabelSize(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n\n      var tickFontSize = me._resolveTickFontOptions(0).size;\n\n      return {\n        w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n        h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n      };\n    }\n  }, {\n    key: \"_getLabelCapacity\",\n    value: function _getLabelCapacity(exampleTime) {\n      var me = this;\n      var timeOpts = me.options.time;\n      var displayFormats = timeOpts.displayFormats;\n      var format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n\n      var exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n\n      var size = me._getLabelSize(exampleLabel);\n\n      var capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n      return capacity > 0 ? capacity : 1;\n    }\n  }, {\n    key: \"getDataTimestamps\",\n    value: function getDataTimestamps() {\n      var me = this;\n      var timestamps = me._cache.data || [];\n      var i, ilen;\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      var metas = me.getMatchingVisibleMetas();\n\n      if (me._normalized && metas.length) {\n        return me._cache.data = metas[0].controller.getAllParsedValues(me);\n      }\n\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n      }\n\n      return me._cache.data = me.normalize(timestamps);\n    }\n  }, {\n    key: \"getLabelTimestamps\",\n    value: function getLabelTimestamps() {\n      var me = this;\n      var timestamps = me._cache.labels || [];\n      var i, ilen;\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      var labels = me.getLabels();\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        timestamps.push(_parse(me, labels[i]));\n      }\n\n      return me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(values) {\n      return _arrayUnique(values.sort(sorter));\n    }\n  }]);\n\n  return TimeScale;\n}(Scale);\n\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  var prevSource, nextSource, prevTarget, nextTarget;\n\n  if (reverse) {\n    prevSource = Math.floor(val);\n    nextSource = Math.ceil(val);\n    prevTarget = table[prevSource];\n    nextTarget = table[nextSource];\n  } else {\n    var result = _lookup(table, val);\n\n    prevTarget = result.lo;\n    nextTarget = result.hi;\n    prevSource = table[prevTarget];\n    nextSource = table[nextTarget];\n  }\n\n  var span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nvar TimeSeriesScale =\n/*#__PURE__*/\nfunction (_TimeScale) {\n  _inherits(TimeSeriesScale, _TimeScale);\n\n  function TimeSeriesScale(props) {\n    var _this19;\n\n    _classCallCheck(this, TimeSeriesScale);\n\n    _this19 = _possibleConstructorReturn(this, _getPrototypeOf(TimeSeriesScale).call(this, props));\n    _this19._table = [];\n    _this19._maxIndex = undefined;\n    return _this19;\n  }\n\n  _createClass(TimeSeriesScale, [{\n    key: \"initOffsets\",\n    value: function initOffsets() {\n      var me = this;\n\n      var timestamps = me._getTimestampsForTable();\n\n      me._table = me.buildLookupTable(timestamps);\n      me._maxIndex = me._table.length - 1;\n\n      _get(_getPrototypeOf(TimeSeriesScale.prototype), \"initOffsets\", this).call(this, timestamps);\n    }\n  }, {\n    key: \"buildLookupTable\",\n    value: function buildLookupTable(timestamps) {\n      var me = this;\n      var min = me.min,\n          max = me.max;\n\n      if (!timestamps.length) {\n        return [{\n          time: min,\n          pos: 0\n        }, {\n          time: max,\n          pos: 1\n        }];\n      }\n\n      var items = [min];\n      var i, ilen, curr;\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        curr = timestamps[i];\n\n        if (curr > min && curr < max) {\n          items.push(curr);\n        }\n      }\n\n      items.push(max);\n      return items;\n    }\n  }, {\n    key: \"_getTimestampsForTable\",\n    value: function _getTimestampsForTable() {\n      var me = this;\n      var timestamps = me._cache.all || [];\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      var data = me.getDataTimestamps();\n      var label = me.getLabelTimestamps();\n\n      if (data.length && label.length) {\n        timestamps = me.normalize(data.concat(label));\n      } else {\n        timestamps = data.length ? data : label;\n      }\n\n      timestamps = me._cache.all = timestamps;\n      return timestamps;\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value, index) {\n      var me = this;\n      var offsets = me._offsets;\n      var pos = me._normalized && me._maxIndex > 0 && !isNullOrUndef(index) ? index / me._maxIndex : me.getDecimalForValue(value);\n      return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return interpolate(this._table, value) / this._maxIndex;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var me = this;\n      var offsets = me._offsets;\n      var decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return interpolate(me._table, decimal * this._maxIndex, true);\n    }\n  }]);\n\n  return TimeSeriesScale;\n}(TimeScale);\n\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales =\n/*#__PURE__*/\nObject.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nvar registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","import _toConsumableArray from \"C:\\\\Users\\\\devik\\\\Desktop\\\\admin-Final-app-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport { Chart, registerables } from '../dist/chart.esm';\nChart.register.apply(Chart, _toConsumableArray(registerables));\nexport default Chart;","import React, { forwardRef, useRef, useMemo, useState, useImperativeHandle, useEffect } from 'react';\nimport Chart$1 from 'chart.js/auto';\nimport merge from 'lodash/merge';\nimport assign from 'lodash/assign';\nimport find from 'lodash/find';\nimport { defaults as defaults$1, Chart as Chart$2 } from 'chart.js';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar ChartComponent = forwardRef(function (props, ref) {\n  var id = props.id,\n      className = props.className,\n      _props$height = props.height,\n      height = _props$height === void 0 ? 150 : _props$height,\n      _props$width = props.width,\n      width = _props$width === void 0 ? 300 : _props$width,\n      _props$redraw = props.redraw,\n      redraw = _props$redraw === void 0 ? false : _props$redraw,\n      type = props.type,\n      data = props.data,\n      _props$options = props.options,\n      options = _props$options === void 0 ? {} : _props$options,\n      _props$plugins = props.plugins,\n      plugins = _props$plugins === void 0 ? [] : _props$plugins,\n      getDatasetAtEvent = props.getDatasetAtEvent,\n      getElementAtEvent = props.getElementAtEvent,\n      getElementsAtEvent = props.getElementsAtEvent,\n      fallbackContent = props.fallbackContent,\n      rest = _objectWithoutPropertiesLoose(props, [\"id\", \"className\", \"height\", \"width\", \"redraw\", \"type\", \"data\", \"options\", \"plugins\", \"getDatasetAtEvent\", \"getElementAtEvent\", \"getElementsAtEvent\", \"fallbackContent\"]);\n\n  var canvas = useRef(null);\n  var computedData = useMemo(function () {\n    if (typeof data === 'function') {\n      return canvas.current ? data(canvas.current) : {};\n    } else return merge({}, data);\n  }, [data, canvas.current]);\n\n  var _useState = useState(),\n      chart = _useState[0],\n      setChart = _useState[1];\n\n  useImperativeHandle(ref, function () {\n    return chart;\n  }, [chart]);\n\n  var renderChart = function renderChart() {\n    if (!canvas.current) return;\n    setChart(new Chart$1(canvas.current, {\n      type: type,\n      data: computedData,\n      options: options,\n      plugins: plugins\n    }));\n  };\n\n  var onClick = function onClick(e) {\n    if (!chart) return;\n    getDatasetAtEvent && getDatasetAtEvent(chart.getElementsAtEventForMode(e, 'dataset', {\n      intersect: true\n    }, false), e);\n    getElementAtEvent && getElementAtEvent(chart.getElementsAtEventForMode(e, 'nearest', {\n      intersect: true\n    }, false), e);\n    getElementsAtEvent && getElementsAtEvent(chart.getElementsAtEventForMode(e, 'index', {\n      intersect: true\n    }, false), e);\n  };\n\n  var updateChart = function updateChart() {\n    if (!chart) return;\n\n    if (options) {\n      chart.options = _extends({}, options);\n    }\n\n    if (!chart.config.data) {\n      chart.config.data = computedData;\n      chart.update();\n      return;\n    }\n\n    var _computedData$dataset = computedData.datasets,\n        newDataSets = _computedData$dataset === void 0 ? [] : _computedData$dataset,\n        newChartData = _objectWithoutPropertiesLoose(computedData, [\"datasets\"]);\n\n    var _chart$config$data$da = chart.config.data.datasets,\n        currentDataSets = _chart$config$data$da === void 0 ? [] : _chart$config$data$da;\n    assign(chart.config.data, newChartData);\n    chart.config.data.datasets = newDataSets.map(function (newDataSet) {\n      var currentDataSet = find(currentDataSets, function (d) {\n        return d.label === newDataSet.label && d.type === newDataSet.type;\n      });\n      if (!currentDataSet || !newDataSet.data) return newDataSet;\n\n      if (!currentDataSet.data) {\n        currentDataSet.data = [];\n      } else {\n        currentDataSet.data.length = newDataSet.data.length;\n      }\n\n      assign(currentDataSet.data, newDataSet.data);\n      return _extends({}, currentDataSet, newDataSet, {\n        data: currentDataSet.data\n      });\n    });\n    chart.update();\n  };\n\n  var destroyChart = function destroyChart() {\n    if (chart) chart.destroy();\n  };\n\n  useEffect(function () {\n    renderChart();\n    return function () {\n      return destroyChart();\n    };\n  }, []);\n  useEffect(function () {\n    if (redraw) {\n      destroyChart();\n      setTimeout(function () {\n        renderChart();\n      }, 0);\n    } else {\n      updateChart();\n    }\n  }, [props, computedData]);\n  return React.createElement(\"canvas\", Object.assign({}, rest, {\n    height: height,\n    width: width,\n    ref: canvas,\n    id: id,\n    className: className,\n    onClick: onClick,\n    \"data-testid\": 'canvas',\n    role: 'img'\n  }), fallbackContent);\n});\nvar Line = forwardRef(function (props, ref) {\n  return React.createElement(ChartComponent, Object.assign({}, props, {\n    type: 'line',\n    ref: ref,\n    options: props.options || {}\n  }));\n});\nvar Bar = forwardRef(function (props, ref) {\n  return React.createElement(ChartComponent, Object.assign({}, props, {\n    type: 'bar',\n    ref: ref,\n    options: props.options || {}\n  }));\n});\nvar Radar = forwardRef(function (props, ref) {\n  return React.createElement(ChartComponent, Object.assign({}, props, {\n    type: 'radar',\n    ref: ref,\n    options: props.options || {}\n  }));\n});\nvar Doughnut = forwardRef(function (props, ref) {\n  return React.createElement(ChartComponent, Object.assign({}, props, {\n    type: 'doughnut',\n    ref: ref,\n    options: props.options || {}\n  }));\n});\nvar PolarArea = forwardRef(function (props, ref) {\n  return React.createElement(ChartComponent, Object.assign({}, props, {\n    type: 'polarArea',\n    ref: ref,\n    options: props.options || {}\n  }));\n});\nvar Bubble = forwardRef(function (props, ref) {\n  return React.createElement(ChartComponent, Object.assign({}, props, {\n    type: 'bubble',\n    ref: ref,\n    options: props.options || {}\n  }));\n});\nvar Pie = forwardRef(function (props, ref) {\n  return React.createElement(ChartComponent, Object.assign({}, props, {\n    type: 'pie',\n    ref: ref,\n    options: props.options || {}\n  }));\n});\nvar Scatter = forwardRef(function (props, ref) {\n  return React.createElement(ChartComponent, Object.assign({}, props, {\n    type: 'scatter',\n    ref: ref,\n    options: props.options || {}\n  }));\n});\nvar defaults = defaults$1;\nvar Chart = Chart$2;\nexport default ChartComponent;\nexport { Bar, Bubble, Chart, Doughnut, Line, Pie, PolarArea, Radar, Scatter, defaults };"],"sourceRoot":""}