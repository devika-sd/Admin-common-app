{"version":3,"sources":["store/actions.js","Actions/user-action.js","Actions/order-action.js","config.js","Actions/auth-actions.js","App/layout/Loader/index.js","hoc/_Aux/index.js","App/layout/ScrollToTop/index.js","route.js","App/index.js","serviceWorker.js","store/reducer.js","Reducer/user-reducer.js","Reducer/auth-reducer.js","Reducer/order-reducer.js","index.js","services/auth-header.js"],"names":["__webpack_require__","d","__webpack_exports__","COLLAPSE_MENU","COLLAPSE_TOGGLE","FULL_SCREEN","FULL_SCREEN_EXIT","CHANGE_LAYOUT","NAV_CONTENT_LEAVE","NAV_COLLAPSE_LEAVE","SEARCH","FETCH_USERS","UPDATE_USER","LOGIN_USER","ADD_USER","ERROR_USER","FILTER_USER","RESET_USER","filteruserbyname","name","page","limit","console","log","filter","dispatch","fetch","headers","authHeader","then","res","json","data","type","payload","fetchusers","message","arguments","length","undefined","total","newdata","Object","C_Users_devik_Desktop_admin_Final_app_master_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","updateusers","_id","roleData","method","body","JSON","stringify","success","deleteusers","email","response","blockusers","status","loginusers","user","content-type","token","localStorage","setItem","addusers","users","saveUser","FETCH_ORDERS","UPDATE_ORDERS","ERROR_ORDERS","RESET_ORDERS","FETCH_STATUS_COUNT","fetchorders","updateorders","fetchOrderStatusCount","_services_auth_header__WEBPACK_IMPORTED_MODULE_0__","URL","orderdetails","defaultPath","basename","layout","preLayout","collapseMenu","layoutType","navIconColor","headerBackColor","navBackColor","navBrandColor","navBackImage","rtlLayout","navFixedLayout","headerFixedLayout","boxLayout","navDropdownIcon","navListIcon","navActiveListColor","navListTitleColor","navListTitleHide","configBlock","layout6Background","layout6BackSize","USER_LOGIN","RESET_AUTH","userLogin","removeItem","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","loader","a","createElement","className","Aux","props","children","ScrollToTop","prevProps","this","location","window","scrollTo","React","Component","withRouter","route","path","exact","component","lazy","Promise","all","e","bind","AdminLayout","Loadable","loading","Loader","App","menu","routes","map","index","react_default","react_router","key","render","_Aux","layout_ScrollToTop","react","fallback","Boolean","hostname","match","initialState","objectSpread","isOpen","isTrigger","config","isFullScreen","searchword","reducer","state","action","trigger","open","actionTypes","triggerIndex","indexOf","id","item","concat","toConsumableArray","password","photo","phone","addresses","currentUser","totaluser","actions","userid","authenticated","orders","orderStatusCount","New","Packed","Shipped","Completed","Cancelled","Delayed","totalorders","myEnhancer","applyMiddleware","storeAPI","next","result","getState","thunkMiddleware","appStore","createStore","combineReducers","userReducer","authReducer","orderReducer","store","app","es","react_router_dom","src_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","getItem","Authorization"],"mappings":"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","file":"static/js/main.36423a8f.chunk.js","sourcesContent":["export const COLLAPSE_MENU = 'COLLAPSE_MENU';\r\nexport const COLLAPSE_TOGGLE = 'COLLAPSE_TOGGLE';\r\nexport const FULL_SCREEN = 'FULL_SCREEN';\r\nexport const FULL_SCREEN_EXIT = 'FULL_SCREEN_EXIT';\r\nexport const CHANGE_LAYOUT = 'CHANGE_LAYOUT';\r\nexport const NAV_CONTENT_LEAVE = 'NAV_CONTENT_LEAVE';\r\nexport const NAV_COLLAPSE_LEAVE = 'NAV_COLLAPSE_LEAVE';\r\nexport const SEARCH = \"SEARCH\";\r\n","import authHeader from '../services/auth-header'\r\n\r\nexport const FETCH_USERS = \"FETCH_USERS\"\r\nexport const UPDATE_USER = \"UPDATE_USER\"\r\nexport const LOGIN_USER = \"LOGIN_USER\"\r\nexport const ADD_USER = \"ADD_USER\"\r\nexport const ERROR_USER = \"ERROR_USER\"\r\nexport const FILTER_USER = \"FILTER_USER\"\r\nexport const RESET_USER = \"RESET_USER\"\r\n\r\nexport const filteruserbyname = (name,page,limit) => {\r\n    //add your code\r\n    console.log(\"***************\"+name,page,limit);\r\n    var filter = 'email[regex]='+name+'&page='+page+'&limit='+limit;\r\n    console.log(\"*************\"+filter+\"************\")\r\n    return dispatch => {\r\n        fetch('http://localhost:8080/api/v1/users/?sort=name&'+filter , {\r\n            headers: authHeader()\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                //this.setState({ users: data.data })\r\n                console.log(data)\r\n                dispatch({ type: FILTER_USER, payload: data });\r\n            })\r\n    }\r\n}\r\n\r\nexport const fetchusers = (filter,message='') => {\r\n    //add your code\r\n    console.log(\"***************\"+filter);\r\n    return dispatch => {\r\n        fetch('http://localhost:8080/api/v1/users?sort=name&' + filter , {\r\n            headers: authHeader()\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                //this.setState({ users: data.data })\r\n                console.log(data.total)\r\n                var newdata = {...data,message}\r\n                dispatch({ type: FETCH_USERS, payload: newdata });\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateusers = (_id,roleData) => {\r\n    //add your code\r\n    return dispatch => {\r\n        fetch('http://localhost:8080/api/v1/users/'+_id,\r\n            {\r\n                method: 'PUT',\r\n                headers: authHeader(),\r\n                body: JSON.stringify(roleData)\r\n            })\r\n            .then(res=>res.json())\r\n            .then(data => {\r\n                console.log(\"*************\"+data.success);\r\n                if (data.success === true) {\r\n                    // this.setState({ message: \"Successfully inserted\" })\r\n                    dispatch({ type: UPDATE_USER, payload: data });\r\n                }\r\n                else{\r\n                    console.log(\"*************\"+data.success);\r\n                    dispatch({\r\n                        type: ERROR_USER,\r\n                        payload: data\r\n                    });\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const deleteusers = (email, filter) => {\r\n    //add your code\r\n    return dispatch => {\r\n        fetch('http://localhost:8080/api/v1/users/' + email, {\r\n            method: 'DELETE',\r\n            // headers: { 'Content-Type': 'application/json' }\r\n            headers: authHeader()\r\n            //body: JSON.stringify(inputs)\r\n        })\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                console.log(data)\r\n                dispatch(fetchusers(filter,data.message));\r\n            });\r\n    }\r\n}\r\n\r\nexport const blockusers = (email, status, filter) => {\r\n    //add your code\r\n    return dispatch => {\r\n        fetch('http://localhost:8080/api/v1/users/block/' + email + '&' + !status, {\r\n            method: 'PATCH',\r\n            // headers: { 'Content-Type': 'application/json' }\r\n            //body: JSON.stringify(inputs)\r\n            headers: authHeader()\r\n        })\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                //dispatch({type: MESSAGE_USER,payload:data});\r\n                dispatch(fetchusers(filter,data.message));\r\n            });\r\n    }\r\n}\r\n\r\nexport const loginusers = (user) => {\r\n    //add your code\r\n    return dispatch => {\r\n\r\n        return fetch('http://localhost:8080/api/v1/users/login', {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            },\r\n            method: 'POST',\r\n            body: JSON.stringify(user)\r\n            })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if (data.success) {\r\n                    // localStorage.setItem('token', data.token);\r\n                    console.log(\"token\"+data.token)\r\n                    localStorage.setItem('token', data.token);\r\n                    dispatch({\r\n                        type: LOGIN_USER,\r\n                        payload: data\r\n                    });\r\n                    // show an alert message or transition into dashboard component ERROR_USER\r\n                }\r\n                else {\r\n                    dispatch({\r\n                        type: ERROR_USER,\r\n                        payload: data\r\n                    });\r\n                }\r\n            })\r\n        }\r\n}\r\nconst saveUser = (users) => {\r\n    return {\r\n        type: ADD_USER,\r\n        payload: users\r\n    }\r\n}\r\n\r\nexport const addusers = (user) => {\r\n    //add your code\r\n    return dispatch => {\r\n        fetch('http://localhost:8080/api/v1/users/', {\r\n            method: 'POST',\r\n            headers: authHeader(),\r\n            body: JSON.stringify(user)\r\n        })\r\n            .then(res => res.json())\r\n            .then(users => {\r\n                console.log(users)\r\n                if(users.success)\r\n                {\r\n                    // dispatch(fetchusers(\"\"));\r\n                    dispatch(saveUser(users));\r\n                }\r\n                else\r\n                {\r\n                    dispatch({\r\n                        type: ERROR_USER,\r\n                        payload: users\r\n                    });\r\n                }\r\n                \r\n            })\r\n    }\r\n}\r\n","import authHeader from '../services/auth-header'\r\n\r\nexport const FETCH_ORDERS = \"FETCH_ORDERS\"\r\nexport const UPDATE_ORDERS = \"UPDATE_ORDERS\"\r\nexport const ERROR_ORDERS = \"ERROR_ORDERS\"\r\nexport const RESET_ORDERS = \"RESET_ORDERS\"\r\nexport const FETCH_STATUS_COUNT = \"FETCH_STATUS_COUNT\"\r\n\r\nconst URL =\"http://localhost:8080/api/v1/orders/\";\r\n\r\nexport const fetchorders = (filter) => {\r\n    //add your code\r\n    console.log(\"*******ORDER********\"+filter);\r\n    return dispatch => {\r\n        fetch(URL+'?sort=-orderDate&' + filter , {\r\n            headers: authHeader()\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                //this.setState({ users: data.data })\r\n                console.log(data.total)\r\n                dispatch({ type: FETCH_ORDERS, payload: data });\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateorders = (_id,orderdetails) => {\r\n    //add your code\r\n    return dispatch => {\r\n        fetch(URL+_id,\r\n            {\r\n                method: 'PATCH',\r\n                headers: authHeader(),\r\n                body: JSON.stringify(orderdetails)\r\n            })\r\n            .then(res=>res.json())\r\n            .then(data => {\r\n                console.log(\"*************\"+data.success);\r\n                if (data.success === true) {\r\n                    // this.setState({ message: \"Successfully inserted\" })\r\n                    dispatch({ type: UPDATE_ORDERS, payload: data });\r\n                }\r\n                else{\r\n                    console.log(\"*************\"+data.success);\r\n                    dispatch({\r\n                        type: ERROR_ORDERS,\r\n                        payload: data.message\r\n                    });\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const fetchOrderStatusCount = () => {\r\n\r\n    return dispatch => {\r\n        fetch(URL + \"piecount\", {\r\n            headers: authHeader()\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(\"********FETCH_STATUS_COUNT******\")\r\n                console.log(data.data);\r\n\r\n                dispatch({ type: FETCH_STATUS_COUNT, payload: data.data });\r\n            })\r\n    }\r\n}","export default {\r\n    defaultPath: '/login',\r\n    basename: '', // only at build time to set, like /datta-able\r\n    layout: 'vertical', // vertical, horizontal (not available in lite version)\r\n    preLayout: null, // (not available in lite version)\r\n    collapseMenu: false, // mini-menu\r\n    layoutType: 'menu-light', // menu-dark, (menu-light, dark are not available in lite version)\r\n    navIconColor: false,\r\n    headerBackColor: 'header-default', // header-default, (header-blue, header-red, header-purple, header-lightblue, header-dark are not available in lite version)\r\n    navBackColor: 'navbar-default', // navbar-default, (navbar-blue, navbar-red, navbar-purple, navbar-lightblue, navbar-dark are not available in lite version)\r\n    navBrandColor: 'brand-default', // brand-default, (brand-blue, brand-red, brand-purple, brand-lightblue, brand-dark are not available in lite version)\r\n    navBackImage: false, // not available in lite version\r\n    rtlLayout: false, // not available in lite version\r\n    navFixedLayout: true,\r\n    headerFixedLayout: false, // not available in lite version\r\n    boxLayout: false,\r\n    navDropdownIcon: 'style1', // style1, (style2, style3 are not available in lite version)\r\n    navListIcon: 'style1', // style1, (style2, style3, style4, style5, style6 are not available in lite version)\r\n    navActiveListColor: 'active-default', // active-default, (active-blue, active-red, active-purple, active-lightblue, active-dark are not available in lite version)\r\n    navListTitleColor: 'title-default', // title-default, (title-blue, title-red, title-purple, title-lightblue, title-dark are not available in lite version)\r\n    navListTitleHide: false, // not available in lite version\r\n    configBlock: false, // not available in lite version\r\n    layout6Background : 'linear-gradient(to right, #A445B2 0%, #D41872 52%, #FF0066 100%)', // used only for pre-layout = layout-6\r\n    layout6BackSize : '', // used only for pre-layout = layout-6\r\n};","export const USER_LOGIN = \"USER_LOGIN\"\r\nexport const RESET_AUTH=\"RESET_AUTH\"\r\n\r\n\r\nexport const login = (success) => {\r\n    console.log('In auth action: ', success)\r\n    if(!success){\r\n        console.log('Removing token ****************** ')\r\n        localStorage.removeItem('token');\r\n    }\r\n    return {\r\n        type: USER_LOGIN,\r\n        payload: success\r\n    }\r\n}\r\n\r\nexport const userLogin = (user) => {\r\n\r\n    // hardcoded\r\n    // let workouts =  [\r\n    //     {\"title\": \"Run for 5 mins (from actions)\", \"desc\": \"test desc\", cbpm: 343}\r\n    // ]\r\n\r\n    // delayed dispatch available\r\n\r\n    console.log('In fech workout action *******************************')\r\n    return dispatch => {\r\n\r\n        return fetch('http://localhost:8080/api/v1/users/login', {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            },\r\n            method: 'POST',\r\n            body: JSON.stringify(user)\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            console.log(data);\r\n            if(data.success){\r\n                console.log('In auth servicee ......')\r\n                localStorage.setItem('token', data.token);\r\n                dispatch(login(data.success));\r\n                // show an alert message or transition into dashboard component\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n\r\n    // fetch it from server side\r\n\r\n    // return {\r\n    //     type: FETCH_WORKOUTS,\r\n    //     payload: workouts\r\n    // }\r\n}","import React from 'react';\r\n\r\nconst loader = () => {\r\n    return (\r\n        <div className=\"loader-bg\">\r\n            <div className=\"loader-track\">\r\n                <div className=\"loader-fill\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default loader;","const Aux = (props) => props.children;\r\n\r\nexport default Aux;","import React from 'react';\r\nimport { withRouter } from 'react-router';\r\n\r\nclass ScrollToTop extends React.Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.location !== prevProps.location) {\r\n            window.scrollTo(0, 0)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);","import React from 'react';\r\n\r\nconst Signin1 = React.lazy(() => import('./Admin-part1/Login/SignIn1'));\r\n\r\nconst route = [\r\n    { path: '/login', exact: true, name: 'Signin 1', component: Signin1 }\r\n];\r\n\r\nexport default route;","import React, { Component, Suspense } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Loadable from 'react-loadable';\n\nimport '../../node_modules/font-awesome/scss/font-awesome.scss';\n\nimport Loader from './layout/Loader'\nimport Aux from \"../hoc/_Aux\";\nimport ScrollToTop from './layout/ScrollToTop';\nimport routes from \"../route\";\n\nconst AdminLayout = Loadable({\n    loader: () => import('./layout/AdminLayout'),\n    loading: Loader\n});\n\nclass App extends Component {\n    render() {\n        const menu = routes.map((route, index) => {\n          return (route.component) ? (\n              <Route\n                  key={index}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  render={props => (\n                      <route.component {...props} />\n                  )} />\n          ) : (null);\n        });\n\n        return (\n            <Aux>\n                <ScrollToTop>\n                    <Suspense fallback={<Loader/>}>\n                        <Switch>\n                            {menu}\n                            <Route path=\"/\" component={AdminLayout} />\n                        </Switch>\n                    </Suspense>\n                </ScrollToTop>\n            </Aux>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from './actions';\r\nimport config from './../config';\r\n\r\nconst initialState = {\r\n    isOpen: [], //for active default menu\r\n    isTrigger: [], //for active default menu, set blank for horizontal\r\n    ...config,\r\n    isFullScreen: false, // static can't change\r\n    searchword:\"\"\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    let trigger = [];\r\n    let open = [];\r\n\r\n    switch (action.type) {\r\n        case actionTypes.SEARCH:\r\n            return {\r\n                ...state,\r\n                searchword:action.payload\r\n            }\r\n        case actionTypes.COLLAPSE_MENU:\r\n            return {\r\n                ...state,\r\n                collapseMenu: !state.collapseMenu\r\n            };\r\n        case actionTypes.COLLAPSE_TOGGLE:\r\n            if (action.menu.type === 'sub') {\r\n                open = state.isOpen;\r\n                trigger = state.isTrigger;\r\n\r\n                const triggerIndex = trigger.indexOf(action.menu.id);\r\n                if (triggerIndex > -1) {\r\n                    open = open.filter(item => item !== action.menu.id);\r\n                    trigger = trigger.filter(item => item !== action.menu.id);\r\n                }\r\n\r\n                if (triggerIndex === -1) {\r\n                    open = [...open, action.menu.id];\r\n                    trigger = [...trigger, action.menu.id];\r\n                }\r\n            } else {\r\n                open = state.isOpen;\r\n                const triggerIndex = (state.isTrigger).indexOf(action.menu.id);\r\n                trigger = (triggerIndex === -1) ? [action.menu.id] : [];\r\n                open = (triggerIndex === -1) ? [action.menu.id] : [];\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                isOpen: open,\r\n                isTrigger: trigger\r\n            };\r\n        case actionTypes.NAV_CONTENT_LEAVE:\r\n            return {\r\n                ...state,\r\n                isOpen: open,\r\n                isTrigger: trigger,\r\n            };\r\n        case actionTypes.NAV_COLLAPSE_LEAVE:\r\n            if (action.menu.type === 'sub') {\r\n                open = state.isOpen;\r\n                trigger = state.isTrigger;\r\n\r\n                const triggerIndex = trigger.indexOf(action.menu.id);\r\n                if (triggerIndex > -1) {\r\n                    open = open.filter(item => item !== action.menu.id);\r\n                    trigger = trigger.filter(item => item !== action.menu.id);\r\n                }\r\n                return {\r\n                    ...state,\r\n                    isOpen: open,\r\n                    isTrigger: trigger,\r\n                };\r\n            }\r\n            return {...state};\r\n        case actionTypes.FULL_SCREEN :\r\n            return {\r\n                ...state,\r\n                isFullScreen: !state.isFullScreen\r\n            };\r\n        case actionTypes.FULL_SCREEN_EXIT:\r\n            return {\r\n                ...state,\r\n                isFullScreen: false\r\n            };\r\n        case actionTypes.CHANGE_LAYOUT:\r\n            return {\r\n                ...state,\r\n                layout: action.layout\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actions from '../Actions/user-action';\r\nlet initialState = {\r\n    users: [\r\n        {\r\n            email:'',\r\n            password:'',\r\n            name:'',\r\n            photo:'',\r\n            phone:'',\r\n            addresses:[]\r\n        }\r\n    ],\r\n    currentUser: \"\",\r\n    totaluser: \"\",\r\n    message:''\r\n}\r\n\r\n// Reducers in store to modify state -- don't directly manipulate state\r\nconst reducer = (state = initialState, action) => {\r\n    console.log('Action recieved at reducer***  ', action);\r\n    switch (action.type) {\r\n        case actions.FETCH_USERS:\r\n            return {\r\n                ...state,\r\n                message: action.payload.message,\r\n                users: action.payload.data,\r\n                totaluser: action.payload.total,\r\n            }\r\n        case actions.UPDATE_USER:\r\n            return {\r\n                ...state,\r\n                users: action.payload.data,\r\n                message: action.payload.message\r\n            }\r\n        case actions.LOGIN_USER:\r\n            return {\r\n                // users: action.payload\r\n                ...state,\r\n                currentUser: action.payload.userid,\r\n                message: action.payload.message\r\n            }\r\n        case actions.ERROR_USER:\r\n            return {\r\n                // users: action.payload \r\n                ...state,\r\n                message: action.payload.message\r\n            }\r\n        case actions.ADD_USER:\r\n            return {\r\n                ...state,\r\n                message: action.payload.message\r\n            }\r\n        case actions.FILTER_USER:\r\n            return {\r\n                ...state,\r\n                users: action.payload.data,\r\n                totaluser: action.payload.total\r\n            }\r\n        case actions.RESET_USER: return initialState \r\n        default: return state\r\n    }\r\n\r\n}\r\n\r\nexport default reducer;","import * as actions from '../Actions/auth-actions';\r\nlet initialState = {\r\n    authenticated: false\r\n}\r\n// Reducers in store to modify state -- don't directly manipulate state\r\nconst reducer = (state = initialState, action) =>{\r\n    console.log('Action recieved at reducer***  ', action);\r\n    switch(action.type){\r\n        case actions.USER_LOGIN:\r\n            return {\r\n                authenticated: action.payload\r\n            }  \r\n        case actions.RESET_AUTH: return initialState    \r\n        default : return state\r\n    }\r\n\r\n}\r\nexport default reducer;","import * as actions from '../Actions/order-action';\r\nlet initialState = {\r\n    orders: [\r\n    ],\r\n    orderStatusCount: [\r\n        { New: 0 },\r\n        { Packed: 0 },\r\n        { Shipped: 0 },\r\n        { Completed: 0 },\r\n        { Cancelled: 0 },\r\n        { Delayed: 0 }\r\n    ],\r\n    totalorders:\"\",\r\n    message:''\r\n}\r\n\r\nconst reducer = (state = initialState, action) =>{\r\n    console.log('Action recieved at reducer***  ', action);\r\n    switch(action.type){\r\n        case actions.FETCH_ORDERS:\r\n            return {\r\n                ...state,\r\n                orders: action.payload.data,\r\n                totalorders:action.payload.total\r\n            }\r\n        case actions.UPDATE_ORDERS:\r\n            return {\r\n                ...state,\r\n                message: action.payload.message\r\n            }\r\n        case actions.ERROR_ORDERS:\r\n            return {\r\n                // users: action.payload\r\n                ...state,\r\n                message: action.payload.message\r\n            }\r\n         case actions.FETCH_STATUS_COUNT:\r\n            return {\r\n                ...state,\r\n                orderStatusCount: action.payload,\r\n\r\n            }\r\n        case actions.RESET_ORDERS: return initialState\r\n        default : return state\r\n    }\r\n \r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter} from 'react-router-dom';\n\nimport App from './App/index';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './store/reducer';\nimport config from './config';\n\nimport {applyMiddleware, combineReducers, createStore} from 'redux';\nimport userReducer from './Reducer/user-reducer';\nimport authReducer from './Reducer/auth-reducer';\nimport orderReducer from './Reducer/order-reducer';\nimport thunkMiddleware from 'redux-thunk';\n\nconst loggerMiddleware = storeAPI => next => action => {\n    console.log('dispatching', action)\n    let result = next(action)\n    console.log('next state', storeAPI.getState())\n    return result\n  }\n  \nconst myEnhancer = applyMiddleware(loggerMiddleware,thunkMiddleware)\nconst appStore = createStore(combineReducers({userReducer,authReducer,orderReducer,reducer}) , myEnhancer)\n\nwindow.store=appStore;\n\nconst app = (\n    <Provider store={appStore}>\n        <BrowserRouter basename={config.basename}>\n            {/* basename=\"/datta-able\" */}\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function authHeader() {\r\n    const token = localStorage.getItem('token');\r\n    if(token){\r\n        return {'Authorization': 'Bearer ' + token , 'content-type': 'application/json'}\r\n    }\r\n    else{\r\n        return {'content-type': 'application/json'}\r\n    }\r\n}\r\nexport default authHeader;\r\n"],"sourceRoot":""}